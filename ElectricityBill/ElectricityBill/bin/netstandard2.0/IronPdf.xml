<?xml version="1.0" encoding="utf-8"?>
<doc>
    <assembly>
        <name>IronPdf</name>
    </assembly>
    <members>
        <member name="T:IronPdf.Annotations.TextAnnotation">
            <summary>
            Defines a Sticky-Note style PDF annotation. <seealso cref="M:IronPdf.PdfDocument.AddTextAnnotation(IronPdf.Annotations.TextAnnotation,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" /></summary>
        </member>
        <member name="P:IronPdf.Annotations.TextAnnotation.Color">
            <summary>
            The color of the annotation's 'Sticky Note'
            </summary>
        </member>
        <member name="P:IronPdf.Annotations.TextAnnotation.Contents">
            <summary>
            The contents of the 'sticky note' annotation
            </summary>
        </member>
        <member name="P:IronPdf.Annotations.TextAnnotation.Hidden">
            <summary>
            Hides the annotation from users
            </summary>
        </member>
        <member name="P:IronPdf.Annotations.TextAnnotation.Opacity">
            <summary>
            The opacity of the annotation (valid values are from 0.0 to 1.0)
            </summary>
        </member>
        <member name="P:IronPdf.Annotations.TextAnnotation.OpenByDefault">
            <summary>
            Sets the annotation to be opened and readable by default, without user interaction
            </summary>
        </member>
        <member name="P:IronPdf.Annotations.TextAnnotation.Printable">
            <summary>
            Allows the annotation to be printed when users print the PDF
            </summary>
        </member>
        <member name="P:IronPdf.Annotations.TextAnnotation.ReadOnly">
            <summary>
            Allows the annotation to be printed when users print the PDF
            </summary>
        </member>
        <member name="P:IronPdf.Annotations.TextAnnotation.Rotateable">
            <summary>
            Allows the annotation to be rotated.  E.g.  when the containing page os rotated
            </summary>
        </member>
        <member name="P:IronPdf.Annotations.TextAnnotation.Subject">
            <summary>
            The sub title of the annotation as displayed in the header of the 'sticky note'
            </summary>
        </member>
        <member name="P:IronPdf.Annotations.TextAnnotation.Title">
            <summary>
            The main title of the annotation as displayed in the header of the 'sticky note'
            </summary>
        </member>
        <member name="M:IronPdf.Annotations.TextAnnotation.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this annotation.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:IronPdf.Annotations.TextAnnotation.AnnotationIcon">
            <summary>
            Icons used to interact with (open/close) the annotation with the PDF page.
            </summary>
        </member>
        <member name="F:IronPdf.Annotations.TextAnnotation.AnnotationIcon.NoIcon">
            <summary>
            No icon, this is useful when an annotation will be signified by an existing graphic or object.
            </summary>
        </member>
        <member name="F:IronPdf.Annotations.TextAnnotation.AnnotationIcon.Comment">
            <summary>
            A Comment Icon
            </summary>
        </member>
        <member name="F:IronPdf.Annotations.TextAnnotation.AnnotationIcon.Help">
            <summary>
            A Help Icon
            </summary>
        </member>
        <member name="F:IronPdf.Annotations.TextAnnotation.AnnotationIcon.Insert">
            <summary>
            An 'Insert' Icon
            </summary>
        </member>
        <member name="F:IronPdf.Annotations.TextAnnotation.AnnotationIcon.Key">
            <summary>
            A Key Icon
            </summary>
        </member>
        <member name="F:IronPdf.Annotations.TextAnnotation.AnnotationIcon.NewParagraph">
            <summary>
            A New Paragraph Icon
            </summary>
        </member>
        <member name="F:IronPdf.Annotations.TextAnnotation.AnnotationIcon.Note">
            <summary>
            A Note Icon
            </summary>
        </member>
        <member name="F:IronPdf.Annotations.TextAnnotation.AnnotationIcon.Paragraph">
            <summary>
            A 'Paragraph of Text' Icon
            </summary>
        </member>
        <member name="P:IronPdf.Annotations.TextAnnotation.Icon">
            <summary>
            An icon to visually represent the 'sticky note' annotation
            </summary>
        </member>
        <member name="T:IronPdf.Bookmarks.BookmarkDestinations">
            <summary>
            Bookmark destinations
            </summary>
        </member>
        <member name="T:IronPdf.Bookmarks.IPdfBookMark">
            <summary>
            Represents a PDF bookmark as seen in the sidebar of PDF reader software to help user's navigate.
            </summary>
        </member>
        <member name="P:IronPdf.Bookmarks.IPdfBookMark.Children">
            <summary>
            Bookmarks contained under this bookmark
            </summary>
        </member>
        <member name="P:IronPdf.Bookmarks.IPdfBookMark.DestinationType">
            <summary>
            Type of destination represented by the bookmark
            </summary>
        </member>
        <member name="P:IronPdf.Bookmarks.IPdfBookMark.NextBookmark">
            <summary>
            Next bookmark at the current level, if any
            </summary>
        </member>
        <member name="P:IronPdf.Bookmarks.IPdfBookMark.Parent">
            <summary>
            Bookmark which contains this bookmark
            </summary>
        </member>
        <member name="P:IronPdf.Bookmarks.IPdfBookMark.PageIndex">
            <summary>
            The zero based page number that the bookmark links to.
            </summary>
            <value>
            The index of the page.
            </value>
        </member>
        <member name="P:IronPdf.Bookmarks.IPdfBookMark.PreviousBookmark">
            <summary>
            Previous bookmark at the current level, if any
            </summary>
        </member>
        <member name="P:IronPdf.Bookmarks.IPdfBookMark.Siblings">
            <summary>
            Bookmarks contained at the same level and under the same parent as this bookmark
            </summary>
        </member>
        <member name="P:IronPdf.Bookmarks.IPdfBookMark.Text">
            <summary>
            The display text of the bookmark
            </summary>
        </member>
        <member name="M:IronPdf.Bookmarks.IPdfBookMark.InsertBookMarkAfter(System.String,System.Int32)">
            <summary>
            Insert a new bookmark after the specified bookmark
            </summary>
            <param name="Text">The display text for the link.</param>
            <param name="PageIndex">The zero based page number to link to.  E.g.  Page 1 has a PageIndex of 0</param>
        </member>
        <member name="M:IronPdf.Bookmarks.IPdfBookMark.InsertBookMarkBefore(System.String,System.Int32)">
            <summary>
            Insert a new bookmark after the specified bookmark
            </summary>
            <param name="Text">The display text for the link.</param>
            <param name="PageIndex">The zero based page number to link to.  E.g.  Page 1 has a PageIndex of 0</param>
        </member>
        <member name="T:IronPdf.Bookmarks.PdfBookMark">
            <summary>
            Represents a PDF bookmark as seen in the sidebar of PDF reader software to help user's navigate.
            </summary>
        </member>
        <member name="P:IronPdf.Bookmarks.PdfBookMark.Children">
            <summary>
            Bookmarks contained under this bookmark
            </summary>
        </member>
        <member name="P:IronPdf.Bookmarks.PdfBookMark.DestinationType">
            <summary>
            Type of destination represented by the bookmark
            </summary>
        </member>
        <member name="P:IronPdf.Bookmarks.PdfBookMark.NextBookmark">
            <summary>
            Next bookmark at the current level, if any
            </summary>
        </member>
        <member name="P:IronPdf.Bookmarks.PdfBookMark.Parent">
            <summary>
            Bookmark which contains this bookmark
            </summary>
        </member>
        <member name="P:IronPdf.Bookmarks.PdfBookMark.PageIndex">
            <summary>
            The zero based page number that the bookmark links to.
            </summary>
            <value>
            The index of the page.
            </value>
        </member>
        <member name="P:IronPdf.Bookmarks.PdfBookMark.PreviousBookmark">
            <summary>
            Previous bookmark at the current level, if any
            </summary>
        </member>
        <member name="P:IronPdf.Bookmarks.PdfBookMark.Siblings">
            <summary>
            Bookmarks contained at the same level and under the same parent as this bookmark
            </summary>
        </member>
        <member name="P:IronPdf.Bookmarks.PdfBookMark.Text">
            <summary>
            The display text of the bookmark
            </summary>
        </member>
        <member name="M:IronPdf.Bookmarks.PdfBookMark.InsertBookMarkAfter(System.String,System.Int32)">
            <summary>
            Insert a new bookmark after the specified bookmark
            </summary>
            <param name="Text">The display text for the link.</param>
            <param name="PageIndex">The zero based page number to link to.  E.g.  Page 1 has a PageIndex of 0</param>
        </member>
        <member name="M:IronPdf.Bookmarks.PdfBookMark.InsertBookMarkBefore(System.String,System.Int32)">
            <summary>
            Insert a new bookmark after the specified bookmark
            </summary>
            <param name="Text">The display text for the link.</param>
            <param name="PageIndex">The zero based page number to link to.  E.g.  Page 1 has a PageIndex of 0</param>
        </member>
        <member name="T:IronPdf.Bookmarks.PdfBookMarkCollection">
            <summary>
            Represents a PDF bookmark as seen in the sidebar of PDF reader software to help user's navigate.
            </summary>
        </member>
        <member name="P:IronPdf.Bookmarks.PdfBookMarkCollection.Count">
            <summary>
            Total number of bookmarks, including all nested bookmarks
            </summary>
        </member>
        <member name="P:IronPdf.Bookmarks.PdfBookMarkCollection.FirstBookmark">
            <summary>
            First bookmark within the bookmark collection at the current level
            </summary>
        </member>
        <member name="P:IronPdf.Bookmarks.PdfBookMarkCollection.LastBookmark">
            <summary>
            Last bookmark within the bookmark collection at the current level
            </summary>
        </member>
        <member name="P:IronPdf.Bookmarks.PdfBookMarkCollection.Parent">
            <summary>
            Bookmark which contains this bookmark collection
            </summary>
        </member>
        <member name="M:IronPdf.Bookmarks.PdfBookMarkCollection.GetAllBookmarks">
            <summary>
            Retrieve all bookmarks within this collection, recursively retrieve all children of bookmarks within this collection, and return a flat list
            </summary>
            <returns>A flattened list of all bookmarks in this collection and all of their children</returns>
        </member>
        <member name="M:IronPdf.Bookmarks.PdfBookMarkCollection.GetChildren(System.Int32)">
            <summary>
            Retrieve children of bookmarks within this collection located at the specified depth
            </summary>
            <param name="depth">Depth from which to retrieve children</param>
            <returns>A flattened list of all children of bookmarks contained at the specified depth</returns>
        </member>
        <member name="M:IronPdf.Bookmarks.PdfBookMarkCollection.AddBookMarkAtEnd(System.String,System.Int32)">
            <summary>
            Add a new bookmark at the end of this bookmark collection
            </summary>
            <param name="Text">The display text for the link.</param>
            <param name="PageIndex">The zero based page number to link to.  E.g.  Page 1 has a PageIndex of 0</param>
            <returns>Newly added bookmark</returns>
        </member>
        <member name="M:IronPdf.Bookmarks.PdfBookMarkCollection.AddBookMarkAtStart(System.String,System.Int32)">
            <summary>
            Add a new bookmark at the start of this bookmark collection
            </summary>
            <param name="Text">The display text for the link.</param>
            <param name="PageIndex">The zero based page number to link to.  E.g.  Page 1 has a PageIndex of 0</param>
            <returns>Newly added bookmark</returns>
        </member>
        <member name="M:IronPdf.Bookmarks.PdfBookMarkCollection.GetBookmarkAfter(IronPdf.Bookmarks.IPdfBookMark)">
            <summary>
            Retrieve the next bookmark after the specified bookmark at the current level
            </summary>
            <param name="PreviousBookmark">Previous bookmark</param>
            <returns>Next bookmark at the current level</returns>
        </member>
        <member name="M:IronPdf.Bookmarks.PdfBookMarkCollection.GetBookmarkBefore(IronPdf.Bookmarks.IPdfBookMark)">
            <summary>
            Retrieve the previous bookmark before the specified bookmark at the current level
            </summary>
            <param name="NextBookmark">Next bookmark</param>
            <returns>Previous bookmark at the current level</returns>
        </member>
        <member name="M:IronPdf.Bookmarks.PdfBookMarkCollection.InsertBookMarkAfter(System.String,System.Int32,IronPdf.Bookmarks.IPdfBookMark)">
            <summary>
            Insert a new bookmark after the specified bookmark
            </summary>
            <param name="Text">The display text for the link.</param>
            <param name="PageIndex">The zero based page number to link to.  E.g.  Page 1 has a PageIndex of 0</param>
            <param name="PreviousBookmark">Bookmark after which to insert a new bookmark</param>
        </member>
        <member name="M:IronPdf.Bookmarks.PdfBookMarkCollection.InsertBookMarkBefore(System.String,System.Int32,IronPdf.Bookmarks.IPdfBookMark)">
            <summary>
            Insert a new bookmark before the specified bookmark
            </summary>
            <param name="Text">The display text for the link.</param>
            <param name="PageIndex">The zero based page number to link to.  E.g.  Page 1 has a PageIndex of 0</param>
            <param name="NextBookmark">Bookmark before which to insert a new bookmark</param>
        </member>
        <member name="M:IronPdf.Bookmarks.PdfBookMarkCollection.AddBookmarkInternal(System.String,System.Int32)">
            <summary>
            Internal method for adding a bookmark to the current bookmark collection, without invoking any Pdfium methods
            </summary>
            <param name="text">Bookmark text</param>
            <param name="page_index">Bookmark page index</param>
            <remarks>This method should be invoked when retrieving bookmarks from Pdfium to populate a bookmark collection</remarks>
        </member>
        <member name="T:IronPdf.ChromeHttpLoginCredentials">
            <summary>
            Provides credentials for IronPdf's embedded Chrome browser to log-in to an intranet, extranet or website, impersonating a user.   This
            allows a unique ability to render web-pages as PDFs even on secure intranets, extranets and websites.           
            </summary>
        </member>
        <member name="M:IronPdf.ChromeHttpLoginCredentials.Finalize">
            <summary>
            Destructor cleans up all temporary cookies files for the  HttpLoginCredentials instance.
            </summary>
        </member>
        <member name="F:IronPdf.ChromeHttpLoginCredentials.CustomCookies">
            <summary>
            A Dictionary which allows custom cookies to be posted with every login request, and HTTP request made by
            RenderUriToHml methods.
            </summary>
        </member>
        <member name="F:IronPdf.ChromeHttpLoginCredentials.CustomHttpHeaders">
            <summary>
            A dictionary of custom HTTP headers to be sent with every HTTP Request
            </summary>
            <exclude />
        </member>
        <member name="F:IronPdf.ChromeHttpLoginCredentials.CustomPostFiles">
            <summary>
            Optional, Advanced Usage:  Specifies a collection files to summited on every PDF rendering request.  Allows
            images and documents to be submitted to forms such that the output will be rendered as an PDF. <para>Note:
            The Key is the name of the post field, The value is the full file path.. UrlEncoding is not required.</para></summary>
            <exclude />
        </member>
        <member name="F:IronPdf.ChromeHttpLoginCredentials.CustomPostVariables">
            <summary>
            Optional:  Specifies a collection of HTTP 'POST' variables to submit on every PDF rendering request.  
            <para>Note: The 'key' is the name of the post field, The 'value' is its value.  UrlEncoding is not
            required.</para></summary>
            <exclude />
        </member>
        <member name="F:IronPdf.ChromeHttpLoginCredentials.EnableCookies">
            <summary>
            Enables cookies to be stored and sent when using RenderUriToHml methods.
            </summary>
        </member>
        <member name="F:IronPdf.ChromeHttpLoginCredentials.LoginFormPostVariables">
            <summary>
            Optional:  Specifies a collection of HTTP form variables to post/submit to <see cref="P:IronPdf.ChromeHttpLoginCredentials.LoginFormUrl" />.
            </summary>
            <exclude />
        </member>
        <member name="P:IronPdf.ChromeHttpLoginCredentials.LoginFormUrl">
            <summary>
            Optional:  Gives the URL to post website login-form authentication.  Should be the absolute Url which the
            form's action attribute specifies.
            </summary>
            <exclude />
        </member>
        <member name="P:IronPdf.ChromeHttpLoginCredentials.NetworkPassword">
            <summary>
            Optional: Password credential for Windows / Linux network security authentication.
            </summary>
        </member>
        <member name="P:IronPdf.ChromeHttpLoginCredentials.NetworkUsername">
            <summary>
            Optional: User-name credential for Windows / Linux network security authentication.
            </summary>
        </member>
        <member name="P:IronPdf.ChromeHttpLoginCredentials.Proxy">
            <summary>
            Specifies an Http proxy server.   Use the pattern: http(s)://user-name:password@host:port/
            </summary>
            <exclude />
        </member>
        <member name="P:IronPdf.ChromeHttpLoginCredentials.UserAgent">
            <summary>
            The Http User-Agent header which will be used to fetch any remote HTML.
            </summary>
            <exclude />
        </member>
        <member name="T:IronPdf.ChromePdfRenderer">
            <summary>
            IronPdf.ChromePdfRenderer allows any web page or Html 'snippet' to be turned into a PDF document using an up-to-date embedded Chrome browser.
            <para> As of 2021 Iron Software recommend <see cref="T:IronPdf.ChromePdfRenderer" /> as our best PDF Renderer and a drop-in replacement for this class.</para></summary>
        </member>
        <member name="M:IronPdf.ChromePdfRenderer.#ctor">
            <summary>
            Create a new Chrome Html To PDF renderer.
            </summary>
        </member>
        <member name="M:IronPdf.ChromePdfRenderer.ApplyCookies(System.String,IronPdf.ChromeHttpLoginCredentials)">
            <summary>
            Applies cookies from the specified login credentials class to the specified url
            </summary>
            <param name="Url">Url cookies will apply to</param>
            <param name="Login">Login credentials which includes CustomCookies property</param>
        </member>
        <member name="M:IronPdf.ChromePdfRenderer.ClearCookies">
            <summary>
            Clear cookies for all urls
            </summary>
        </member>
        <member name="M:IronPdf.ChromePdfRenderer.StaticRenderHtmlAsPdf(System.String,IronPdf.ChromePdfRenderOptions,System.String)">
            <summary>
            Creates a PDF file from an Html string, and returns it as an <see cref="T:IronPdf.PdfDocument" /> object which can be edited and saved to disk or served on a website.
            <para>Static version of the RenderHtmlAsPdf method.</para></summary>
            <param name="Html">The Html to be rendered as a PDF.</param>
            <param name="Options">An instance of <see cref="T:IronPdf.ChromePdfRenderOptions" /> that allows configuration of Chrome "HTML to PDF" rendering parameters. </param>
            <param name="Proxy">Specifies an Http proxy server. Use the pattern: http(s)://user-name:password@host:port</param>
            <returns>
            A <see cref="T:IronPdf.PdfDocument" /> with the Html rendered as its contents.
            </returns>
        </member>
        <member name="M:IronPdf.ChromePdfRenderer.StaticRenderHtmlAsPdf(System.String,System.Uri,IronPdf.ChromePdfRenderOptions,System.String)">
            <summary>
            Creates a PDF file from an Html string, and returns it as an <see cref="T:IronPdf.PdfDocument" /> object which can be edited and saved to disk or served on a website.
            <para>Static version of the RenderHtmlAsPdf method.</para></summary>
            <param name="Html">The Html to be rendered as a PDF.</param>
            <param name="BaseUrl">Setting the BaseURL property gives the relative context for hyper-links, images, CSS and JavaScript files. May be a remote URL or local file path.</param>
            <param name="Options">An instance of <see cref="T:IronPdf.ChromePdfRenderOptions" /> that allows configuration of Chrome "HTML to PDF" rendering parameters. </param>
            <param name="Proxy">Specifies an Http proxy server. Use the pattern: http(s)://user-name:password@host:port</param>
            <returns>
            A <see cref="T:IronPdf.PdfDocument" /> with the Html rendered as its contents.
            </returns>
        </member>
        <member name="M:IronPdf.ChromePdfRenderer.StaticRenderHtmlAsPdf(System.String,System.String,IronPdf.ChromePdfRenderOptions,System.String)">
            <summary>
            Creates a PDF file from an Html string, and returns it as an <see cref="T:IronPdf.PdfDocument" /> object which can be edited and saved to disk or served on a website.
            <para>Static version of the RenderHtmlAsPdf method.</para></summary>
            <param name="Html">The Html to be rendered as a PDF.</param>
            <param name="BaseUrlOrPath">Setting the BaseURL property gives the relative context for hyper-links, images, CSS and JavaScript files. May be a remote URL or local file path.</param>
            <param name="Options">An instance of <see cref="T:IronPdf.ChromePdfRenderOptions" /> that allows configuration of Chrome "HTML to PDF" rendering parameters. </param>
            <param name="Proxy">Specifies an Http proxy server. Use the pattern: http(s)://user-name:password@host:port</param>
            <returns>
            A <see cref="T:IronPdf.PdfDocument" /> with the Html rendered as its contents.
            </returns>
        </member>
        <member name="M:IronPdf.ChromePdfRenderer.StaticRenderHtmlAsPdfAsync(System.String,System.Uri,IronPdf.ChromePdfRenderOptions)">
            <summary>
            Creates a PDF file from an Html string, and returns it as an <see cref="T:IronPdf.PdfDocument" /> object which can be edited and saved to disk or served on a website.
            <para>Static Async version of the RenderHtmlAsPdf method.</para></summary>
            <param name="Html">The Html to be rendered as a PDF.</param>
            <param name="BaseUrl">Setting the BaseURL property gives the relative context for hyper-links, images, CSS and JavaScript files. May be a remote URL or local file path.</param>
            <param name="Options">An instance of <see cref="T:IronPdf.ChromePdfRenderOptions" /> that allows configuration of Chrome "HTML to PDF" rendering parameters. </param>
            <returns>
            A <see cref="T:IronPdf.PdfDocument" /> with the Html rendered as its contents.
            </returns>
        </member>
        <member name="M:IronPdf.ChromePdfRenderer.StaticRenderHTMLFileAsPdf(System.String,IronPdf.ChromePdfRenderOptions)">
            <summary>
            Renders an HTML file as a PDF file. Returns a <see cref="T:IronPdf.PdfDocument" /> object which may be edited and saved to disk or served on a website.
            <para>Static version of the RenderHTMLFileAsPdf method.</para></summary>
            <param name="FilePath">Path to an Html file.</param>
            <param name="Options">Optional print options and settings as an instance of <see cref="T:IronPdf.ChromePdfRenderOptions" />.  </param>
            <returns>A <see cref="T:IronPdf.PdfDocument" /> with the Html file rendered as its contents..</returns>
        </member>
        <member name="M:IronPdf.ChromePdfRenderer.StaticRenderHTMLFileAsPdfAsync(System.String,IronPdf.ChromePdfRenderOptions)">
            <summary>
            Renders an HTML file as a PDF file. Returns a <see cref="T:IronPdf.PdfDocument" /> object which may be edited and saved to disk or served on a website.
            <para>Static Async version of the RenderHTMLFileAsPdf method.</para></summary>
            <param name="FilePath">Path to an Html file.</param>
            <param name="Options">Optional print options and settings as an instance of <see cref="T:IronPdf.ChromePdfRenderOptions" />.  </param>
            <returns>A <see cref="T:IronPdf.PdfDocument" /> with the Html file rendered as its contents.</returns>
        </member>
        <member name="M:IronPdf.ChromePdfRenderer.StaticRenderUrlAsPdf(System.String,IronPdf.ChromePdfRenderOptions)">
            <summary>
            Renders all Html and assets at a given Url into a PDF file using IronPdf's embedded Chrome browser as the rendering engine.
            <para>Static version of the RenderUrlAsPdf method. </para></summary>
            <param name="UrlOrPath">An absolute Url.  Points to the Html document to be rendered as a PDF.</param>
            <param name="Options">Optional print options and settings as an instance of <see cref="T:IronPdf.ChromePdfRenderOptions" />.  </param>&gt;
             <returns>A <see cref="T:IronPdf.PdfDocument" /> with the Url rendered as its contents.</returns></member>
        <member name="M:IronPdf.ChromePdfRenderer.StaticRenderUrlAsPdfAsync(System.String,IronPdf.ChromePdfRenderOptions)">
            <summary>
            Renders all Html and assets at a given Url into a PDF file using IronPdf's embedded Chrome browser as the rendering engine.
            <para>Static Async version of the RenderUrlAsPdf method. </para></summary>
            <param name="UrlOrPath">An absolute Url.  Points to the Html document or local file to be rendered as a PDF.</param>
            <param name="Options">Optional print options and settings as an instance of <see cref="T:IronPdf.ChromePdfRenderOptions" />.  </param>&gt;
             <returns>A <see cref="T:IronPdf.PdfDocument" /> with the Url rendered as its contents.</returns></member>
        <member name="M:IronPdf.ChromePdfRenderer.StaticRenderUrlAsPdf(System.Uri,IronPdf.ChromePdfRenderOptions)">
            <summary>
            Renders all Html and assets at a given Url into a PDF file using IronPdf's embedded Chrome browser as the rendering engine.
            <para>Static version of the RenderUrlAsPdf method. </para></summary>
            <param name="Url">An absolute Uri.  Points to the Html document or local file file to be rendered as a PDF.</param>
            <param name="Options">Optional print options and settings as an instance of <see cref="T:IronPdf.ChromePdfRenderOptions" />.  </param>&gt;
             <returns>A <see cref="T:IronPdf.PdfDocument" /> with the Url rendered as its contents.</returns></member>
        <member name="M:IronPdf.ChromePdfRenderer.StaticRenderUrlAsPdfAsync(System.Uri,IronPdf.ChromePdfRenderOptions)">
            <summary>
            Renders all Html and assets at a given Url into a PDF file using IronPdf's embedded Chrome browser as the rendering engine.
            <para>Static Async version of the RenderUrlAsPdf method. </para></summary>
            <param name="Url">An absolute Uri.  Points to the Html document or local file file to be rendered as a PDF.</param>
            <param name="Options">Optional print options and settings as an instance of <see cref="T:IronPdf.ChromePdfRenderOptions" />.  </param>&gt;
             <returns>A <see cref="T:IronPdf.PdfDocument" /> with the Url rendered as its contents.</returns></member>
        <member name="T:IronPdf.ChromePdfRenderOptions">
            <summary>
            Html To PDF output options for <see cref="T:IronPdf.ChromePdfRenderer" />. Specifies options such as Paper-Size, DPI, Headers and Footers and other Chromium specific browser setup options.
            </summary>
        </member>
        <member name="P:IronPdf.ChromePdfRenderOptions.ApplyMarginToHeaderAndFooter">
            <summary>
            Apply margin option to Html Headers and Footers. default is false which make Html Headers and Footers have 0 margin.
            Only support ChromeRender
            </summary>
        </member>
        <member name="P:IronPdf.ChromePdfRenderOptions.CreatePdfFormsFromHtml">
            <summary>
            Turns all Html forms elements into editable PDF forms.
            </summary>
        </member>
        <member name="P:IronPdf.ChromePdfRenderOptions.CssMediaType">
            <summary>
            Enables Media="screen" CSS Styles  and StyleSheets <para>Note: By setting AllowScreenCss=false, IronPdf
            renders PDFs from HTML using CSS for media="print" as if printing a web page in a browser print dialog.</para></summary>
        </member>
        <member name="P:IronPdf.ChromePdfRenderOptions.CustomCssUrl">
            <summary>
            Allows a custom CSS style-sheet  to be applied to Html before rendering.  May be a local file path,  or
            remote url.
            </summary>
        </member>
        <member name="P:IronPdf.ChromePdfRenderOptions.EnableJavaScript">
            <summary>
            Enables JavaScript and Json to be executed  before the page is rendered.  Ideal for printing from Ajax /
            Angular Applications. <para>Also see <see cref="P:IronPdf.ChromePdfRenderOptions.RenderDelay" /></para></summary>
        </member>
        <member name="P:IronPdf.ChromePdfRenderOptions.FirstPageNumber">
            <summary>
            First page number to be used in PDF Headers and Footers.
            <para>S<seealso cref="P:IronPdf.ChromePdfRenderOptions.TextHeader" /></para><para><seealso cref="P:IronPdf.ChromePdfRenderOptions.HtmlHeader" /></para><para><seealso cref="P:IronPdf.ChromePdfRenderOptions.TextFooter" /></para><para><seealso cref="P:IronPdf.ChromePdfRenderOptions.HtmlFooter" /></para></summary>
        </member>
        <member name="P:IronPdf.ChromePdfRenderOptions.FitToPaperMode">
            <summary>
            Behavior when fitting HTML content to a physical paper size.
            Determines <see cref="P:IronPdf.ChromePdfRenderOptions.Zoom" /> and <see cref="P:IronPdf.ChromePdfRenderOptions.ViewPortWidth" />.
            <para>See <seealso cref="T:IronPdf.Engines.Chrome.FitToPaperModes" /> for a detailed description of each mode.</para><para><seealso cref="F:IronPdf.Engines.Chrome.FitToPaperModes.None" /> disables automatic fitting behavior.</para><para><seealso cref="F:IronPdf.Engines.Chrome.FitToPaperModes.Automatic" /> automatically measures and fits HTML content onto each PDF page.</para></summary>
        </member>
        <member name="P:IronPdf.ChromePdfRenderOptions.FitToPaperWidth">
            <exclude />
        </member>
        <member name="P:IronPdf.ChromePdfRenderOptions.GenerateUniqueDocumentIdentifiers">
            <summary>
            Set to  false if you wish to use binary file equality to compare PDFs such as for Unit Tests. 
            <para>if false, <see cref="T:System.Guid" /> is not generated inside PDF DOM (better for unit testing) and <see cref="P:IronPdf.PdfDocument.BinaryData" /> of two identical PDF files is the same.</para><para>If true, <see cref="T:System.Guid" /> is generated inside PDF DOM (better for security) and <see cref="P:IronPdf.PdfDocument.BinaryData" /> of two identical PDF files differs.</para><para>Default value is false.</para></summary>
        </member>
        <member name="P:IronPdf.ChromePdfRenderOptions.GrayScale">
            <summary>
            Outputs a black-and-white PDF
            </summary>
        </member>
        <member name="P:IronPdf.ChromePdfRenderOptions.DPI">
            <exclude />
        </member>
        <member name="P:IronPdf.ChromePdfRenderOptions.HtmlFooter">
            <summary>
            Sets the header content for every PDF page as Html.  Supports 'mail-merge'.
            </summary>
        </member>
        <member name="P:IronPdf.ChromePdfRenderOptions.HtmlHeader">
            <summary>
            Sets the footer content for every PDF page as Html.  Supports 'mail-merge'.
            </summary>
        </member>
        <member name="P:IronPdf.ChromePdfRenderOptions.InputEncoding">
            <summary>
            The input character encoding as a string;
            </summary>
        </member>
        <member name="P:IronPdf.ChromePdfRenderOptions.JpegQuality">
            <exclude />
        </member>
        <member name="P:IronPdf.ChromePdfRenderOptions.MarginBottom">
            <summary>
            Bottom Pdf "paper" margin in millimeters.  Set to zero for border-less and commercial printing applications.
            </summary>
        </member>
        <member name="P:IronPdf.ChromePdfRenderOptions.MarginLeft">
            <summary>
            Left Pdf "paper" margin in millimeters.  Set to zero for border-less and commercial printing applications.
            </summary>
        </member>
        <member name="P:IronPdf.ChromePdfRenderOptions.MarginRight">
            <summary>
            Right Pdf "paper" margin in millimeters.  Set to zero for border-less and commercial printing applications.
            </summary>
        </member>
        <member name="P:IronPdf.ChromePdfRenderOptions.MarginTop">
            <summary>
            Top Pdf "paper" margin in millimeters.  Set to zero for border-less and commercial printing applications.
            </summary>
        </member>
        <member name="T:IronPdf.ChromePdfRenderOptions.PdfPaperOrientation">
            <summary>
            Legacy support. Has been replaced by <see cref="T:IronPdf.Rendering.PdfPaperOrientation" />.
            </summary>
        </member>
        <member name="F:IronPdf.ChromePdfRenderOptions.PdfPaperOrientation.Portrait">
            <summary>
            Vertical orientation.
            </summary>
        </member>
        <member name="F:IronPdf.ChromePdfRenderOptions.PdfPaperOrientation.Landscape">
            <summary>
            Horizontal orientation.
            </summary>
        </member>
        <member name="P:IronPdf.ChromePdfRenderOptions.PaperOrientation">
            <summary>
            The PDF paper orientation. E.g. Portrait or Landscape.
            </summary>
        </member>
        <member name="P:IronPdf.ChromePdfRenderOptions.PaperSize">
            <summary>
            Set an output paper size for PDF pages.  System.Drawing.Printing.PaperKind. <para>Use SetCustomPaperSize(int
            width, int height) for custom sizes.</para></summary>
        </member>
        <member name="P:IronPdf.ChromePdfRenderOptions.PrintHtmlBackgrounds">
            <summary>
            Prints background-colors and images from Html.
            </summary>
        </member>
        <member name="P:IronPdf.ChromePdfRenderOptions.RenderDelay">
            <summary>
            Milliseconds to wait after Html is rendered before printing.  This can use useful when considering the
            rendering of JavaScript, Ajax or animations.
            </summary>
        </member>
        <member name="P:IronPdf.ChromePdfRenderOptions.TextFooter">
            <summary>
            Sets the header content for every PDF page as text.  Supports 'mail-merge' and automatically turns urls into hyperlinks..
            </summary>
        </member>
        <member name="P:IronPdf.ChromePdfRenderOptions.TextHeader">
            <summary>
            Sets the footer content for every PDF page as text.  Supports 'mail-merge' and automatically turns urls into hyperlinks..
            </summary>
        </member>
        <member name="P:IronPdf.ChromePdfRenderOptions.Timeout">
            <summary>
            Render timeout in seconds
            </summary>
        </member>
        <member name="P:IronPdf.ChromePdfRenderOptions.Title">
            <summary>
            PDF Document Name and Title meta-data.  Not required.  Useful for mail-merge and automatic file naming in the IronPdf MVC and Razor extensions.
            </summary>
        </member>
        <member name="P:IronPdf.ChromePdfRenderOptions.ViewPortHeight">
            <summary>
            Defines a virtual screen height used to render HTML to PDF in IronPdf. Measured in pixels. <para>Viewport
            size is important in modern responsive HTML5 + CSS3 websites (e.g. Bootstrap framework websites) because the
            rendering and order of elements on the screen is dependent on viewport size.</para><para>The default
            viewport is 1280px wide by 1024px high to ensure the desktop version of a website is rendered unless
            otherwise specified.   Smaller sizes (particularly width) will render responsive versions of many
            websites.</para></summary>
        </member>
        <member name="P:IronPdf.ChromePdfRenderOptions.ViewPortWidth">
            <summary>
            Defines a virtual screen width used to render HTML to PDF in IronPdf. Measured in pixels. <para>Viewport
            size is important in modern responsive HTML5 + CSS3 websites (e.g. Bootstrap framework websites) because the
            rendering and order of elements on the screen is dependent on viewport size.</para><para>The default
            viewport is 1280px wide by 1024px high to ensure the desktop version of a website is rendered unless
            otherwise specified.   Smaller sizes (particularly width) will render responsive versions of many
            website</para></summary>
        </member>
        <member name="P:IronPdf.ChromePdfRenderOptions.Zoom">
            <summary>
            Percentage zoom level when printing a document to PDF. Enlarges the rendering size of Html documents.
            <para>Only used when <see cref="P:IronPdf.ChromePdfRenderOptions.FitToPaperMode" /> is set to <see cref="F:IronPdf.Engines.Chrome.FitToPaperModes.None" /></para></summary>
        </member>
        <member name="M:IronPdf.ChromePdfRenderOptions.Clone">
            <summary>
            Supports <see cref="T:System.ICloneable" />.  Creates a deep copy of this class instance.
            </summary>
            <returns>A deep clone of this instance.  Use explicit casting to convert object back to the intended type. </returns>
        </member>
        <member name="M:IronPdf.ChromePdfRenderOptions.SetCustomPaperSizeinCentimeters(System.Double,System.Double)">
            <summary>
            Set an output paper size for PDF pages.  Dimensions are in Centimeters.
            </summary>
            <param name="width">Custom paper width in cm.</param>
            <param name="height">&gt;Custom paper height in cm.</param>
        </member>
        <member name="M:IronPdf.ChromePdfRenderOptions.SetCustomPaperSizeInInches(System.Double,System.Double)">
            <summary>
            Set an output paper size for PDF pages.  Dimensions are in Inches.
            </summary>
            <param name="width">Custom paper width in Inches.</param>
            <param name="height">&gt;Custom paper height in Inches.</param>
        </member>
        <member name="M:IronPdf.ChromePdfRenderOptions.SetCustomPaperSizeinMilimeters(System.Double,System.Double)">
            <summary>
            Set an output paper size for PDF pages.  Dimensions are in millimeters.
            </summary>
            <param name="width">Custom paper width in millimeters.</param>
            <param name="height">&gt;Custom paper height in millimeters.</param>
        </member>
        <member name="M:IronPdf.ChromePdfRenderOptions.SetCustomPaperSizeinPixelsOrPoints(System.Double,System.Double,System.Int32)">
            <summary>
            Set an output paper size for PDF pages.  Dimensions are in screen Pixels or printer Points.
            </summary>
            <param name="width">Custom paper width in pixels/points.</param>
            <param name="height">&gt;Custom paper height in pixels/points.</param>
            <param name="DPI">&gt;Intended print resolution of the PDF.  To be clear PDFs have no fixed DPI/PPI value for rendering. 72 and 96 are common onscreen values.  300 is a comon value used in commercial printing. </param>
        </member>
        <member name="T:IronPdf.Deployment.IDeployment">
            <exclude />
        </member>
        <member name="P:IronPdf.Deployment.IDeployment.Path">
            <summary>
            Represent a path to a folder that contains the wkhtmltox.dll  library and any dependencies it may have.
            </summary>
        </member>
        <member name="M:IronPdf.Deployment.IDeployment.Cleanup">
            <summary>
            Cleans wkhtlmtopdf dependencies from the specified path
            </summary>
        </member>
        <member name="M:IronPdf.Deployment.IDeployment.Deploy">
            <summary>
            Deploys wkhtlmtopdf dependencies to the specified path
            </summary>
        </member>
        <member name="T:IronPdf.Editing.HtmlStamp">
            <summary>
            Methods to edit PDF documents by 'stamping' additional content into the foreground or background.
            </summary>
        </member>
        <member name="P:IronPdf.Editing.HtmlStamp.AutoCenterStampContentOnStampCanvas">
            <summary>
            The automatic centers stamp content within stamp canvas as defined by Width and Height.
            </summary>
        </member>
        <member name="P:IronPdf.Editing.HtmlStamp.Html">
            <summary>
            The HTML fragment which will be stamped onto your PDF.  All external  references to javascript, CSS and
            image files will be relative to <see cref="P:IronPdf.Editing.HtmlStamp.HtmlBaseUrl" />.
            </summary>
        </member>
        <member name="P:IronPdf.Editing.HtmlStamp.HtmlBaseUrl">
            <summary>
            The HTML base URL for which references to external CSS, Javascript and Image files will be relative. <para>A
            trick to make references relative to a your project file is <code>HtmlBaseUrl = new
            Uri(System.Reflection.Assembly.GetEntryAssembly().Location).AbsoluteUri</code></para></summary>
        </member>
        <member name="P:IronPdf.Editing.HtmlStamp.Hyperlink">
            <summary>
            Makes the entire stamp link to a web hyperlink. Note that HTML links created by &lt;a href=''&gt; tags are
            not reserved by stamping.
            </summary>
        </member>
        <member name="P:IronPdf.Editing.HtmlStamp.Location">
            <summary>
            Defines default position of the stamp on the page
            </summary>
        </member>
        <member name="P:IronPdf.Editing.HtmlStamp.Opacity">
            <summary>
            Allows the stamp to be transparent. 0 is invisible, 100 if fully opaque.
            </summary>
        </member>
        <member name="P:IronPdf.Editing.HtmlStamp.Rotation">
            <summary>
            Rotates the stamp clockwise from 0 to 360 degrees as specified.
            </summary>
        </member>
        <member name="M:IronPdf.Editing.HtmlStamp.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IronPdf.Editing.HtmlStamp" /> class.
            </summary>
        </member>
        <member name="M:IronPdf.Editing.HtmlStamp.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IronPdf.Editing.HtmlStamp" /> class.
            </summary>
            <param name="Html">The HTML fragment which will be stamped onto your PDF.</param>
        </member>
        <member name="M:IronPdf.Editing.HtmlStamp.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:IronPdf.Editing.HtmlStamp" /> class.
            </summary>
            <param name="Html">The HTML fragment which will be stamped onto your PDF.</param>
            <param name="WidthInMM">The width of the stamp in mm.</param>
            <param name="HeightInMM">The height  of the stamp in mm.</param>
        </member>
        <member name="P:IronPdf.Editing.HtmlStamp.Bottom">
            <summary>
            The position of the stamp from the Bottom edge  of the PDF document in mm.  If Top or Bottom is not set, the
            stamp will be vertically centered in the document.
            </summary>f
        </member>
        <member name="P:IronPdf.Editing.HtmlStamp.Height">
            <summary>
            The height of the stamp in mm.  Stamps can not automatically detect their own size based on their content.
            </summary>
        </member>
        <member name="P:IronPdf.Editing.HtmlStamp.Left">
            <summary>
            The position of the stamp from the Left of the PDF document in mm.  If Left or Right is not set, the stamp
            will be horizontally centered in the document.
            </summary>
        </member>
        <member name="P:IronPdf.Editing.HtmlStamp.Right">
            <summary>
            The position of the stamp from the Right of the PDF document in mm.  If Left or Right is not set, the stamp
            will be horizontally centered in the document.
            </summary>
        </member>
        <member name="P:IronPdf.Editing.HtmlStamp.Top">
            <summary>
            The position of the stamp from the Top edge of the PDF document in mm.  If Top or Bottom is not set, the
            stamp will be vertically centered in the document.
            </summary>f
        </member>
        <member name="P:IronPdf.Editing.HtmlStamp.Width">
            <summary>
            The width of the stamp in mm.  Stamps can not automatically detect their own size based on their content.
            </summary>
        </member>
        <member name="T:IronPdf.Editing.HtmlStamp.StampLayer">
            <summary>
            Defines if a stamp should be placed behind or on-top of existing PDF contents.
            </summary>
        </member>
        <member name="F:IronPdf.Editing.HtmlStamp.StampLayer.BehindExistingPDFContent">
            <summary>
            Stamp in the background
            </summary>
        </member>
        <member name="F:IronPdf.Editing.HtmlStamp.StampLayer.OnTopOfExistingPDFContent">
            <summary>
            Stamp in the foreground
            </summary>
        </member>
        <member name="P:IronPdf.Editing.HtmlStamp.ZIndex">
            <summary>
            Defines if this stamp should be placed behind or on-top of existing PDF contents.
            </summary>
        </member>
        <member name="T:IronPdf.Editing.StampLocation">
            <summary>
            Location for a stamp to be applied to a PDF page.
            </summary>
        </member>
        <member name="F:IronPdf.Editing.StampLocation.TopLeft">
            <summary>
            The top left of the page. Bottom and Right will not be used.
            </summary>
        </member>
        <member name="F:IronPdf.Editing.StampLocation.TopCenter">
            <summary>
            The top center of the page. Bottom, Left and Right will not be used.
            </summary>
        </member>
        <member name="F:IronPdf.Editing.StampLocation.TopRight">
            <summary>
            The top right of the page. Bottom and Left will not be used.
            </summary>
        </member>
        <member name="F:IronPdf.Editing.StampLocation.MiddleLeft">
            <summary>
            The middle left of the page. Top, Bottom and Right will not be used.
            </summary>
        </member>
        <member name="F:IronPdf.Editing.StampLocation.MiddleCenter">
            <summary>
            The dead center of the page Top, Bottom Left and Right will not be used.
            </summary>
        </member>
        <member name="F:IronPdf.Editing.StampLocation.MiddleRight">
            <summary>
            The middle right of the page Top, Bottom and Left will not be used.
            </summary>
        </member>
        <member name="F:IronPdf.Editing.StampLocation.BottomLeft">
            <summary>
            The bottom left of the page. Top and Right will not be used. 
            </summary>
        </member>
        <member name="F:IronPdf.Editing.StampLocation.BottomCenter">
            <summary>
            The bottom center of the page. Top, Left and Right will not be used.
            </summary>
        </member>
        <member name="F:IronPdf.Editing.StampLocation.BottomRight">
            <summary>
            The bottom right of the page. Top and Left will not be used.
            </summary>
        </member>
        <member name="F:IronPdf.Editing.StampLocation.Custom">
            <summary>
            Set using Left or Right and Top or Bottom. 
            If both Left and Right was set, Left we be used. 
            If both Top and Bottom was set, Top will be used. 
            If none of Top, Bottom, Left and Right was set, will apply MiddleCenter.
            </summary>
        </member>
        <member name="T:IronPdf.Editing.WaterMarkLocation">
            <summary>
            Location for a simple watermark to be applied to a PDF page.
            </summary>
        </member>
        <member name="F:IronPdf.Editing.WaterMarkLocation.TopLeft">
            <summary>
            The top left of the page
            </summary>
        </member>
        <member name="F:IronPdf.Editing.WaterMarkLocation.TopCenter">
            <summary>
            The top center of the page
            </summary>
        </member>
        <member name="F:IronPdf.Editing.WaterMarkLocation.TopRight">
            <summary>
            The top right of the page
            </summary>
        </member>
        <member name="F:IronPdf.Editing.WaterMarkLocation.MiddleLeft">
            <summary>
            The middle left of the page
            </summary>
        </member>
        <member name="F:IronPdf.Editing.WaterMarkLocation.MiddleCenter">
            <summary>
            The dead center of the page
            </summary>
        </member>
        <member name="F:IronPdf.Editing.WaterMarkLocation.MiddleRight">
            <summary>
            The middle right of the page
            </summary>
        </member>
        <member name="F:IronPdf.Editing.WaterMarkLocation.BottomLeft">
            <summary>
            The bottom left of the page
            </summary>
        </member>
        <member name="F:IronPdf.Editing.WaterMarkLocation.BottomCenter">
            <summary>
            The bottom center of the page
            </summary>
        </member>
        <member name="F:IronPdf.Editing.WaterMarkLocation.BottomRight">
            <summary>
            The bottom right of the page
            </summary>
        </member>
        <member name="T:IronPdf.Editing.WaterMarkPositioning">
            <summary>
            Options to position the watermark on the page
            </summary>
        </member>
        <member name="P:IronPdf.Editing.WaterMarkPositioning.Bottom">
            <summary>
            Indent of the watermark from the bottom side of the page.
            </summary>
            /// <remarks>Used when the watermark aligned to the bottom</remarks></member>
        <member name="P:IronPdf.Editing.WaterMarkPositioning.Left">
            <summary>
            Indent of the watermark from the left side of the page.
            </summary>
            <remarks>Used when the watermark aligned to the left or by default</remarks>
        </member>
        <member name="P:IronPdf.Editing.WaterMarkPositioning.Right">
            <summary>
            Indent of the watermark from the right side of the page.
            </summary>
            /// <remarks>Used when the watermark aligned to the right</remarks></member>
        <member name="P:IronPdf.Editing.WaterMarkPositioning.Size">
            <summary>
            Width and height of the watermark
            </summary>
        </member>
        <member name="P:IronPdf.Editing.WaterMarkPositioning.Top">
            <summary>
            Indent of the watermark from the top side of the page.
            </summary>
            /// <remarks>Used when the watermark aligned to the top or by default</remarks></member>
        <member name="T:IronPdf.Rendering.Abstractions.BasePdfRenderer">
            <summary>
            An abstract generic class
            </summary>
            <remarks>Implements functionality and program flow details which are common to all renderers</remarks>
        </member>
        <member name="P:IronPdf.Rendering.Abstractions.BasePdfRenderer.RenderingOptions">
            <summary>
            Html to Pdf rendering options
            </summary>
        </member>
        <member name="P:IronPdf.Rendering.Abstractions.BasePdfRenderer.LoginCredentials">
            <summary>
            Http login credentials
            </summary>
        </member>
        <member name="M:IronPdf.Rendering.Abstractions.BasePdfRenderer.#ctor(IronPdf.Engines.IRenderEngine)">
            <summary>
            Create a new base renderer using the specified rendering controller
            </summary>
            <param name="controller">Render controller to execute rendering operations</param>
        </member>
        <member name="M:IronPdf.Rendering.Abstractions.BasePdfRenderer.RenderHtmlAsPdf(System.String,System.Uri,System.String)">
            <summary>
            Creates a PDF file from an Html string, and returns it as a <see cref="T:IronPdf.PdfDocument" />.
            </summary>
            <param name="Html">The Html to be rendered as a PDF.</param>
            <param name="BaseUrl">Optional. Setting the BaseURL property gives the relative file path or URL context for hyper-links, images, CSS and JavaScript files.</param>
            <param name="Proxy">Optional. Specifies an Http proxy server. Use the pattern: http(s)://user-name:password@host:port</param>
            <returns>
            A <see cref="T:IronPdf.PdfDocument" /></returns>
        </member>
        <member name="M:IronPdf.Rendering.Abstractions.BasePdfRenderer.RenderHtmlAsPdf(System.String,System.String,System.String)">
            <summary>
            Creates a PDF file from an Html string, and returns it as a <see cref="T:IronPdf.PdfDocument" />.
            </summary>
            <param name="Html">The Html to be rendered as a PDF.</param>
            <param name="BaseUrlOrPath">Optional. Setting the BaseUBaseUrlOrPathRL property gives the relative file path or URL context for hyper-links, images, CSS and JavaScript files.</param>
            <param name="Proxy">Optional. Specifies an Http proxy server. Use the pattern: http(s)://user-name:password@host:port</param>
            <returns>
            A <see cref="T:IronPdf.PdfDocument" /></returns>
        </member>
        <member name="M:IronPdf.Rendering.Abstractions.BasePdfRenderer.RenderHtmlFileAsPdf(System.String)">
            <summary>
            Creates a PDF file from a local Html file, and returns it as a <see cref="T:IronPdf.PdfDocument" />.
            </summary>
            <param name="FilePath">Path to an Html to be rendered as a PDF.</param>
            <returns>
            A <see cref="T:IronPdf.PdfDocument" /></returns>
        </member>
        <member name="M:IronPdf.Rendering.Abstractions.BasePdfRenderer.RenderHTMLFileAsPdf(System.String)">
            <summary>
            Synonym of RenderHtmlFileAsPdf
            </summary>
        </member>
        <member name="M:IronPdf.Rendering.Abstractions.BasePdfRenderer.RenderUrlAsPdf(System.String)">
            <summary>
            Creates a PDF file from a URL or local file path and returns it as a <see cref="T:IronPdf.PdfDocument" />.
            </summary>
            <param name="UrlOrPath">Path to an Html to be rendered as a PDF.</param>
            <returns>
            A <see cref="T:IronPdf.PdfDocument" /></returns>
        </member>
        <member name="M:IronPdf.Rendering.Abstractions.BasePdfRenderer.RenderUrlAsPdf(System.Uri)">
            <summary>
            Creates a PDF file from a URL or local file path and returns it as a <see cref="T:IronPdf.PdfDocument" />.
            </summary>
            <param name="Url"> An absolute (fully formed) Uri.  Points to the Html document to be rendered as a PDF.</param>
            <returns>
            A <see cref="T:IronPdf.PdfDocument" /></returns>
        </member>
        <member name="M:IronPdf.Rendering.Abstractions.BasePdfRenderer.RenderHtmlAsPdfAsync(System.String,System.Uri)">
            <summary>
            Asynchronously creates a PDF file from a URL or local file path and returns it as a <see cref="T:IronPdf.PdfDocument" />.
            <para>Asynchronous variant of <see cref="M:IronPdf.Rendering.Abstractions.BasePdfRenderer.RenderHtmlAsPdf(System.String,System.Uri,System.String)" /></para></summary>
            <param name="Html">The Html to be rendered as a PDF.</param>
            <param name="BaseUrl">
            Setting the BaseUrl property gives the relative context for hyper-links, images, CSS and JavaScript
            files.   May point to a local directory or a remote URL.
            </param>
            <returns>
            A <see cref="T:IronPdf.PdfDocument" /></returns>
        </member>
        <member name="M:IronPdf.Rendering.Abstractions.BasePdfRenderer.RenderHtmlFileAsPdfAsync(System.String)">
            <summary>
            Asynchronously creates a PDF file from a local Html file, and returns it as a <see cref="T:IronPdf.PdfDocument" />.
            <para> Asynchronous variant of <see cref="M:IronPdf.Rendering.Abstractions.BasePdfRenderer.RenderHtmlFileAsPdf(System.String)" /></para></summary>
            <param name="FilePath">Path to an Html to be rendered as a PDF.</param>
            <returns>
            A <see cref="T:IronPdf.PdfDocument" /></returns>
        </member>
        <member name="M:IronPdf.Rendering.Abstractions.BasePdfRenderer.RenderUrlAsPdfAsync(System.Uri)">
            <summary>
            Asynchronously creates a PDF file from a URL or local file path and returns it as a <see cref="T:IronPdf.PdfDocument" />.
             <para> Asynchronous variant of <see cref="M:IronPdf.Rendering.Abstractions.BasePdfRenderer.RenderUrlAsPdf(System.Uri)" /></para></summary>
            <param name="Url"> An absolute (fully formed) Uri.  Points to the Html document to be rendered as a PDF.</param>
            <returns>
            A <see cref="T:IronPdf.PdfDocument" /></returns>
        </member>
        <member name="M:IronPdf.Rendering.Abstractions.BasePdfRenderer.RenderUrlAsPdfAsync(System.String)">
            <summary>
            Asynchronously creates a PDF file from a URL or local file path and returns it as a <see cref="T:IronPdf.PdfDocument" />.
             <para> Asynchronous variant of <see cref="M:IronPdf.Rendering.Abstractions.BasePdfRenderer.RenderUrlAsPdf(System.String)" /></para></summary>
            <param name="UrlOrPath">Path or URL to an Html document to be rendered as a PDF.</param>
            <returns>
            A <see cref="T:IronPdf.PdfDocument" /></returns>
        </member>
        <member name="T:IronPdf.Rendering.Abstractions.IPdfRenderer">
            <summary>
             An Interface for "Html To Pdf" rendering classes.
            </summary>
        </member>
        <member name="M:IronPdf.Rendering.Abstractions.IPdfRenderer.RenderHtmlAsPdf(System.String,System.Uri,System.String)">
            <summary>
            Creates a PDF file from an Html string, and returns it as a <see cref="T:IronPdf.PdfDocument" />.
            </summary>
            <param name="Html">The Html to be rendered as a PDF.</param>
            <param name="BaseUrl">Optional. Setting the BaseURL property gives the relative file path or URL context for hyper-links, images, CSS and JavaScript files.</param>
            <param name="Proxy">Optional. Specifies an Http proxy server. Use the pattern: http(s)://user-name:password@host:port</param>
            <returns>
            A <see cref="T:IronPdf.PdfDocument" /></returns>
        </member>
        <member name="M:IronPdf.Rendering.Abstractions.IPdfRenderer.RenderHtmlAsPdf(System.String,System.String,System.String)">
            <summary>
            Creates a PDF file from an Html string, and returns it as a <see cref="T:IronPdf.PdfDocument" />.
            </summary>
            <param name="Html">The Html to be rendered as a PDF.</param>
            <param name="BaseUrlOrPath">Optional. Setting the BaseUBaseUrlOrPathRL property gives the relative file path or URL context for hyper-links, images, CSS and JavaScript files.</param>
            <param name="Proxy">Optional. Specifies an Http proxy server. Use the pattern: http(s)://user-name:password@host:port</param>
            <returns>
            A <see cref="T:IronPdf.PdfDocument" /></returns>
        </member>
        <member name="M:IronPdf.Rendering.Abstractions.IPdfRenderer.RenderHtmlFileAsPdf(System.String)">
            <summary>
            Creates a PDF file from a local Html file, and returns it as a <see cref="T:IronPdf.PdfDocument" />.
            </summary>
            <param name="FilePath">Path to an Html to be rendered as a PDF.</param>
            <returns>
            A <see cref="T:IronPdf.PdfDocument" /></returns>
        </member>
        <member name="M:IronPdf.Rendering.Abstractions.IPdfRenderer.RenderUrlAsPdf(System.String)">
            <summary>
            Creates a PDF file from a URL or local file path and returns it as a <see cref="T:IronPdf.PdfDocument" />.
            </summary>
            <param name="UrlOrPath">Path to an Html to be rendered as a PDF.</param>
            <returns>
            A <see cref="T:IronPdf.PdfDocument" /></returns>
        </member>
        <member name="M:IronPdf.Rendering.Abstractions.IPdfRenderer.RenderUrlAsPdf(System.Uri)">
            <summary>
            Creates a PDF file from a URL or local file path and returns it as a <see cref="T:IronPdf.PdfDocument" />.
            </summary>
            <param name="Url"> An absolute (fully formed) Uri.  Points to the Html document to be rendered as a PDF.</param>
            <returns>
            A <see cref="T:IronPdf.PdfDocument" /></returns>
        </member>
        <member name="M:IronPdf.Rendering.Abstractions.IPdfRenderer.RenderHtmlAsPdfAsync(System.String,System.Uri)">
            <summary>
            Asynchronously creates a PDF file from a URL or local file path and returns it as a <see cref="T:IronPdf.PdfDocument" />.
            <para>Asynchronous variant of <see cref="M:IronPdf.Rendering.Abstractions.IPdfRenderer.RenderHtmlAsPdf(System.String,System.Uri,System.String)" /></para></summary>
            <param name="Html">The Html to be rendered as a PDF.</param>
            <param name="BaseUrl">
            Setting the BaseUrl property gives the relative context for hyper-links, images, CSS and JavaScript
            files.   May point to a local directory or a remote URL.
            </param>
            <returns>
            A <see cref="T:IronPdf.PdfDocument" /></returns>
        </member>
        <member name="M:IronPdf.Rendering.Abstractions.IPdfRenderer.RenderHtmlFileAsPdfAsync(System.String)">
            <summary>
            Asynchronously creates a PDF file from a local Html file, and returns it as a <see cref="T:IronPdf.PdfDocument" />.
            <para> Asynchronous variant of <see cref="M:IronPdf.Rendering.Abstractions.IPdfRenderer.RenderHtmlFileAsPdf(System.String)" /></para></summary>
            <param name="FilePath">Path to an Html to be rendered as a PDF.</param>
            <returns>
            A <see cref="T:IronPdf.PdfDocument" /></returns>
        </member>
        <member name="M:IronPdf.Rendering.Abstractions.IPdfRenderer.RenderUrlAsPdfAsync(System.Uri)">
            <summary>
            Asynchronously creates a PDF file from a URL or local file path and returns it as a <see cref="T:IronPdf.PdfDocument" />.
             <para> Asynchronous variant of <see cref="M:IronPdf.Rendering.Abstractions.IPdfRenderer.RenderUrlAsPdf(System.Uri)" /></para></summary>
            <param name="Url"> An absolute (fully formed) Uri.  Points to the Html document to be rendered as a PDF.</param>
            <returns>
            A <see cref="T:IronPdf.PdfDocument" /></returns>
        </member>
        <member name="M:IronPdf.Rendering.Abstractions.IPdfRenderer.RenderUrlAsPdfAsync(System.String)">
            <summary>
            Asynchronously creates a PDF file from a URL or local file path and returns it as a <see cref="T:IronPdf.PdfDocument" />.
             <para> Asynchronous variant of <see cref="M:IronPdf.Rendering.Abstractions.IPdfRenderer.RenderUrlAsPdf(System.String)" /></para></summary>
            <param name="UrlOrPath">Path or URL to an Html document to be rendered as a PDF.</param>
            <returns>
            A <see cref="T:IronPdf.PdfDocument" /></returns>
        </member>
        <member name="T:IronPdf.Rendering.PdfCssMediaType">
            <summary>
            Defines which style-sheet should be rendered.   'Print' or 'Screen'.  This matches the CSS3 Media Queries
            standard.
            </summary>
        </member>
        <member name="F:IronPdf.Rendering.PdfCssMediaType.Print">
            <summary>
            Use 'print' CSS media styles. Default behavior when viewing print dialog in a browser
            </summary>
        </member>
        <member name="F:IronPdf.Rendering.PdfCssMediaType.Screen">
            <summary>
            Use 'screen' CSS media styles. Emulates the display of a browser window.
            </summary>
        </member>
        <member name="T:IronPdf.Rendering.PdfPaperOrientation">
            <summary>
            Paper Orientation
            </summary>
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperOrientation.Portrait">
            Paper is oriented vertically
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperOrientation.Landscape">
            Paper is oriented horizontally
        </member>
        <member name="T:IronPdf.Rendering.PdfPaperSize">
            <summary>
             Defines the target virtual paper size the PDF.  Relates to real-world paper-sizes.
             </summary>
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.Letter">
            8.5in x 11in
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.Legal">
            8.5in x 14in
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.A4">
            210mm x 297mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.CSheet">
            17in x 22in
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.DSheet">
            22in x 34in
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.ESheet">
            34in x 44in
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.LetterSmall">
            8.5in x 11in
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.Tabloid">
            11in x 17in
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.Ledger">
            17in x 11in
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.Statement">
            5.5in x 8.5in
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.Executive">
            7.25in x 10.5in
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.A3">
            297mm x 420mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.A4Small">
            210mm x 297mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.A5">
            148mm x 210mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.B4">
            250mm x 353mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.B5">
            176mm x 250mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.Folio">
            8.5in x 13in
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.Quarto">
            215mm x 275mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.Standard10x14">
            10in x 14in
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.Standard11x17">
            11in x 17in
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.Note">
            8.5in x 11in
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.Number9Envelope">
            3.875in x 8.875in
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.Number10Envelope">
            4.125in x 9.5in
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.Number11Envelope">
            4.5in x 10.375in
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.Number12Envelope">
            4.75in x 11in
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.Number14Envelope">
            5in x 11.5in
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.DLEnvelope">
            110mm x 220mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.C5Envelope">
            162mm x 229mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.C3Envelope">
            324mm x 458mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.C4Envelope">
            229mm x 324mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.C6Envelope">
            114mm x 162mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.C65Envelope">
            114mm x 229mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.B4Envelope">
            250mm x 353mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.B5Envelope">
            176mm x 250mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.B6Envelope">
            176mm x 125mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.ItalyEnvelope">
            110mm x 230mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.MonarchEnvelope">
            3.875in x 7.5in
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.PersonalEnvelope">
            3.625in x 6.5in
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.USStandardFanfold">
            14.875in x 11in
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.GermanStandardFanfold">
            8.5in x 12in
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.GermanLegalFanfold">
            8.5in x 13in
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.IsoB4">
            250mm x 353mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.JapanesePostcard">
            100mm x 148mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.Standard9x11">
            9in x 11in
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.Standard10x11">
            10in x 11in
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.Standard15x11">
            15in x 11in
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.InviteEnvelope">
            220mm x 220mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.LetterExtra">
            9.275in x 12in
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.LegalExtra">
            9.275in x 15in
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.TabloidExtra">
            11.69in x 18in
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.A4Extra">
            236mm x 322mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.LetterTransverse">
            8.275in x 11in
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.A4Transverse">
            210mm x 297mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.LetterExtraTransverse">
            9.275in x 12in
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.APlus">
            227mm x 356mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.BPlus">
            305mm x 487mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.LetterPlus">
            8.5in x 12.69in
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.A4Plus">
            210mm x 330mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.A5Transverse">
            148mm x 210mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.B5Transverse">
            182mm x 257mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.A3Extra">
            322mm x 445mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.A5Extra">
            174mm x 235mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.B5Extra">
            201mm x 276mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.A2">
            420mm x 594mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.A3Transverse">
            297mm x 420mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.A3ExtraTransverse">
            322mm x 445mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.JapaneseDoublePostcard">
            200mm x 148mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.A6">
            105mm x 148mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.LetterRotated">
            11in x 8.5in
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.A3Rotated">
            420mm x 297mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.A4Rotated">
            297mm x 210mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.A5Rotated">
            210mm x 148mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.B4JisRotated">
            364mm x 257mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.B5JisRotated">
            257mm x 182mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.JapanesePostcardRotated">
            148mm x 100mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.JapaneseDoublePostcardRotated">
            148mm x 200mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.A6Rotated">
            148mm x 105mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.B6Jis">
            128mm x 182mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.B6JisRotated">
            182mm x 128mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.Standard12x11">
            12in x 11in
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.Prc16K">
            146mm x 215mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.Prc32K">
            97mm x 151mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.Prc32KBig">
            97mm x 151mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.PrcEnvelopeNumber1">
            102mm x 165mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.PrcEnvelopeNumber2">
            102mm x 176mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.PrcEnvelopeNumber3">
            125mm x 176mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.PrcEnvelopeNumber4">
            110mm x 208mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.PrcEnvelopeNumber5">
            110mm x 220mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.PrcEnvelopeNumber6">
            120mm x 230mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.PrcEnvelopeNumber7">
            160mm x 230mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.PrcEnvelopeNumber8">
            120mm x 309mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.PrcEnvelopeNumber9">
            229mm x 324mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.PrcEnvelopeNumber10">
            324mm x 458mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.Prc16KRotated">
            146mm x 215mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.Prc32KRotated">
            97mm x 151mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.Prc32KBigRotated">
            97mm x 151mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.PrcEnvelopeNumber1Rotated">
            165mm x 102mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.PrcEnvelopeNumber2Rotated">
            176mm x 102mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.PrcEnvelopeNumber3Rotated">
            176mm x 125mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.PrcEnvelopeNumber4Rotated">
            208mm x 110mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.PrcEnvelopeNumber5Rotated">
            220mm x 110mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.PrcEnvelopeNumber6Rotated">
            230mm x 120mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.PrcEnvelopeNumber7Rotated">
            230mm x 160mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.PrcEnvelopeNumber8Rotated">
            309mm x 120mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.PrcEnvelopeNumber9Rotated">
            324mm x 229mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.PrcEnvelopeNumber10Rotated">
            458mm x 324mm
        </member>
        <member name="F:IronPdf.Rendering.PdfPaperSize.Custom">
            Set using SetCustomPaperSizeInInches or SetCustomPaperSizeInMillimeters
        </member>
        <member name="T:IronPdf.Rendering.PdfRenderingEngine">
            <summary>
            Specifies which "HTML to PDF" rendering engine to use.
            </summary>
        </member>
        <member name="F:IronPdf.Rendering.PdfRenderingEngine.Default">
            <summary>Chooses the first renderer in this list which is currently available at runtime.</summary>
        </member>
        <member name="F:IronPdf.Rendering.PdfRenderingEngine.Chrome">
            <summary>Recommended as our most capable, multithreaded and standards compliant rendering engine. Chooses the IronPDf embedded Chrome browser rendering engine.</summary>
        </member>
        <member name="T:IronPdf.Engines.Chrome.ChromeClient">
            <summary>
            Cef client proxy singleton
            </summary>
        </member>
        <member name="T:IronPdf.Engines.Chrome.ChromeInterop">
            <summary>
            External methods from native assemblies
            </summary>
        </member>
        <member name="T:IronPdf.Engines.Chrome.ChromeGpuModes">
            <summary>
            Chrome GPU hardware utilization when rendering HTML to PDF
            </summary>
        </member>
        <member name="F:IronPdf.Engines.Chrome.ChromeGpuModes.Disabled">
            <summary>
            Disable GPU hardware utilization
            </summary>
        </member>
        <member name="F:IronPdf.Engines.Chrome.ChromeGpuModes.Software">
            <summary>
            Enable software acceleration
            </summary>
        </member>
        <member name="F:IronPdf.Engines.Chrome.ChromeGpuModes.Hardware">
            <summary>
            Enable hardware acceleration
            </summary>
        </member>
        <member name="F:IronPdf.Engines.Chrome.ChromeGpuModes.HardwareFull">
            <summary>
            Enable hardware acceleration with Vulkan features
            </summary>
        </member>
        <member name="T:IronPdf.Engines.Chrome.FitToPaperModes">
            <summary>
            Behaviors when fitting HTML content to a physical paper size
            Can affect zoom level and css layout
            </summary>
        </member>
        <member name="F:IronPdf.Engines.Chrome.FitToPaperModes.None">
            <summary>
            Do nothing.
            <para>Default Chrome PDF printing behavior. Uses <see cref="P:IronPdf.ChromePdfRenderOptions.Zoom" /> to specify zoom level.</para><para><see cref="P:IronPdf.ChromePdfRenderOptions.ViewPortWidth" /> has no effect.
            Instead, Chrome will automatically set the view port based on <see cref="P:IronPdf.ChromePdfRenderOptions.PaperSize" />.</para>
            Use <see cref="P:IronPdf.ChromePdfRenderOptions.CssMediaType" /> to specify CSS media style.
            </summary>
            <remarks>Useful when using 'print' CSS media style or printing documents to match the Chrome browser print preview.</remarks>
        </member>
        <member name="F:IronPdf.Engines.Chrome.FitToPaperModes.FixedPixelWidth">
            <summary>
            Fit an exact number of pixels onto each PDF page.
            <para>Uses <see cref="P:IronPdf.ChromePdfRenderOptions.ViewPortWidth" /> to specify the pixel width to fit on each PDF page.</para><para><see cref="P:IronPdf.ChromePdfRenderOptions.Zoom" /> has no effect. Instead, IronPdf will calculate the zoom level based on
            <see cref="P:IronPdf.ChromePdfRenderOptions.ViewPortWidth" /> and <see cref="P:IronPdf.ChromePdfRenderOptions.PaperSize" /></para></summary>
            <remarks>Useful when an optimal pixel width is known or printing documents to match a Chrome browser window display</remarks>
        </member>
        <member name="F:IronPdf.Engines.Chrome.FitToPaperModes.Automatic">
            <summary>
            Measures minimum HTML content width after it is rendered by the browser and calculates <see cref="P:IronPdf.ChromePdfRenderOptions.Zoom" />
            based on the width of the content.
            <para><see cref="P:IronPdf.ChromePdfRenderOptions.Zoom" /> and <see cref="P:IronPdf.ChromePdfRenderOptions.ViewPortWidth" /> have no effect and are calculated automatically by IronPdf.</para></summary>
            <remarks>Useful when fitting a wide content or content of unknown width onto a PDF page</remarks>
        </member>
        <member name="F:IronPdf.Engines.Chrome.FitToPaperModes.AutomaticFit">
            <summary>
            Measures minimum HTML content width after it is rendered by the browser using the smallest view port possible, and calculates
            <see cref="P:IronPdf.ChromePdfRenderOptions.Zoom" /> based on the width of the content.
            <para>Use <see cref="P:IronPdf.ChromePdfRenderOptions.ViewPortWidth" /> to specify the minimum number of pixels to be fit on each PDF page.</para><para><see cref="P:IronPdf.ChromePdfRenderOptions.Zoom" /> has no effect and is calculated automatically by IronPdf.</para></summary>
            <remarks>Useful when fitting smaller content onto a wide page</remarks>
        </member>
        <member name="M:IronPdf.Engines.Chrome.CefRenderSettings.TranslateMarginType(System.String)">
            <summary>
            Translate a margin type string into an enum value
            </summary>
            <param name="type">Margin type string</param>
            <returns>Equivalent enum value</returns>
        </member>
        <member name="P:IronPdf.Engines.Chrome.CefRenderSettings.EnableEmulateScreenMediaType">
            <summary>
            Enable emulation of "screen" css media type
            </summary>
        </member>
        <member name="P:IronPdf.Engines.Chrome.CefRenderSettings.EnableLandscapeOrientation">
            <summary>
            Enable landscape orientation
            </summary>
        </member>
        <member name="P:IronPdf.Engines.Chrome.CefRenderSettings.MaxHeaderHeight">
            <summary>
            Max header height in pixels
            </summary>
        </member>
        <member name="P:IronPdf.Engines.Chrome.CefRenderSettings.MaxFooterHeight">
            <summary>
            Max footer height in pixels
            </summary>
        </member>
        <member name="T:IronPdf.Engines.IRenderEngine">
            <summary>
            Internal interface for executing PDF rendering operations
            </summary>
        </member>
        <member name="T:IronPdf.Engines.Pdfium.PdfiumInterop">
            <summary>
            External methods from native assemblies
            </summary>
        </member>
        <member name="M:IronPdf.Engines.Pdfium.PdfiumInterop.GetPageBounds(System.Int32,System.Int32,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>
            return PageBounds as a points (pt)
            </summary>
        </member>
        <member name="T:IronPdf.Exceptions.IronPdfAssemblyVersionMismatchException">
            <summary>
            Represents errors that occur while loading assemblies during IronPdf deployment.
            </summary>
        </member>
        <member name="T:IronPdf.Exceptions.IronPdfDeploymentException">
            <summary>
            Represents errors that occur during IronPDF Asset deployment.
            </summary>
        </member>
        <member name="M:IronPdf.Exceptions.IronPdfDeploymentException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IronPdf.Exceptions.IronPdfDeploymentException" /> class.
            </summary>
        </member>
        <member name="M:IronPdf.Exceptions.IronPdfDeploymentException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IronPdf.Exceptions.IronPdfDeploymentException" /> class with a
            specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:IronPdf.Exceptions.IronPdfDeploymentException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:IronPdf.Exceptions.IronPdfDeploymentException" /> class with a
            specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">
            The exception that is the cause of the current exception, or a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) if no inner exception is specified.
            </param>
        </member>
        <member name="T:IronPdf.Exceptions.IronPdfInputException">
            <summary>
            Represents errors that occur when inv;laid variables are passed to IronPDF.
            </summary>
        </member>
        <member name="M:IronPdf.Exceptions.IronPdfInputException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IronPdf.Exceptions.IronPdfInputException" /> class.
            </summary>
        </member>
        <member name="M:IronPdf.Exceptions.IronPdfInputException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IronPdf.Exceptions.IronPdfInputException" /> class with a
            specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:IronPdf.Exceptions.IronPdfInputException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:IronPdf.Exceptions.IronPdfInputException" /> class with a
            specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">
            The exception that is the cause of the current exception, or a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) if no inner exception is specified.
            </param>
        </member>
        <member name="T:IronPdf.Exceptions.IronPdfLicensingException">
            <summary>
            Represents errors that occur during IronPDF execution due to the library not being appropriately licensed. 
            <para>https://ironpdf.com/licensing/</para></summary>
        </member>
        <member name="M:IronPdf.Exceptions.IronPdfLicensingException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IronPdf.Exceptions.IronPdfLicensingException" /> class.
            </summary>
        </member>
        <member name="M:IronPdf.Exceptions.IronPdfLicensingException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IronPdf.Exceptions.IronPdfLicensingException" /> class with a
            specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:IronPdf.Exceptions.IronPdfLicensingException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:IronPdf.Exceptions.IronPdfLicensingException" /> class with a
            specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">
            The exception that is the cause of the current exception, or a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) if no inner exception is specified.
            </param>
        </member>
        <member name="M:IronPdf.Exceptions.IronPdfLicensingException.Throw(System.String)">
            <summary />
            <param name="message" />
        </member>
        <member name="P:IronPdf.Exceptions.IronPdfLicensingException.stackTrace">
            <summary />
        </member>
        <member name="P:IronPdf.Exceptions.IronPdfLicensingException.StackTrace">
            <summary />
        </member>
        <member name="P:IronPdf.Exceptions.IronPdfLicensingException.TargetSite">
            <summary />
        </member>
        <member name="T:IronPdf.Exceptions.IronPdfNativeException">
            <summary>
            Represents errors that occur during IronPDF Asset deployment.
            </summary>
        </member>
        <member name="M:IronPdf.Exceptions.IronPdfNativeException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IronPdf.Exceptions.IronPdfNativeException" /> class.
            </summary>
        </member>
        <member name="M:IronPdf.Exceptions.IronPdfNativeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IronPdf.Exceptions.IronPdfNativeException" /> class with a
            specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:IronPdf.Exceptions.IronPdfNativeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:IronPdf.Exceptions.IronPdfNativeException" /> class with a
            specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">
            The exception that is the cause of the current exception, or a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) if no inner exception is specified.
            </param>
        </member>
        <member name="T:IronPdf.Exceptions.IronPdfProductException">
            <summary>
            Represents errors that occur during IronPDF execution.
            </summary>
        </member>
        <member name="M:IronPdf.Exceptions.IronPdfProductException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IronPdf.Exceptions.IronPdfProductException" /> class.
            </summary>
        </member>
        <member name="M:IronPdf.Exceptions.IronPdfProductException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IronPdf.Exceptions.IronPdfProductException" /> class with a
            specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:IronPdf.Exceptions.IronPdfProductException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:IronPdf.Exceptions.IronPdfProductException" /> class with a
            specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">
            The exception that is the cause of the current exception, or a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) if no inner exception is specified.
            </param>
        </member>
        <member name="T:IronPdf.Font.FontTypes">
            <summary>
            Supported PDF Fonts
            </summary>
        </member>
        <member name="P:IronPdf.Font.FontTypes.FontFilePath">
            E
        </member>
        <member name="M:IronPdf.Font.FontTypes.GenerateInstance(System.Int32,System.String,System.String)">
            E
        </member>
        <member name="T:IronPdf.Forms.CheckBoxField">
            <summary>
            Represents a check-box in a PDF form.
            </summary>
            <seealso cref="T:IronPdf.Forms.FormField" />
        </member>
        <member name="P:IronPdf.Forms.CheckBoxField.BooleanValue">
            <summary>
            Gets or sets a value indicating whether the check-box is checked (ticked).
            </summary>
            <value>
                <c>true</c> if checked; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:IronPdf.Forms.ComboBoxField">
            <summary>
            Represents a combo-box (drop down menu) in a PDF form.
            </summary>
            <seealso cref="T:IronPdf.Forms.FormField" />
        </member>
        <member name="P:IronPdf.Forms.ComboBoxField.Options">
            <summary>
            Gets the available options for the combo-box in zero based index order.
            </summary>
            <value>
            The option names as strings.
            </value>
        </member>
        <member name="P:IronPdf.Forms.ComboBoxField.SelectedIndex">
            <summary>
            Gets the index of the selected option.
            </summary>
            <value>
            The index of the selected. 0 based.
            </value>
        </member>
        <member name="T:IronPdf.Forms.FormFieldTypes">
            <summary>
            Form field types
            </summary>
        </member>
        <member name="T:IronPdf.Forms.FormField">
            <summary>
            Generic base class from which all PDF Form fields are derived.
            </summary>
        </member>
        <member name="M:IronPdf.Forms.FormField.ToString">
            <summary>
            Returns the value of this field.
            </summary>
            <returns>
            The value of this field.
            </returns>
        </member>
        <member name="P:IronPdf.Forms.FormField.AnnotationIndex">
            <summary>
            Index of annotation associated with this form field
            </summary>
        </member>
        <member name="P:IronPdf.Forms.FormField.Name">
            <summary>
            Gets the ID name of this field.
            </summary>
            <value>
            The name as a string.
            </value>
            <seealso cref="M:IronPdf.Forms.PdfForm.GetFieldByName(System.String)" />
        </member>
        <member name="P:IronPdf.Forms.FormField.PageIndex">
            <summary>
            Page index which contains this form field
            </summary>
        </member>
        <member name="P:IronPdf.Forms.FormField.ReadOnly">
            <summary>
            Gets or sets the permissions for users to fill-in current form field.
            </summary>
            <value>
                <c>true</c> if form field is readonly, otherwise <c>false</c>.
            </value>
        </member>
        <member name="P:IronPdf.Forms.FormField.Value">
            <summary>
            Gets the value of the editable PDF field.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="P:IronPdf.Forms.FormField.Width">
            <summary>
            Form field width
            </summary>
        </member>
        <member name="P:IronPdf.Forms.FormField.Height">
            <summary>
            Form field height
            </summary>
        </member>
        <member name="P:IronPdf.Forms.FormField.X">
            <summary>
            Form field x position
            </summary>
        </member>
        <member name="P:IronPdf.Forms.FormField.Y">
            <summary>
            Form field x position
            </summary>
        </member>
        <member name="M:IronPdf.Forms.FormField.SetFont(IronPdf.Font.FontTypes,System.Double)">
            <summary>
            Sets the font to the text field of pdf form.
            </summary>
            <param name="fontType">Type of the font.</param>
            <param name="fontSize">Size of the font.</param>
        </member>
        <member name="T:IronPdf.Forms.PdfForm">
            <summary>
            A collection of the user-editable form fields within a PDF document
            </summary>
        </member>
        <member name="P:IronPdf.Forms.PdfForm.FieldNames">
            <summary>
            Retrieve a new copy of the list of form fields names contained within a PDF document
            </summary>
            <remarks>Modifying this list will not affect the PDF document</remarks>
        </member>
        <member name="P:IronPdf.Forms.PdfForm.Fields">
            <summary>
            Retrieve a new copy of the list of form fields contained within a PDF document
            </summary>
            <remarks>Generates a snapshot of the form fields currently within the PDF document.
            Modifying properties of form fields will immediately update the document.
            Adding or removing from this list will not add or remove fields from the document.</remarks>
        </member>
        <member name="M:IronPdf.Forms.PdfForm.GetFieldByName(System.String)">
            <summary>
            Returns a <see cref="T:IronPdf.Forms.FormField" /> by its name.  This method is fault tolerant and will attempt to match case
            mistakes and partial field names.
            </summary>
            <param name="FieldName">
            The name of the field to be edited. This is analogous to the HTML input 'name' attribute when creating a PDF
            with forms from HTML using IronPDF.
            </param>
            <returns>A <see cref="T:IronPdf.Forms.FormField" /> object</returns>
        </member>
        <member name="M:IronPdf.Forms.PdfForm.RenameField(System.String,System.String)">
            <summary>
            Rename a <see cref="T:IronPdf.Forms.FormField" /></summary>
            <param name="CurrentFieldName">Current fully qualified field name</param>
            <param name="NewFieldName">New partial field name</param>
            <returns>New fully-qualified field name</returns>
            <remarks>When renaming a form field, please provide the partial (unqualified) new and old form field names</remarks>
        </member>
        <member name="T:IronPdf.Forms.TextField">
            <summary>
            Represents an editable text input field in a PDF document.
            </summary>
            <seealso cref="T:IronPdf.Forms.FormField" />
        </member>
        <member name="M:IronPdf.Forms.TextField.SetFont(IronPdf.Font.FontTypes,System.Double)">
            <summary>
            Sets the font to the text field of pdf form.
            </summary>
            <param name="fontType">Type of the font.</param>
            <param name="fontSize">Size of the font.</param>
        </member>
        <member name="T:IronPdf.HtmlHeaderFooter">
            <summary>
            A Html Header or Footer which will be printed onto every page of the PDF. This can be used to override
            <para>When using HtmlHeaderFooter it is important to set <see cref="P:IronPdf.HtmlHeaderFooter.HtmlFragment" /></para><para>Merge meta-data into your html using any of these placeholder strings: {page} {total-pages} {url} {date} {time} {html-title} {pdf-title}</para></summary>
        </member>
        <member name="P:IronPdf.HtmlHeaderFooter.BaseUrl">
            <summary>
            The Base URL all URLS in the <see cref="P:IronPdf.HtmlHeaderFooter.HtmlFragment">HtmlFragment</see> will be relative to. This includes
            'src' attributes on images, scripts, style-sheets and also hrefs on hyper-links. <para>Note: A base URL that
            points to a directory should end with a slash.</para><para>Base URL accepts file paths as well as URLS. If
            no BaseUrl is given, the HtmlHeaderFooter BaseUrl will be inherited from the main HTML document where
            possible.</para></summary>
        </member>
        <member name="P:IronPdf.HtmlHeaderFooter.MaxHeight">
            <summary>
            Maximum Height of the Html Header / Footer in millimeters.  This value must be set sufficiently high to display the
            full html header / footer content.
            </summary>
        </member>
        <member name="P:IronPdf.HtmlHeaderFooter.HtmlFragment">
            <summary>
            The Html which will be use to render the Header / Footer.  Should be  an HTML snippet rather than a complete
            document.  May contain styles &amp; images. <para>Merge meta-data into the HtmlFragment by putting any of
            these placeholder strings into the text: {page} {total-pages} {url} {date} {time} {html-title} {pdf-title}. 
            An alternative mail-merge style using the pattern &lt;span class='total-pages'&gt;&lt;/span&gt; also workd</para><para>HtmlFragment is a stand alone HTML document which does not inherit styles or settings from your
            main HTML content unless <see cref="P:IronPdf.HtmlHeaderFooter.LoadStylesAndCSSFromMainHtmlDocument" /> is set <c>true</c></para></summary>
        </member>
        <member name="P:IronPdf.HtmlHeaderFooter.LoadStylesAndCSSFromMainHtmlDocument">
            <summary>
            Loads style code blocks and links to CSS style sheets from the main HTML document (which provides the PDF
            content) into the <see cref="T:IronPdf.HtmlHeaderFooter" /> . <para>By default, Html Headers and Footers are stand-
            alone HTML documents with their own default styles.  Setting <see cref="P:IronPdf.HtmlHeaderFooter.LoadStylesAndCSSFromMainHtmlDocument" /> to <c>true</c> will attempt to load all STYLE and LINK tags
            from the main HTML document (which renders teh PDF) into the <see cref="T:IronPdf.HtmlHeaderFooter" />.</para><para>If
            your main HTML document contains complex CSS frameworks,  styles the HEAD or BODY element heavily or loads
            CSS from javascript then this method may not work as intended.</para><para>This feature is not available
            for  RenderUrlAsPdf methods.  It works for RenderHtmlAsPdf, HTMLToPdf
            and HtmlFileToPdf  conversions only.</para><para>It is often preferable to load style sheets explicitly into
            your HTML Headers and Footers as STYLE and LINK tags within the <see cref="P:IronPdf.HtmlHeaderFooter.HtmlFragment" /> for granular
            control</para></summary>
        </member>
        <member name="M:IronPdf.HtmlHeaderFooter.Clone">
            <summary>
            Supports <see cref="T:System.ICloneable" />.  Creates a deep copy of this class instance.
            </summary>
            <returns>A deep clone of this instance.  Use explicit casting to convert object back to the intended type. </returns>
        </member>
        <member name="P:IronPdf.HtmlHeaderFooter.Height">
            <exclude />
        </member>
        <member name="P:IronPdf.HtmlHeaderFooter.CenterText">
            <exclude />
        </member>
        <member name="P:IronPdf.HtmlHeaderFooter.FontFamily">
            <exclude />
        </member>
        <member name="P:IronPdf.HtmlHeaderFooter.Font">
            <exclude />
        </member>
        <member name="P:IronPdf.HtmlHeaderFooter.FontSize">
            <exclude />
        </member>
        <member name="P:IronPdf.HtmlHeaderFooter.LeftText">
            <exclude />
        </member>
        <member name="P:IronPdf.HtmlHeaderFooter.RightText">
            <exclude />
        </member>
        <member name="P:IronPdf.HtmlHeaderFooter.Spacing">
            <exclude />
        </member>
        <member name="T:IronPdf.ImageToPdfConverter">
            <summary>
            The ImageToPdfConveter class can be used to create PDF documents from images.  It accepts both image files and
            <see cref="T:System.Drawing.Image" /> objects as input. <para>The ImageToPdf static methods create simple PDF
            documents containing each image as one page of the created PDF.</para><para>To rasterize PDF documents as
            images (the reverse operation), see <see cref="M:IronPdf.PdfDocument.ToBitmap(System.Int32)" /> and <see cref="M:IronPdf.PdfDocument.RasterizeToImageFiles(System.String,IronPdf.Imaging.ImageType,System.Int32)" /></para></summary>
        </member>
        <member name="M:IronPdf.ImageToPdfConverter.ImageToPdf(System.String,IronPdf.Imaging.ImageBehavior)">
            <summary>
            Converts a single image file to an identical PDF document of matching dimensions. The default PaperSize is A4. You can set it via ImageToPdfConverter.PaperSize.
            Note: Imaging.ImageBehavior.CropPage will set PaperSize equal to ImageSize.
            </summary>
            <param name="imageFileName">File path of the image file.</param>
            <param name="behavior">Describes how image should be placed on the PDF page</param>
            <returns>
            Returns a <see cref="T:IronPdf.PdfDocument" /> document which can then be edited, saved or served over the web.
            </returns>
            <exception cref="T:System.NotSupportedException">
            The file does not have a supported image format. Supported files: .apng, .avif, .bmp, .cur, .dib, .gif, .ico, .jfif, .jif,
            .jpe, .jpeg, .jpg, .pjp, .pjpeg, .png, .svg, .tif, .tiff, .webp
            </exception>
            <exception cref="T:System.IO.FileNotFoundException" />
        </member>
        <member name="M:IronPdf.ImageToPdfConverter.ImageToPdf(System.String,IronPdf.ImageBehavior)">
            <excude />
        </member>
        <member name="M:IronPdf.ImageToPdfConverter.ImageToPdf(System.Collections.Generic.IEnumerable{System.String},IronPdf.Imaging.ImageBehavior)">
            <summary>
            Converts multiple image files to a PDF document.  Each image creates 1 page which matches the image
            dimensions. The default PaperSize is A4. You can set it via ImageToPdfConverter.PaperSize.
            Note: Imaging.ImageBehavior.CropPage will set PaperSize equal to ImageSize.
            </summary>
            <param name="imageFileNames">The image file path names.</param>
            <param name="behavior">Describes how image should be placed on the PDF page</param>
            <returns>
            Returns a <see cref="T:IronPdf.PdfDocument" /> document which can then be edited, saved or served over the web.
            </returns>
            <exception cref="T:System.NotSupportedException">
            The file does not have a supported image format. Supported files: .apng, .avif, .bmp, .cur, .dib, .gif, .ico, .jfif, .jif,
            .jpe, .jpeg, .jpg, .pjp, .pjpeg, .png, .svg, .tif, .tiff, .webp
            </exception>
            <exception cref="T:System.IO.FileNotFoundException" />
        </member>
        <member name="M:IronPdf.ImageToPdfConverter.ImageToPdf(System.Drawing.Image,IronPdf.Imaging.ImageBehavior)">
            <summary>
            Converts a single <see cref="T:System.Drawing.Image" /> object or Bitmap to a PDF document of matching
            dimensions. The default PaperSize is A4. You can set it via ImageToPdfConverter.PaperSize.
            Note: Imaging.ImageBehavior.CropPage will set PaperSize equal to ImageSize.
            </summary>
            <param name="image">The image object.   Requires a project reference to the System.Drawing Assembly.</param>
            <param name="behavior">Describes how image should be placed on the PDF page</param>
            <returns>
            Returns a <see cref="T:IronPdf.PdfDocument" /> document which can then be edited, saved or served over the web.
            </returns>
            <exception cref="T:System.NotSupportedException">
            The file does not have a supported image format. Supported files: .apng, .avif, .bmp, .cur, .dib, .gif, .ico, .jfif, .jif,
            .jpe, .jpeg, .jpg, .pjp, .pjpeg, .png, .svg, .tif, .tiff, .webp
            </exception>
            <exception cref="T:System.IO.FileNotFoundException" />
        </member>
        <member name="M:IronPdf.ImageToPdfConverter.ImageToPdf(System.Collections.Generic.IEnumerable{System.Drawing.Image},IronPdf.Imaging.ImageBehavior)">
            <summary>
            Converts multiple  <see cref="T:System.Drawing.Image" /> objects or Bitmaps  into a PDF document.  Each image
            creates 1 page which matches the image dimensions. The default PaperSize is A4. You can set it via ImageToPdfConverter.PaperSize.
            Note: Imaging.ImageBehavior.CropPage will set PaperSize equal to ImageSize.
            </summary>
            <param name="images">The image objects.   Requires a project reference to the System.Drawing Assembly.</param>
            <param name="behavior">Describes how image should be placed on the PDF page</param>
            <returns>
            Returns a <see cref="T:IronPdf.PdfDocument" /> document which can then be edited, saved or served over the web.
            </returns>
            <exception cref="T:System.NotSupportedException">
            The file does not have a supported image format. Supported files: .apng, .avif, .bmp, .cur, .dib, .gif, .ico, .jfif, .jif,
            .jpe, .jpeg, .jpg, .pjp, .pjpeg, .png, .svg, .tif, .tiff, .webp
            </exception>
            <exception cref="T:System.IO.FileNotFoundException" />
        </member>
        <member name="M:IronPdf.ImageToPdfConverter.ImageToPdf(System.Collections.Generic.IEnumerable{System.Drawing.Image},IronPdf.ImageBehavior)">
            <excude />
        </member>
        <member name="T:IronPdf.Imaging.ImageBehavior">
            E
        </member>
        <member name="F:IronPdf.Imaging.ImageBehavior.CenteredOnPage">
            <summary>
            Image should be placed on center of the page
            </summary>
        </member>
        <member name="F:IronPdf.Imaging.ImageBehavior.FitToPage">
            <summary>
            Image should fit to the page
            </summary>
        </member>
        <member name="F:IronPdf.Imaging.ImageBehavior.FitToPageAndMaintainAspectRatio">
            <summary>
            Image should fit to the page and keep aspect ratio
            </summary>
        </member>
        <member name="F:IronPdf.Imaging.ImageBehavior.CropPage">
            <summary>
            Page should fit to the image
            </summary>
        </member>
        <member name="F:IronPdf.Imaging.ImageBehavior.TopLeftCornerOfPage">
            <summary>
            Image should be placed to the left top corner of the page
            </summary>
        </member>
        <member name="F:IronPdf.Imaging.ImageBehavior.BottomLeftCornerOfPage">
            <summary>
            Image should be placed to the left bottom corner of the page
            </summary>
        </member>
        <member name="F:IronPdf.Imaging.ImageBehavior.TopRightCornerOfPage">
            <summary>
            Image should be placed to the right top corner of the page
            </summary>
        </member>
        <member name="F:IronPdf.Imaging.ImageBehavior.BottomRightCornerOfPage">
            <summary>
            Image should be placed to the right bottom corner of the page
            </summary>
        </member>
        <member name="T:IronPdf.Imaging.ImageType">
            <summary>
            An Image File Type Enumeration used to select image file formats when converting PDF documents to images. Also
            see: <see cref="M:IronPdf.PdfDocument.RasterizeToImageFiles(System.String,IronPdf.Imaging.ImageType,System.Int32)" /></summary>
        </member>
        <member name="F:IronPdf.Imaging.ImageType.Default">
            <summary>
            Default file type. Will save images in a PNG file type unless a file pattern ends in an image file
            format such as .png or .jpeg
            </summary>
        </member>
        <member name="F:IronPdf.Imaging.ImageType.Bitmap">
            <summary>
            PDF pages will be rendered to windows Bitmap image files.
            </summary>
        </member>
        <member name="F:IronPdf.Imaging.ImageType.Jpeg">
            <summary>
            PDF pages will be rendered to JPEG image files.
            </summary>
        </member>
        <member name="F:IronPdf.Imaging.ImageType.Png">
            <summary>
            PDF pages will be rendered to PNG (Portable Network Graphics) image files.
            </summary>
        </member>
        <member name="F:IronPdf.Imaging.ImageType.Gif">
            <summary>
            PDF pages will be rendered to non-animated GIF image files. The GIF
            </summary>
        </member>
        <member name="F:IronPdf.Imaging.ImageType.Tiff">
            <summary>
            PDF pages will be rendered to TIFF image files.
            </summary>
        </member>
        <member name="F:IronPdf.Imaging.ImageType.MultiPageTiff">
            <summary>
            Every page of the PDF will be compiled into a single multi-page TIFF image file (aka. multi-frame TIFF).
            </summary>
        </member>
        <member name="T:IronPdf.Imaging.ImageUtilities">
            <summary>Useful methods for working with images in PDF files.</summary>
        </member>
        <member name="M:IronPdf.Imaging.ImageUtilities.ImageToDataUri(System.Drawing.Image,System.Boolean)">
            <summary>
             Turns a System.Drawing.Image or System.Drawing.Bitmap into a DataUri which can used to embed the Image
             directly into an HTML document. <para>Read standard <see href="https://en.wikipedia.org/wiki/Data_URI_scheme">https://en.wikipedia.org/wiki/Data_URI_scheme</see></para></summary>
            <param name="Image">A non-null System.Drawing.Image or System.Drawing.Bitmap</param>
            <param name="Rasterize">
             Optional flag to flatten the image to raw pixels to increase compatibility with HTML (may affect PDF file
             size and rendering time)
             </param>
            <returns>A data URL which can be used as the src attribute of an HTML &lt;img tag</returns>
        </member>
        <member name="T:IronPdf.Installation">
            <summary>
            Global installation and setup preferences for all instances of IronPDF
            </summary>
        </member>
        <member name="P:IronPdf.Installation.CustomDeploymentDirectory">
            <summary>
            Custom deployment directory for renderer native binaries.
            </summary>
        </member>
        <member name="P:IronPdf.Installation.SkipShutdown">
            <summary>
            Set to True to skip certain shutdown routines, e.g. Cef shutdown
            </summary>
            <remarks>Useful for certain environments which have persistence, e.g. IIS or web apps</remarks>
        </member>
        <member name="P:IronPdf.Installation.SkipInitialization">
            <summary>
            Set to True to skip certain initialization routines, e.g. Cef initialization
            </summary>
            <remarks>Useful for certain environments which have persistence, e.g. IIS or web apps</remarks>
        </member>
        <member name="P:IronPdf.Installation.AutomaticallyDownloadNativeBinaries">
            <summary>
            Set to True to let IronPdf try to download missing NativeBinaries from the internet at a runtime.
            </summary>
            <remarks>Useful for IronPdf.Slim</remarks>
        </member>
        <member name="P:IronPdf.Installation.LicenseKey">
            <summary>
            Synonym of IronPdf.License.LicenseKey
            </summary>
        </member>
        <member name="M:IronPdf.Installation.Cleanup">
            <summary>
            Shutdown and clean-up rendering resources used by IronPdf. Prevents further renders from completing on this process
            </summary>
        </member>
        <member name="M:IronPdf.Installation.Initialize">
            <summary>
            Initializes IronPDF rendering engines immediately to avoid startup time on your first render.
            </summary>
            <returns>True if your rendering engine is fully initialized.</returns>
        </member>
        <member name="F:IronPdf.Installation.LegacyIIS">
            <summary>
            Reduces the risk of locked resources and un-handled interop exceptions within of Microsoft IIS on windows
            platforms. May for Microsoft IIS versions 7 and lower.
            </summary>
        </member>
        <member name="P:IronPdf.Installation.ChromeBrowserLimit">
            <summary>
            Maximum number of concurrent browsers when using the Chrome renderer
            </summary>
        </member>
        <member name="P:IronPdf.Installation.ChromeGpuMode">
            <summary>
            Chrome renderer GPU compatibility mode. In special environment like Docker or Cloud Service please use ChromeGpuModes.Disabled
            </summary>
        </member>
        <member name="F:IronPdf.Installation.LinuxAndDockerDependenciesAutoConfig">
            <summary>
            If <c>true</c> The necessary package dependencies for IronPDf rendering will we automatically installed to
            Docker and Debian / Ubuntu Linux deployments. <para>Applies only to IronPDF for .Net Core.</para><para>This
            will take a few minutes the next time you run IronPDF. Watch the Visual Studio "Output" window for
            progress.</para><para>Set this to false if manual Docker / Linux setup is more convenient:
            https://ironpdf.com/docs/questions/docker-linux/</para></summary>
        </member>
        <member name="F:IronPdf.Installation.SendAnonymousAnalyticsAndCrashData">
            <summary>
            Opt in or out of sending anonymous usage statistics about IronPdf usage and performance to help us improve
            the product and developer experience. <para>Usage statistics are never sent in commercially deployed
            projects (when a license key is applied), only during development usage.</para></summary>
        </member>
        <member name="P:IronPdf.Installation.TempFolderPath">
            <summary>
            The temporary folder path which temporary files and rendering engine DLLs will be deployed to where
            necessary. The default location is the system temp folder which is appropriate for most use cases.
            </summary>
            <exception cref="T:System.ArgumentException">
                <paramref name="value" /> is a zero-length string, contains only white space, or contains one or more of the
            invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />. -or- The system could not
            retrieve the absolute path.
            </exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permissions.</exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="value" /> is <see langword="null" />.</exception>
            <exception cref="T:System.NotSupportedException">
                <paramref name="value" /> contains a colon (":") that is not part of a volume identifier (for example,
            "c:\").
            </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length.</exception>
            <exception cref="T:IronPdf.Exceptions.IronPdfProductException">The property <see cref="M:IronPdf.Installation.TempFolderPath" /> is already initialized.</exception>
        </member>
        <member name="M:IronPdf.Installation.CleanupTempImages(System.Nullable{System.TimeSpan})">
            <summary>
            Method to remove temporary images from <see cref="P:IronPdf.Installation.TempFolderPath" /><para>If you used a
            custom<see cref="P:IronPdf.Installation.TempFolderPath" /> then set <see cref="P:IronPdf.Installation.TempFolderPath" /> to point
            towards your deployment directory before you call this cleanup method.</para></summary>
            <param name="expirationTime">Time from last access for files to delete. All files are deleted by default.</param>
        </member>
        <member name="T:IronPdf.ImageBehavior">
            <exclude />
        </member>
        <member name="F:IronPdf.ImageBehavior.CenteredOnPage">
            <summary>
            Image should be placed on center of the page
            </summary>
        </member>
        <member name="F:IronPdf.ImageBehavior.FitToPage">
            <summary>
            Image should fit to the page
            </summary>
        </member>
        <member name="F:IronPdf.ImageBehavior.FitToPageAndMaintainAspectRatio">
            <summary>
            Image should fit to the page and keep aspect ratio
            </summary>
        </member>
        <member name="F:IronPdf.ImageBehavior.CropPage">
            <summary>
            Page should fit to the image
            </summary>
        </member>
        <member name="F:IronPdf.ImageBehavior.TopLeftCornerOfPage">
            <summary>
            Image should be placed to the left top corner of the page
            </summary>
        </member>
        <member name="F:IronPdf.ImageBehavior.BottomLeftCornerOfPage">
            <summary>
            Image should be placed to the left bottom corner of the page
            </summary>
        </member>
        <member name="F:IronPdf.ImageBehavior.TopRightCornerOfPage">
            <summary>
            Image should be placed to the right top corner of the page
            </summary>
        </member>
        <member name="F:IronPdf.ImageBehavior.BottomRightCornerOfPage">
            <summary>
            Image should be placed to the right bottom corner of the page
            </summary>
        </member>
        <member name="T:IronPdf.ImageType">
            <exclude />
        </member>
        <member name="F:IronPdf.ImageType.Default">
            <summary>
            Default file type.  WIll save images in a Bitmap file type unless a file pattern ends in an image file
            format such as .png or .jpeg
            </summary>
        </member>
        <member name="F:IronPdf.ImageType.Bitmap">
            <summary>
            PDF pages will be rendered to windows Bitmap image files.
            </summary>
        </member>
        <member name="F:IronPdf.ImageType.Jpeg">
            <summary>
            PDF pages will be rendered to JPEG image files.
            </summary>
        </member>
        <member name="F:IronPdf.ImageType.Png">
            <summary>
            PDF pages will be rendered to PNG (Portable Network Graphics) image files.
            </summary>
        </member>
        <member name="F:IronPdf.ImageType.Gif">
            <summary>
            PDF pages will be rendered to non-animated GIF image files. The GIF
            </summary>
        </member>
        <member name="F:IronPdf.ImageType.Tiff">
            <summary>
            PDF pages will be rendered to TIFF image files.
            </summary>
        </member>
        <member name="F:IronPdf.ImageType.MultiPageTiff">
            <summary>
            Every page of the PDF will be compiled into a single multi-page TIFF image file (aka. multi-frame TIFF).
            </summary>
        </member>
        <member name="T:IronPdf.PageOrientation">
            <summary>
            Legacy support. Has been replaced by <see cref="T:IronPdf.Rendering.PdfPaperOrientation" />.
            </summary>
        </member>
        <member name="F:IronPdf.PageOrientation.Portrait">
            <summary>
            Vertical orientation.
            </summary>
        </member>
        <member name="F:IronPdf.PageOrientation.Landscape">
            <summary>
            Horizontal orientation.
            </summary>
        </member>
        <member name="T:IronPdf.HtmlStamp">
            <exclude />
        </member>
        <member name="T:IronPdf.HtmlToPdf">
            <summary>
            IronPdf.HtmlToPdf allows any web page or Html 'snippet' to be turned into a PDF document.
            <para>Legacy support.</para></summary>
        </member>
        <member name="P:IronPdf.HtmlToPdf.PrintOptions">
            <summary>
            An instance of the <see cref="T:IronPdf.PdfPrintOptions" />  class. Sets PDF output options such as Paper-Size, DPI,
            Headers and Footers.
            </summary>
        </member>
        <member name="T:IronPdf.Logging.Logger">
            <summary>
            Provides functionality for developers to view debug logs and export log files from IronPdf.
            </summary>
        </member>
        <member name="T:IronPdf.Logging.Logger.LoggingModes">
            <summary>
            Different Ways to log developer notices and warnings 
            </summary>
        </member>
        <member name="F:IronPdf.Logging.Logger.LoggingModes.None">
            <summary>
            Do not log messages
            </summary>
        </member>
        <member name="F:IronPdf.Logging.Logger.LoggingModes.DebugOutputWindow">
            <summary>
            Sends Messages to System.Diagnostics.Debug
            </summary>
        </member>
        <member name="F:IronPdf.Logging.Logger.LoggingModes.Console">
            <summary>
            Sends Messages to System.Console
            </summary>
        </member>
        <member name="F:IronPdf.Logging.Logger.LoggingModes.Custom">
            <summary>
            Send messages to custom logger
            </summary>
        </member>
        <member name="F:IronPdf.Logging.Logger.LoggingModes.File">
            <summary>
            Send messages to file
            </summary>
        </member>
        <member name="F:IronPdf.Logging.Logger.LoggingModes.All">
            <summary>
            Send messages to all available endpoints
            </summary>
        </member>
        <member name="E:IronPdf.Logging.Logger.MessageLogged">
            <summary>
            Event handler to intercept logged messages.
            </summary>
        </member>
        <member name="P:IronPdf.Logging.Logger.LoggingMode">
            <summary>
            Activate or disable detailed developer messages sent to your choice of location in the IDE or application console. 
            </summary>
        </member>
        <member name="P:IronPdf.Logging.Logger.LogFilePath">
            <summary>
            Setting a log path produces ‘log files’ which may be vey useful for debugging in production or providing to Iron Software support when reporting an issue.
            <para>LogFilePath may be set to a directory name or a full file name.</para><para>Setting <c>LogFilePath = null</c> will turn off log files.</para></summary>
            <seealso cref="M:IronPdf.Logging.Logger.ClearLogFiles" />
        </member>
        <member name="M:IronPdf.Logging.Logger.ClearLogFiles">
            <summary>
            Removes any Iron Software log files at the <see cref="P:IronPdf.Logging.Logger.LogFilePath" />.
            </summary>
            <seealso cref="P:IronPdf.Logging.Logger.LogFilePath" />
        </member>
        <member name="T:IronPdf.PdfDocument.TextAnnotation">
            <exclude />
        </member>
        <member name="T:IronPdf.PdfDocument.PositionOptions">
            <exclude />
        </member>
        <member name="T:IronPdf.PdfDocument.PdfSecuritySettings">
            <exclude />
        </member>
        <member name="T:IronPdf.PdfDocument.PdfSecuritySettings.PdfEditSecurity">
            <exclude />
        </member>
        <member name="F:IronPdf.PdfDocument.PdfSecuritySettings.PdfEditSecurity.NoEdit">
            <summary>
            The user may not edit the PDF unless they have the Owner password.
            </summary>
        </member>
        <member name="F:IronPdf.PdfDocument.PdfSecuritySettings.PdfEditSecurity.EditPages">
            <summary>
            The user may re-arrange pages, rotate pages and manage PDF thumbnails, but may not otherwise edit
            the PDF unless they have the Owner password.
            </summary>
        </member>
        <member name="F:IronPdf.PdfDocument.PdfSecuritySettings.PdfEditSecurity.EditAll">
            <summary>
            The user may edit the PDF as allowed by their PDF client software.
            </summary>
        </member>
        <member name="T:IronPdf.PdfDocument.PdfSecuritySettings.PdfPrintSecrity">
            <exclude />
        </member>
        <member name="F:IronPdf.PdfDocument.PdfSecuritySettings.PdfPrintSecrity.NoPrint">
            <summary>
            The user may not print the PDF unless they have the Owner password.
            </summary>
        </member>
        <member name="F:IronPdf.PdfDocument.PdfSecuritySettings.PdfPrintSecrity.PrintLowQuality">
            <summary>
            The user may only print the PDF at low resolution unless they have the Owner password.
            </summary>
        </member>
        <member name="F:IronPdf.PdfDocument.PdfSecuritySettings.PdfPrintSecrity.FullPrintRights">
            <summary>
            Users may print the PDF without restriction.
            </summary>
        </member>
        <member name="T:IronPdf.PdfDocument.WaterMarkLocation">
            <exclude />
        </member>
        <member name="F:IronPdf.PdfDocument.WaterMarkLocation.TopLeft">
            <summary>
            The top left of the page
            </summary>
        </member>
        <member name="F:IronPdf.PdfDocument.WaterMarkLocation.TopCenter">
            <summary>
            The top center of the page
            </summary>
        </member>
        <member name="F:IronPdf.PdfDocument.WaterMarkLocation.TopRight">
            <summary>
            The top right of the page
            </summary>
        </member>
        <member name="F:IronPdf.PdfDocument.WaterMarkLocation.MiddleLeft">
            <summary>
            The middle left of the page
            </summary>
        </member>
        <member name="F:IronPdf.PdfDocument.WaterMarkLocation.MiddleCenter">
            <summary>
            The dead center of the page
            </summary>
        </member>
        <member name="F:IronPdf.PdfDocument.WaterMarkLocation.MiddleRight">
            <summary>
            The middle right of the page
            </summary>
        </member>
        <member name="F:IronPdf.PdfDocument.WaterMarkLocation.BottomLeft">
            <summary>
            The bottom left of the page
            </summary>
        </member>
        <member name="F:IronPdf.PdfDocument.WaterMarkLocation.BottomCenter">
            <summary>
            The bottom center of the page
            </summary>
        </member>
        <member name="F:IronPdf.PdfDocument.WaterMarkLocation.BottomRight">
            <summary>
            The bottom right of the page
            </summary>
        </member>
        <member name="T:IronPdf.PdfDocument.PdfCustomMetadataProperties">
            <exclude />
        </member>
        <member name="M:IronPdf.PdfDocument.GetAnnotationCount(System.Int32)">
            <summary>
            Retrieve the number of annotations contained on the specified page
            </summary>
            <param name="index">Page index</param>
            <returns>Number of annotations contained on the page</returns>
        </member>
        <member name="P:IronPdf.PdfDocument.Attachments">
            <summary>
            Collection of attachments contained within the pdf document
            </summary>
        </member>
        <member name="M:IronPdf.PdfDocument.AddBackgroundPdf(System.String,System.Int32)">
            <summary>
            Adds a background to each page of this PDF. The background is copied from a page in another PDF document.
            </summary>
            <param name="BackgroundPdfPath">The background PDF's file path.</param>
            <param name="BackgroundPdfPageIndex">Index (zero-based page number) to copy from the BackgroundPdf.</param>
            <returns>Returns this PdfDocument object, allowing for a 'fluent' (LINQ like) chained in-line code style</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.AddBackgroundPdf(IronPdf.PdfDocument,System.Int32)">
            <summary>
            Adds a background to each page of this PDF. The background is copied from a page in another PDF document.
            </summary>
            <param name="BackgroundPdf">The Background PDF as a <see cref="T:IronPdf.PdfDocument" />.</param>
            <param name="BackgroundPdfPageIndex">Index (zero-based page number) to copy from the BackgroundPdf.</param>
            <returns>Returns this PdfDocument object, allowing for a 'fluent' (LINQ like) chained in-line code style</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.AddBackgroundPdfToPage(System.Int32,System.String,System.Int32)">
            <summary>
            Adds the background to one page of this PDF.  The background is copied from a page in another PDF document.
            </summary>
            <param name="ToPageIndex">Index (zero-based page number) of the page of this PDF to which the background will be applied to.</param>
            <param name="BackgroundPdfPath">The background PDF path.</param>
            <param name="BackgroundPdfPageIndex">Index (zero-based page number) to copy from the BackgroundPdf.</param>
            <returns>Returns this PdfDocument object, allowing for a 'fluent' (LINQ like) chained in-line code style</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.AddBackgroundPdfToPage(System.Int32,IronPdf.PdfDocument,System.Int32)">
            <summary>
            Adds the background to one page of this PDF.  The background is copied from a page in another PDF document.
            </summary>
            <param name="ToPageIndex">Index (zero-based page number) of the page of this PDF to which the background will be applied to.</param>
            <param name="BackgroundPdf">The Background PDF as a <see cref="T:IronPdf.PdfDocument" />.</param>
            <param name="BackgroundPdfPageIndex">Index (zero-based page number) to copy from the BackgroundPdf.</param>
            <returns>Returns this PdfDocument object, allowing for a 'fluent' (LINQ like) chained in-line code style</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.AddBackgroundPdfToPageRange(System.Collections.Generic.IEnumerable{System.Int32},System.String,System.Int32)">
            <summary>
            Adds the background to specified pages of this PDF.  The background is copied from a page in another PDF
            document.
            </summary>
            <param name="ToPageIndexes">A list of Indexes (zero-based page numbers) of pages in this PDF to which the background will be applied to.</param>
            <param name="BackgroundPdfPath">The background PDF path.</param>
            <param name="BackgroundPdfPageIndex">Index (zero-based page number) to copy from the BackgroundPdf.</param>
            <returns>Returns this PdfDocument object, allowing for a 'fluent' (LINQ like) chained in-line code style</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.AddBackgroundPdfToPageRange(System.Collections.Generic.IEnumerable{System.Int32},IronPdf.PdfDocument,System.Int32)">
            <summary>
            Adds the background to specified pages of this PDF.  The background is copied from a page in another PDF
            document.
            </summary>
            <param name="ToPageIndexes">A list of Indexes (zero-based page numbers) of pages in this PDF to which the background will be applied to.</param>
            <param name="BackgroundPdf">The Background PDF as a <see cref="T:IronPdf.PdfDocument" />.</param>
            <param name="BackgroundPdfPageIndex">Index (zero-based page number) to copy from the BackgroundPdf.</param>
            <returns>Returns this PdfDocument object, allowing for a 'fluent' (LINQ like) chained in-line code style</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.AddBackgroundPdfToPageRange(System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
            Adds the background to a range of pages in this PDF.  The background is copied from a page in another PDF
            document.
            </summary>
            <param name="StartPageIndex">First index  (zero-based page number) to start adding backgrounds to .</param>
            <param name="EndPageIndex">Last index  (zero-based page number) to end adding backgrounds to.</param>
            <param name="BackgroundPdfPath">The background PDF path.</param>
            <param name="BackgroundPdfPageIndex">Index (zero-based page number) to copy from the BackgroundPdf.</param>
            <returns>Returns this PdfDocument object, allowing for a 'fluent' (LINQ like) chained in-line code style</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.AddBackgroundPdfToPageRange(System.Int32,System.Int32,IronPdf.PdfDocument,System.Int32)">
            <summary>
            Adds the background to a range of pages in this PDF.  The background is copied from a page in another PDF
            document.
            </summary>
            <param name="StartPageIndex">First index  (zero-based page number) to start adding backgrounds to .</param>
            <param name="EndPageIndex">Last index  (zero-based page number) to end adding backgrounds to.</param>
            <param name="BackgroundPdf">The Background PDF as a <see cref="T:IronPdf.PdfDocument" />.</param>
            <param name="BackgroundPdfPageIndex">Index (zero-based page number) to copy from the BackgroundPdf.</param>
            <returns>Returns this PdfDocument object, allowing for a 'fluent' (LINQ like) chained in-line code style</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.AddForegroundOverlayPdf(System.String,System.Int32)">
            <summary>
            Adds an overlay to each page of this PDF. The foreground overlay is copied from a page in another PDF
            document.
            </summary>
            <param name="OverlayPdfPath">The background PDF's file path.</param>
            <param name="OverlayPdfPageIndex">Index (zero-based page number) to copy from the Overlay PDF.</param>
            <returns>Returns this PdfDocument object, allowing for a 'fluent' (LINQ like) chained in-line code style</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.AddForegroundOverlayPdf(IronPdf.PdfDocument,System.Int32)">
            <summary>
            Adds an overlay to each page of this PDF. The foreground overlay is copied from a page in another PDF
            document.
            </summary>
            <param name="OverlayPdf">The overlay PDF as a <see cref="T:IronPdf.PdfDocument" />.</param>
            <param name="OverlayPdfPageIndex">Index (zero-based page number) to copy from the Overlay PDF.</param>
            <returns>Returns this PdfDocument object, allowing for a 'fluent' (LINQ like) chained in-line code style</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.AddForegroundOverlayPdfToPage(System.Int32,System.String,System.Int32)">
            <summary>
            Adds an overlay to one page of this PDF. The foreground overlay is copied from a page in another PDF
            document.
            </summary>
            <param name="ToPageIndex">Index (zero-based page number) of the page of this PDF to which the foreground will be applied to.</param>
            <param name="OverlayPdfPath">The overlay PDF path.</param>
            <param name="OverlayPdfPageIndex">Index (zero-based page number) to copy from the Overlay PDF.</param>
            <returns>Returns this PdfDocument object, allowing for a 'fluent' (LINQ like) chained in-line code style</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.AddForegroundOverlayPdfToPage(System.Int32,IronPdf.PdfDocument,System.Int32)">
            <summary>
            Adds an overlay to one page of this PDF. The foreground overlay is copied from a page in another PDF
            document.
            </summary>
            <param name="ToPageIndex">Index (zero-based page number) of the page of this PDF to which the foreground will be applied to.</param>
            <param name="OverlayPdf">The overlay PDF as a <see cref="T:IronPdf.PdfDocument" />.</param>
            <param name="OverlayPdfPageIndex">Index (zero-based page number) to copy from the Overlay PDF.</param>
            <returns>Returns this PdfDocument object, allowing for a 'fluent' (LINQ like) chained in-line code style</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.AddForegroundOverlayPdfToPageRange(System.Collections.Generic.IEnumerable{System.Int32},System.String,System.Int32)">
            <summary>
            Adds an overlay to a range or pages of this PDF. The foreground overlay is copied from a page in another PDF
            document.
            </summary>
            <param name="ToPageIndexes">A list of Indexes (zero-based page numbers) of pages in this PDF to which the overlay will be applied to.</param>
            <param name="OverlayPdfPath">The overlay PDF path.</param>
            <param name="OverlayPdfPageIndex">Index (zero-based page number) to copy from the Overlay PDF.</param>
            <returns>Returns this PdfDocument object, allowing for a 'fluent' (LINQ like) chained in-line code style</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.AddForegroundOverlayPdfToPageRange(System.Collections.Generic.IEnumerable{System.Int32},IronPdf.PdfDocument,System.Int32)">
            <summary>
            Adds an overlay to a range or pages of this PDF. The foreground overlay is copied from a page in another PDF
            document.
            </summary>
            <param name="ToPageIndexes">A list of Indexes (zero-based page numbers) of pages in this PDF to which the overlay will be applied to.</param>
            <param name="OverlayPdf">The overlay PDF as a <see cref="T:IronPdf.PdfDocument" />.</param>
            <param name="OverlayPdfPageIndex">Index (zero-based page number) to copy from the Overlay PDF.</param>
            <returns>Returns this PdfDocument object, allowing for a 'fluent' (LINQ like) chained in-line code style</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.AddForegroundOverlayPdfToPageRange(System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
            Adds an overlay to a range or pages of this PDF. The foreground overlay is copied from a page in another PDF
            document.
            </summary>
            <param name="StartPageIndex">First index  (zero-based page number) to start adding overlays to .</param>
            <param name="EndPageIndex">Last index  (zero-based page number) to end adding overlays to.</param>
            <param name="OverlayPdfPath">The overlay PDF path.</param>
            <param name="OverlayPdfPageIndex">Index (zero-based page number) to copy from the Overlay PDF.</param>
            <returns>Returns this PdfDocument object, allowing for a 'fluent' (LINQ like) chained in-line code style</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.AddForegroundOverlayPdfToPageRange(System.Int32,System.Int32,IronPdf.PdfDocument,System.Int32)">
            <summary>
            Adds an overlay to a range or pages of this PDF. The foreground overlay is copied from a page in another PDF
            document.
            </summary>
            <param name="StartPageIndex">First index  (zero-based page number) to start adding overlays to .</param>
            <param name="EndPageIndex">Last index  (zero-based page number) to end adding overlays to.</param>
            <param name="OverlayPdf">The overlay PDF as a <see cref="T:IronPdf.PdfDocument" />.</param>
            <param name="OverlayPdfPageIndex">Index (zero-based page number) to copy from the Overlay PDF.</param>
            <returns>Returns this PdfDocument object, allowing for a 'fluent' (LINQ like) chained in-line code style</returns>
        </member>
        <member name="P:IronPdf.PdfDocument.Bookmarks">
            <summary>
            Hierarchy of navigational bookmarks contained at the top level of the document
            </summary>
        </member>
        <member name="M:IronPdf.PdfDocument.CopyPage(System.Int32)">
            <summary>
            Creates a new PDF by copying a page from this PdfDocument.
            </summary>
            <param name="PageIndex">Index of the page.  Note: Page 1 has index 0...</param>
            <returns>A new <see cref="T:IronPdf.PdfDocument" /></returns>
        </member>
        <member name="M:IronPdf.PdfDocument.CopyPages(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Creates a new PDF by copying a range of pages from this PdfDocument.
            </summary>
            <param name="PageIndexes">An IEnumerable of page indexes to copy into the new PDF.</param>
            <returns>A new <see cref="T:IronPdf.PdfDocument" /></returns>
        </member>
        <member name="M:IronPdf.PdfDocument.CopyPages(System.Int32,System.Int32)">
            <summary>
            Creates a new PDF by copying a range of pages from this <see cref="T:IronPdf.PdfDocument" />.
            </summary>
            <param name="StartIndex">The index of the first PDF page to copy.. Note: Page 1 has index 0</param>
            <param name="EndIndex">The index of the last PDF page to copy.&gt;</param>
            <returns>A new <see cref="T:IronPdf.PdfDocument" /></returns>
        </member>
        <member name="M:IronPdf.PdfDocument.AddTextFooters(IronPdf.TextHeaderFooter,System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Renders page footers to an existing PDF File <para>Margin spacing on the PDF page for the footer are set to
            default values of 25mm. An overload method allow footer margins to be chosen specifically or set to
            zero.</para></summary>
            <param name="Footer">A new instance of IronPdf.SimpleHeaderFooter that defines the footer content and layout.</param>
            <param name="FirstPageNumber">Optional. The number of first page. </param>
            <param name="PageIndexesToAddFootersTo">Optional. The PageIndexes (zero-based page numbers) to which the footer will be added.</param>
            <returns>Returns this PdfDocument object, allowing for a 'fluent' (LINQ like) chained in-line code style</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.AddTextFooters(IronPdf.TextHeaderFooter,System.Double,System.Double,System.Double,System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Renders page footers to an existing PDF File
            </summary>
            <param name="Footer">A new instance of IronPdf.SimpleHeaderFooter that defines the footer content and layout.</param>
            <param name="MarginLeft">The left margin of the footer on the page in mm.</param>
            <param name="MarginRight">The right margin of the footer on the page in mm.</param>
            <param name="MarginBottom">The bottom margin of the footer on the page in mm.</param>
            <param name="FirstPageNumber">Optional. The number of first page. </param>
            <param name="PageIndexesToAddFootersTo">Optional. The PageIndexes (zero-based page numbers) to which the footer will be added.</param>
            <returns>Returns this PdfDocument object, allowing for a 'fluent' (LINQ like) chained in-line code style</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.AddTextHeaders(IronPdf.TextHeaderFooter,System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Renders page headers to an existing PDF File <para>Margin spacing on the PDF page for the header are set to
            default values of 25mm. An overload method allow header margins to be chosen specifically or set to
            zero.</para></summary>
            <param name="Header">A new instance of IronPdf.SimpleHeaderFooter that defines the header content and layout.</param>
            <param name="FirstPageNumber">Optional. The number of first page. </param>
            <param name="PageIndexesToAddHeadersTo">Optional. The PageIndexes (zero-based page numbers) to which the header will be added.</param>
            <returns>Returns this PdfDocument object, allowing for a 'fluent' (LINQ like) chained in-line code style</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.AddTextHeaders(IronPdf.TextHeaderFooter,System.Double,System.Double,System.Double,System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Renders page headers to an existing PDF File
            </summary>
            <param name="Header">A new instance of IronPdf.SimpleHeaderFooter that defines the header content and layout.</param>
            <param name="MarginLeft">The left margin of the header on the page in mm.</param>
            <param name="MarginRight">The right margin of the header on the page in mm.</param>
            <param name="MarginTop">The top margin of the header on the page in mm.</param>
            <param name="FirstPageNumber">Optional. The number of first page. </param>
            <param name="PageIndexesToAddHeadersTo">Optional. The PageIndexes (zero-based page numbers) to which the header will be added.</param>
            <returns>Returns this PdfDocument object, allowing for a 'fluent' (LINQ like) chained in-line code style</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.AddTextHeadersAndFooters(IronPdf.ChromePdfRenderOptions,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Add text headers and footers using the specified render options and optional list of page indices
            </summary>
            <param name="Options">Render options for the text headers and footers</param>
            <param name="PageIndexes">Optional list of page indices to apply headers and footers to. Defaults to all pages</param>
            <returns>Pdf document</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.AddHtmlHeadersAndFooters(IronPdf.ChromePdfRenderOptions,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Add HTML headers and footers using the specified render options and optional list of page indices
            </summary>
            <param name="Options">Render options for the HTML headers and footers</param>
            <param name="PageIndexes">Optional list of page indices to apply headers and footers to. Defaults to all pages</param>
            <returns>Pdf document</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.AddHtmlHeadersAndFooters_Internal(IronPdf.ChromePdfRenderOptions,System.Collections.Generic.IEnumerable{System.Int32},System.String,System.String,System.String)">
            <summary>
            This internal method use for secure some infomation for Header Footer e.g. url, htmlTitle, pdfTitle
            </summary>
        </member>
        <member name="M:IronPdf.PdfDocument.AddHtmlFooters(IronPdf.HtmlHeaderFooter,System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Renders HTML page footers to an existing PDF File
            <para>Margin spacings are set to default values of 25mm. Use <see cref="M:IronPdf.PdfDocument.AddHtmlFooters(IronPdf.HtmlHeaderFooter,System.Double,System.Double,System.Double,System.Int32,System.Collections.Generic.IEnumerable{System.Int32})" /> to specify footer margins</para></summary>
            <param name="Footer">A new instance of IronPdf.HtmlHeaderFooter that defines the footer content and layout.</param>
            <param name="FirstPageNumber">Optional. The number of first page. </param>
            <param name="PageIndexesToAddFootersTo">Optional. The PageIndexes (zero-based page numbers) to which the footer will be added.</param>
            <returns>Returns this PdfDocument object, allowing for a 'fluent' (LINQ like) chained in-line code style</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.AddHtmlFooters(IronPdf.HtmlHeaderFooter,System.Double,System.Double,System.Double,System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Renders HTML page footers to an existing PDF File
            </summary>
            <param name="Footer">A new instance of IronPdf.HtmlHeaderFooter that defines the footer content and layout.</param>
            <param name="MarginLeft">The left margin of the footer on the page in mm.</param>
            <param name="MarginRight">The right margin of the footer on the page in mm.</param>
            <param name="MarginBottom">The bottom margin of the footer on the page in mm.</param>
            <param name="FirstPageNumber">Optional. The number of first page. </param>
            <param name="PageIndexesToAddFootersTo">Optional. The PageIndexes (zero-based page numbers) to which the footer will be added.</param>
            <returns>Returns this PdfDocument object, allowing for a 'fluent' (LINQ like) chained in-line code style</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.AddHtmlHeaders(IronPdf.HtmlHeaderFooter,System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Renders HTML page headers to an existing PDF File
            <para>Margin spacings are set to default values of 25mm. Use <see cref="M:IronPdf.PdfDocument.AddHtmlHeaders(IronPdf.HtmlHeaderFooter,System.Double,System.Double,System.Double,System.Int32,System.Collections.Generic.IEnumerable{System.Int32})" /> to specify header margins</para></summary>
            <param name="Header">A new instance of IronPdf.HtmlHeaderFooter that defines the header content and layout.</param>
            <param name="FirstPageNumber">Optional. The number of first page. </param>
            <param name="PageIndexesToAddHeadersTo">Optional. The PageIndexes (zero-based page numbers) to which the header will be added.</param>
            <returns>Returns this PdfDocument object, allowing for a 'fluent' (LINQ like) chained in-line code style</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.AddHtmlHeaders(IronPdf.HtmlHeaderFooter,System.Double,System.Double,System.Double,System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Renders HTML page headers to an existing PDF File
            </summary>
            <param name="Header">A new instance of IronPdf.HtmlHeaderFooter that defines the header content and layout.</param>
            <param name="MarginLeft">The left margin of the header on the page in mm.</param>
            <param name="MarginRight">The right margin of the header on the page in mm.</param>
            <param name="MarginTop">The top margin of the header on the page in mm.</param>
            <param name="FirstPageNumber">Optional. The number of first page. </param>
            <param name="PageIndexesToAddHeadersTo">Optional. The PageIndexes (zero-based page numbers) to which the header will be added.</param>
            <returns>Returns this PdfDocument object, allowing for a 'fluent' (LINQ like) chained in-line code style</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.ExtractAllBitmaps">
            <summary>
             Finds all embedded Images from within the PDF and returns then as System.Drawing.Bitmap objects
             </summary>
            <returns>IEnumerable of Bitmap.  The extracted images as System.Drawing Objects</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.ExtractAllImages">
            <summary>
            Finds all embedded Images from within the PDF and returns then as System.Drawing.Image objects
            </summary>
            <returns>IEnumerable of Image.  The extracted images as System.Drawing Objects</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.ExtractAllRawImages">
            <summary>
            Extracts all images from a PDf document. Images are returned as their raw data in as Byte Arrays (byte[])
            </summary>
            <returns>An Enumerable of Byte Arrays.  Each Byte Array represents one image.</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.ExtractBitmapsFromPage(System.Int32)">
            <summary>
            Finds all embedded Images from within one page of the PDF and returns them as System.Drawing.Bitmap objects
            </summary>
            <param name="PageIndex">Index of the page.  Note: Page 1 has index 0...</param>
            <returns>IEnumerable of Bitmap.  The extracted images as System.Drawing Objects</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.ExtractBitmapsFromPages(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Finds all embedded Images from within a specified  pages in the PDF and returns them as
            System.Drawing.Bitmap objects
            </summary>
            <param name="PageIndexes">An IEnumerable list of page indexes.</param>
            <returns>IEnumerable of Bitmap.  The extracted images as System.Drawing Objects</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.ExtractBitmapsFromPages(System.Int32,System.Int32)">
            <summary>
            Finds all embedded Images from within a range of pages in the PDF and returns them as System.Drawing.Bitmap
            objects
            </summary>
            <param name="StartIndex">The index of the first PDF page  to extract images from.. Note: Page 1 has index 0</param>
            <param name="EndIndex">The index of the last PDF page to extract images from.</param>
            <returns>IEnumerable of Bitmap.  The extracted images as System.Drawing Objects</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.ExtractImagesFromPage(System.Int32)">
            <summary>
            Finds all embedded Images from within one page of the PDF and returns them as System.Drawing.Image objects
            </summary>
            <param name="PageIndex">Index of the page.  Note: Page 1 has index 0...</param>
            <returns>IEnumerable of Image.  The extracted images as System.Drawing Objects</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.ExtractImagesFromPages(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Finds all embedded Images from within a specified  pages in the PDF and returns them as System.Drawing.Image
            objects
            </summary>
            <param name="PageIndexes">An IEnumerable list of page indexes.</param>
            <returns>IEnumerable of Image.  The extracted images as System.Drawing Objects</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.ExtractImagesFromPages(System.Int32,System.Int32)">
            <summary>
            Finds all embedded Images from within a range of pages in the PDF and returns them as System.Drawing.Bitmap
            objects
            </summary>
            <param name="StartIndex">The index of the first PDF page  to extract images from.. Note: Page 1 has index 0</param>
            <param name="EndIndex">The index of the last PDF page to extract images from.</param>
            <returns>IEnumerable of Image.  The extracted images as System.Drawing Objects</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.ExtractRawImagesFromPage(System.Int32)">
            <summary>
            Finds all embedded Images from within one page of the PDF and returns them as raw image byte array objects
            </summary>
            <param name="PageIndex">Index of the page.  Note: Page 1 has index 0...</param>
            <returns>IEnumerable of raw image byte array.</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.ExtractRawImagesFromPages(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Finds all embedded Images from specified pages in the PDF and returns them as System.Drawing.Image
            objects
            </summary>
            <param name="PageIndexes">An IEnumerable list of page indexes.</param>
            <returns>IEnumerable of raw image byte array.</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.ExtractRawImagesFromPages(System.Int32,System.Int32)">
            <summary>
            Finds all embedded Images from within a range of pages in the PDF and returns them as raw image byte array
            objects
            </summary>
            <param name="StartIndex">The index of the first PDF page  to extract images from.. Note: Page 1 has index 0</param>
            <param name="EndIndex">The index of the last PDF page to extract images from.</param>
            <returns>IEnumerable of raw image byte array.</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.#ctor(System.Int32)">
            <summary>
            Create a reference to a PDF document that has already been opened and associated with the specified ID number
            </summary>
            <param name="id">ID number of the existing (and currently open) PDF document</param>
            <remarks>This internal method is useful for when you have a PDF document that has been opened but you have not yet created
            a PdfDocument class instance for the specified PDF document ID</remarks>
        </member>
        <member name="M:IronPdf.PdfDocument.#ctor(System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Opens an existing PDF document for editing.
            </summary>
            <param name="PdfFilePath">The PDF file path.</param>
            <param name="Password">Optional user password if the PDF document is encrypted.</param>
            <param name="OwnerPassword">Optional password if the PDF document is protected by owner (printing, modifying restrictions etc..).</param>
            <param name="GenerateUniqueDocumentIdentifiers">  if false, <see cref="T:System.Guid" /> is not generated inside PDF DOM and <see cref="P:IronPdf.PdfDocument.BinaryData" /> for two identical PDF files will be the same.  This is very useful for Unit Testing, especially comparing rendered PDFs for Equality.</param>
            <exception cref="T:System.IO.IOException">Exception thrown if can not be opened.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="PdfFilePath" /> is null, empty, or consists only of white-space characters.</exception>
        </member>
        <member name="M:IronPdf.PdfDocument.#ctor(System.String,System.String,System.String)">
            <summary>
            Opens an existing PDF document for editing.
            </summary>
            <param name="PdfFilePath">The PDF file path.</param>
            <param name="Password">Optional user password if the PDF document is encrypted.</param>
            <param name="OwnerPassword">Optional password if the PDF document is protected by owner (printing, modifying restrictions etc..).</param>
            <exception cref="T:System.IO.IOException">Exception thrown if can not be opened.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="PdfFilePath" /> is null, empty, or consists only of white-space characters.</exception>
        </member>
        <member name="M:IronPdf.PdfDocument.#ctor(System.IO.Stream,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Opens an existing PDF document for editing.
            </summary>
            <param name="PdfDataStream">The PDF file data as a Stream.</param>
            <param name="Password">Optional user password if the PDF document is encrypted.</param>
            <param name="OwnerPassword">Optional password if the PDF document is protected by owner (printing, modifying restrictions etc..).</param>
            <param name="GenerateUniqueDocumentIdentifiers">  if false, <see cref="T:System.Guid" /> is not generated inside PDF DOM and <see cref="P:IronPdf.PdfDocument.BinaryData" /> for two identical PDF files will be the same.  This is very useful for Unit Testing, especially comparing rendered PDFs for Equality.</param>
            <exception cref="T:System.IO.IOException">Exception thrown if can not be opened.</exception>
        </member>
        <member name="M:IronPdf.PdfDocument.#ctor(System.IO.Stream,System.String,System.String)">
            <summary>
            Opens an existing PDF document for editing.
            </summary>
            <param name="PdfDataStream">The PDF file data as a Stream.</param>
            <param name="Password">Optional user password if the PDF document is encrypted.</param>
            <param name="OwnerPassword">Optional password if the PDF document is protected by owner (printing, modifying restrictions etc..).</param>
            <exception cref="T:System.IO.IOException">Exception thrown if can not be opened.</exception>
        </member>
        <member name="M:IronPdf.PdfDocument.#ctor(System.Byte[],System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Opens an existing PDF document for editing.
            </summary>
            <param name="PdfData">The PDF file data as byte array.</param>
            <param name="Password">Optional user password if the PDF document is encrypted.</param>
            <param name="OwnerPassword">Optional password if the PDF document is protected by owner (printing, modifying restrictions etc..).</param>
            <exception cref="T:System.IO.IOException">Exception thrown if can not be opened.</exception>
        </member>
        <member name="M:IronPdf.PdfDocument.#ctor(System.Byte[],System.String,System.String)">
            <summary>
            Opens an existing PDF document for editing.
            </summary>
            <param name="PdfData">The PDF file data as byte array.</param>
            <param name="Password">Optional user password if the PDF document is encrypted.</param>
            <param name="OwnerPassword">Optional password if the PDF document is protected by owner (printing, modifying restrictions etc..).</param>
            <exception cref="T:System.IO.IOException">Exception thrown if can not be opened.</exception>
        </member>
        <member name="M:IronPdf.PdfDocument.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:IronPdf.PdfDocument.Dispose">
            <summary>
            Releases used resources.
            </summary>
        </member>
        <member name="M:IronPdf.PdfDocument.FromFile(System.String,System.String,System.String)">
            <summary>
            Opens an existing PDF document for editing.
            </summary>
            <param name="PdfFilePath">The PDF file path.</param>
            <param name="password">Optional user password if the PDF document is encrypted.</param>
            <param name="ownerPassword">Optional password if the PDF document is protected by owner (printing, modifying restrictions etc..).</param>
            <exception cref="T:System.IO.IOException">Exception thrown if can not be opened.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="PdfFilePath" /> is null, empty, or consists only of white-space characters.</exception>
            <returns>An IronPdf.PdfDocument object as loaded from the file path.</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.SaveAs(System.String)">
            <summary>
            Saves the PdfDocument to a file. <para>Supports site relative paths staring with "~/" in .Net Framework Web
            4+ Applications</para></summary>
            <param name="FileName">File Path</param>
            <returns>This PdfDocument for fluid code notation.</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.TrySaveAs(System.String)">
            <summary>
            Attempt to save the PdfDocument to a file.
            </summary>
            <param name="FileName">File Path</param>
            <returns>
            }<c>true</c> if the file was saved successfully.  <c>false</c> if an error occurred (e.g. file was locked or
            insufficient permissions).
            </returns>
        </member>
        <member name="P:IronPdf.PdfDocument.BinaryData">
            <summary>
            Gets the binary data for the full PDF file as a byte array.
            </summary>
            <value>
            The PDF file as a byte array.
            </value>
        </member>
        <member name="P:IronPdf.PdfDocument.OwnerPassword">
            <summary>
            Sets the owner password and enables 128-bit encryption of PDF content. An owner password is one used to
            enable and disable all other security settings. <para>OwnerPassword must be set to a non empty string value
            for<see cref="P:IronPdf.Security.PdfSecuritySettings.AllowUserCopyPasteContent" />,<see cref="P:IronPdf.Security.PdfSecuritySettings.AllowUserAnnotations" />,<see cref="P:IronPdf.Security.PdfSecuritySettings.AllowUserFormData" />,<see cref="P:IronPdf.Security.PdfSecuritySettings.AllowUserPrinting" /> and<see cref="P:IronPdf.Security.PdfSecuritySettings.AllowUserEdits" /> to be
            restricted.</para></summary>
        </member>
        <member name="P:IronPdf.PdfDocument.Password">
            <summary>
            Sets a Password used to protect and encrypt the PDF File. Setting a password will cause IronPDF to
            automatically protect the PDF file content using strong 128 bit encryption. Setting the password to null
            will remove any existing password.
            </summary>
        </member>
        <member name="P:IronPdf.PdfDocument.Stream">
            <summary>
             Gets the binary data for the full PDF file as a Stream.<para>This Stream is <see cref="T:System.IDisposable" /> and should be disposed with "using" or "Dispose()" methods.</para></summary>
            <value>
             The PDF file as a new MemoryStream which is <see cref="T:System.IDisposable" /> and should be disposed with "using" or "Dispose()" methods.
             </value>
        </member>
        <member name="M:IronPdf.PdfDocument.AppendPdf(IronPdf.PdfDocument)">
            <summary>
            Appends another PDF to the end of the current <see cref="T:IronPdf.PdfDocument" />
            If AnotherPdfFile contains form fields, those fields will be appended with '_' in the resulting PDF. e.g. 'Name' will be 'Name_'
            </summary>
            <param name="AnotherPdfFile">PdfDocument to append.</param>
            <returns>A new <see cref="T:IronPdf.PdfDocument" /></returns>
        </member>
        <member name="M:IronPdf.PdfDocument.InsertPdf(IronPdf.PdfDocument,System.Int32)">
            <summary>
            Inserts another PDF into the current PdfDocument, starting at a given Page Index.
            If AnotherPdfFile contains form fields, those fields will be appended with '_' in the resulting PDF. e.g. 'Name' will be 'Name_'
            </summary>
            <param name="AnotherPdfFile">Another PdfDocument.</param>
            <param name="AtIndex">Index at which to insert the new content.  Note: Page 1 has index 0...</param>
            <returns>Returns this PdfDocument object, allowing for a 'fluent' (LINQ like) chained in-line code style</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.Merge(System.Collections.Generic.IEnumerable{IronPdf.PdfDocument})">
            <summary>
             Static method that joins (concatenates) multiple PDF documents together into one compiled PDF document.
             If the PDF contains form fields the form field in the resulting PDF's name will be appended with '_{index}' e.g. 'Name' will be 'Name_0'
             </summary>
            <param name="pdfs">
             A IEnumerable of PdfDocument.  To merge existing PDF files you may use the PdfDocument.FromFile static
             method in conjunction with Merge.
             </param>
            <returns>
             A new, merged <see cref="T:IronPdf.PdfDocument" /></returns>
        </member>
        <member name="M:IronPdf.PdfDocument.Merge(IronPdf.PdfDocument,IronPdf.PdfDocument)">
            <summary>
            Static method that joins (concatenates) 2 PDF documents together into one PDF document.
            If the PDF contains form fields the form field in the resulting PDF's name will be appended with '_{index}' e.g. 'Name' will be 'Name_0'
            </summary>
            <param name="a">A PDF</param>
            <param name="b">A Seconds PDF</param>
            <returns>
            A new, merged <see cref="T:IronPdf.PdfDocument" /></returns>
        </member>
        <member name="M:IronPdf.PdfDocument.PrependPdf(IronPdf.PdfDocument)">
            <summary>
            Adds another PDF to the beginning of the current PdfDocument
            If AnotherPdfFile contains form fields, those fields will be appended with '_' in the resulting PDF. e.g. 'Name' will be 'Name_'
            </summary>
            <param name="AnotherPdfFile">PdfDocument to prepend.</param>
            <returns>Returns this PdfDocument object, allowing for a 'fluent' (LINQ like) chained in-line code style</returns>
        </member>
        <member name="P:IronPdf.PdfDocument.MetaData">
            <summary>
            MetaData information settings for the PDF. <para>Allows File meta-data to be read and set including:
            Authors, File Dates, Keywords, Title and Subject</para></summary>
            <value>
            MetaData settings for this PDF as an instance of <see cref="T:IronPdf.MetaData.PdfMetaData" /></value>
        </member>
        <member name="P:IronPdf.PdfDocument.SecuritySettings">
            <summary>
            Advanced security settings for the PDF. <para>Allows the developer to control user access passwords,
            encryption, and also who may edit, print and copy content from the PDF document</para></summary>
            <value>
            Advanced security settings for this PDF as an instance of <see cref="T:IronPdf.Security.PdfSecuritySettings" /></value>
        </member>
        <member name="M:IronPdf.PdfDocument.AddTextAnnotation(IronPdf.Annotations.TextAnnotation,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds an annotation to a page of this <see cref="T:IronPdf.PdfDocument" /></summary>
            <param name="TextAnnotation">The annotation as a <see cref="T:IronPdf.PdfDocument.TextAnnotation" /> object.</param>
            <param name="PageIndex">Index of the page to add the annotation. The first page has a PageIndex of 0</param>
            <param name="X">The horizontal X position of the annotation on your page in pixels</param>
            <param name="Y">The vertical Y position of the annotation on your page in pixels.  Measured from top downwards.</param>
            <param name="Width">The width of your annotation's icon and interactive area in pixels</param>
            <param name="Height">The height of your annotation's icon and interactive area in pixels</param>
        </member>
        <member name="M:IronPdf.PdfDocument.AddTextAnnotation(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,IronPdf.Annotations.TextAnnotation.AnnotationIcon,System.Boolean,System.Boolean,System.Boolean,System.String,System.Double)">
            <summary>
            Adds an annotation to a page of this <see cref="T:IronPdf.PdfDocument" /></summary>
            <param name="Title">The title of the annotation</param>
            <param name="Subject">The subject or 'subheading' of the annotation</param>
            <param name="Contents">The text content of the annotation</param>
            <param name="PageIndex">Index of the page to add the annotation. The first page has a PageIndex of 0</param>
            <param name="X">The horizontal X position of the annotation on your page in pixels</param>
            <param name="Y">The vertical Y position of the annotation on your page in pixels.  Measured from top downwards.</param>
            <param name="Width">The width of your annotation's icon and interactive area in pixels</param>
            <param name="Height">The height of your annotation's icon and interactive area in pixels</param>
            <param name="Icon">The icon used to display the interactive annotation within the PDF</param>
            <param name="Open">Sets the annotation to be opened and readable by default, without user interaction</param>
            <param name="ReadOnly">Makes the annotation non user editable</param>
            <param name="Printable">Makes the annotation render during user PDF printing operations</param>
            <param name="RgbColor">Color of the annotation's background 'sticky note' using Html color notation.  E.g. '#FFFF33'.</param>
            <param name="Opacity">The opacity of the annotation (valid values are from 0.0 to 1.0)</param>
        </member>
        <member name="M:IronPdf.PdfDocument.Flatten(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Flattens a document (make the fields non-editable).
            </summary>
            <param name="Pages">Optional page indices to flatten (defaults to all pages)</param>
        </member>
        <member name="P:IronPdf.PdfDocument.Form">
            <summary>
            Gets an object returning any PDF editable form fields which can have their values both read and set
            programmatically.
            </summary>
            <value>
            The form.
            </value>
        </member>
        <member name="P:IronPdf.PdfDocument.PageCount">
            <summary>
            Gets the number of pages in the PDF document.
            </summary>
            <value>
            The page count.
            </value>
        </member>
        <member name="P:IronPdf.PdfDocument.Pages">
            <summary>
            Gets the list of pages in the PDF document.
            </summary>
        </member>
        <member name="M:IronPdf.PdfDocument.GetPrintDocument">
            <summary>
            Returns a <see cref="T:System.Drawing.Printing.PrintDocument" /> for the PDF allowing developers granular
            control over sending the PDF to a Printer. <para>An assembly reference to System.Drawing is required in your
            project.</para></summary>
            <returns>A <see cref="T:System.Drawing.Printing.PrintDocument" />.</returns>
            <exception cref="T:System.Exception">IronPdf must be licensed to use this feature.</exception>
        </member>
        <member name="M:IronPdf.PdfDocument.Print(System.Boolean)">
            <summary>
            Prints this PDF by sending it to the computer's printer. <para>For advanced real-world printing options
            please see overloads of this method and also <see cref="M:IronPdf.PdfDocument.GetPrintDocument" />.</para><param name="showPreview">if <see langword="true" /> print preview dialogs will be displayed to the user. Default
            value is <see langword="false" />.</param></summary>
            <returns>The number of printed pages.</returns>
            <seealso cref="M:IronPdf.PdfDocument.GetPrintDocument" />
        </member>
        <member name="M:IronPdf.PdfDocument.Print(System.Int32,System.Boolean)">
            <summary>
            Prints this PDF by sending it to the computer's printer. <para>For advanced real-world printing options
            please see overloads of this method and also <see cref="M:IronPdf.PdfDocument.GetPrintDocument" />.</para><param name="showPreview">if <see langword="true" /> print preview dialogs will be displayed to the user. Default
            value is <see langword="false" />.</param><param name="dpi">the horizontal and vertical PDF resolutions, in
            dots per inch. if <c>-1</c> print with default printer resolution. Default value is <c>-1</c>.</param></summary>
            <returns>The number of printed pages.</returns>
            <seealso cref="M:IronPdf.PdfDocument.GetPrintDocument" />
        </member>
        <member name="M:IronPdf.PdfDocument.Print(System.String,System.Boolean)">
            <summary>
            Prints this PDF by sending it to the computer's printer. <para>For advanced real-world printing options
            please see overloads of this method and also <see cref="M:IronPdf.PdfDocument.GetPrintDocument" />.</para><param name="printerName">the name of a printer, set <see langword="null" /> or an empty string ("") to use default
            print. Default value is <see langword="null" />.</param><param name="showPreview">if <see langword="true" />
            print preview dialogs will be displayed to the user. Default value is <see langword="false" />.</param></summary>
            <returns>The number of printed pages.</returns>
            <seealso cref="M:IronPdf.PdfDocument.GetPrintDocument" />
        </member>
        <member name="M:IronPdf.PdfDocument.Print(System.Int32,System.String,System.String,System.Boolean)">
            <summary>
            Prints this PDF by sending it to the computer's printer.   <para>For even more advanced real-world printing
            options please see overloads of this method and also <see cref="M:IronPdf.PdfDocument.GetPrintDocument" />.</para><param name="dpi">the horizontal and vertical PDF resolutions, in dots per inch. if <c>-1</c> print with default
            printer resolution. Default value is <c>-1</c>.</param><param name="printerName">the name of a printer,
            set<see langword="null" /> or an empty string ("") to use default print. Default value is <see langword="null" />.</param><param name="filePath">the file path, when printing to a file, set <see langword="null" /> or an empty string ("") for printing output is sent to a port instead of the <paramref name="filePath" />. The default value is <see langword="null" />.</param><param name="showPreview">if <see langword="true" /> print preview dialogs will be displayed to the user. Default value is <see langword="false" />.</param></summary>
            <returns>The number of printed pages.</returns>
            <seealso cref="M:IronPdf.PdfDocument.GetPrintDocument" />
        </member>
        <member name="M:IronPdf.PdfDocument.Print(System.Int32,System.Int32,System.String,System.String,System.Boolean)">
            <summary>
            Prints this PDF by sending it to the computer's printer.   <para>For advanced real-world printing options
            please see <see cref="M:IronPdf.PdfDocument.GetPrintDocument" />.</para><param name="dpiX">the horizontal PDF resolution, in dots
            per inch.</param><param name="dpiY">the vertical PDF resolution, in dots per inch.</param><param name="printerName">the name of a printer, set <see langword="null" /> or an empty string ("") to use default
            print. The default value is <see langword="null" />.</param><param name="filePath">the file path, when
            printing to a file, set <see langword="null" /> or an empty string ("") for printing output is sent to a port
            instead of the <paramref name="filePath" />. The default value is <see langword="null" />.</param><param name="showPreview">if <see langword="true" /> print preview dialogs will be displayed to the user. The
            default value is <see langword="false" />.</param></summary>
            <returns>The number of printed pages.</returns>
            <seealso cref="M:IronPdf.PdfDocument.GetPrintDocument" />
        </member>
        <member name="M:IronPdf.PdfDocument.PrintToFile(System.String,System.Boolean)">
            <summary>
            Prints this PDF by sending it to the computer's printer. <para>For advanced real-world printing options
            please see overloads <see cref="M:IronPdf.PdfDocument.GetPrintDocument" />.</para><param name="filePath">the file path, when
            printing to a file, set <see langword="null" /> or an empty string ("") for printing output is sent to a port
            instead of the <paramref name="filePath" />. The default value is <see langword="null" />.</param><param name="showPreview">if <see langword="true" /> print preview dialogs will be displayed to the user. Default
            value is <see langword="false" />.</param></summary>
            <returns>The number of printed pages.</returns>
            <seealso cref="M:IronPdf.PdfDocument.GetPrintDocument" />
        </member>
        <member name="M:IronPdf.PdfDocument.PrintToFile(System.Int32,System.String,System.Boolean)">
            <summary>
            Prints this PDF by sending it to the computer's printer.   <para>For advanced real-world printing options
            please see overloads of this method and also <see cref="M:IronPdf.PdfDocument.GetPrintDocument" />.</para><param name="dpi">the
            horizontal and vertical PDF resolutions, in dots per inch. if <c>-1</c> print with default printer
            resolution. Default value is <c>-1</c>.</param><param name="filePath">the file path, when printing to a
            file, set <see langword="null" /> or an empty string ("") for printing output is sent to a port instead of
            the <paramref name="filePath" />. The default value is <see langword="null" />.</param><param name="showPreview">if <see langword="true" /> print preview dialogs will be displayed to the user. Default
            value is <see langword="false" />.</param></summary>
            <returns>The number of printed pages.</returns>
            <seealso cref="M:IronPdf.PdfDocument.GetPrintDocument" />
        </member>
        <member name="M:IronPdf.PdfDocument.RemovePage(System.Int32)">
            <summary>
            Removes a page from the PDF at the given index.
            </summary>
            <param name="PageIndex">Index of the page.  Note: Page 1 has index 0...</param>
            <returns>Returns this PdfDocument object, allowing for a 'fluent' (LINQ like) chained in-line code style</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.RemovePages(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Removes a range of pages from the PDF
            </summary>
            <param name="PageIndexes">A list of pages indexes to remove.</param>
            <returns>Returns this PdfDocument object, allowing for a 'fluent' (LINQ like) chained in-line code style</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.RemovePages(System.Int32,System.Int32)">
            <summary>
            Removes a range of pages from the PDF
            </summary>
            <param name="StartIndex">The start index. Note: Page 1 has index 0</param>
            <param name="EndIndex">The end index. Note: The last page has index <c>PageCount -1</c></param>
            <returns>Returns this PdfDocument object, allowing for a 'fluent' (LINQ like) chained in-line code style</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.GetPageRotation(System.Int32)">
            <summary>
            Gets the rotation of a PDF page in degrees.
            </summary>
            <param name="PageIndex">Index of the page to inspect. PageIndex is a 'Zero based' page number, the first page being 0.</param>
            <returns>Degrees of rotation</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.RotateAllPages(IronPdf.Engines.Pdfium.RenderRotations)">
            <summary>
            Rotates all pages of the PdfDocument by a specified number of degrees.
            </summary>
            <param name="Rotation">Degrees of rotation</param>
        </member>
        <member name="M:IronPdf.PdfDocument.RotatePage(System.Int32,IronPdf.Engines.Pdfium.RenderRotations)">
            <summary>
            Rotates one page of the PdfDocument by a specified number of degrees.
            </summary>
            <param name="PageIndex">Index of the page to rotate. PageIndex is a 'Zero based' page number, the first page being 0.</param>
            <param name="Rotation">Degrees of rotation</param>
        </member>
        <member name="M:IronPdf.PdfDocument.RotateSelectedPages(System.Collections.Generic.IEnumerable{System.Int32},IronPdf.Engines.Pdfium.RenderRotations)">
            <summary>
            Rotates selected pages of the PdfDocument by a specified number of degrees.
            </summary>
            <param name="PageIndexes">
            Indexes of the pages to rotate in an IEnumerable, list or array. PageIndex is a 'Zero based' page number,
            the first page being 0.
            </param>
            <param name="Rotation">Degrees of rotation</param>
        </member>
        <member name="M:IronPdf.PdfDocument.QuickSignPdfWithDigitalSignatureFile(System.String,System.String)">
            <summary>
            Sign PDF with digital signature certificate.  For more advanced options please see <see cref="M:IronPdf.PdfDocument.SignPdfWithDigitalSignature(IronPdf.Signing.PdfSignature)" /><para>Note that the PDF will not be fully signed until Saved
            using <see cref="M:IronPdf.PdfDocument.SaveAs(System.String)" />,  <see cref="M:IronPdf.PdfDocument.TrySaveAs(System.String)" />,  <see cref="P:IronPdf.PdfDocument.Stream" /> or  <see cref="P:IronPdf.PdfDocument.BinaryData" />.  Multiple certificates may
            be used.</para></summary>
            <seealso cref="T:IronPdf.PdfSignature" />
            <param name="CertificateFilePath">
            The file path to a .pfx or .p12 digital signing certificate which may be generated using Adobe Acrobat
            Viewer.
            </param>
            <param name="Password">The certificate password as a String.</param>
            <returns>Returns this PdfDocument object, allowing for a 'fluent' (LINQ like) chained in-line code style</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.SignPdfWithDigitalSignature(IronPdf.Signing.PdfSignature)">
            <summary>
            Signs the PDF with digital signature with advanced options.  <para>Note that the PDF will not be fully
            signed until Saved using <see cref="M:IronPdf.PdfDocument.SaveAs(System.String)" />,  <see cref="M:IronPdf.PdfDocument.TrySaveAs(System.String)" />,  <see cref="P:IronPdf.PdfDocument.Stream" /> or  <see cref="P:IronPdf.PdfDocument.BinaryData" />.  Multiple certificates may
            be used.</para></summary>
            <param name="Signature">The PdfSignature.</param>
            <returns>Returns this PdfDocument object, allowing for a 'fluent' (LINQ like) chained in-line code style</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.GetVerifiedSignatures">
            <summary>
            Returns a list of <see cref="T:IronPdf.VerifiedSignature" />.
            </summary>
            <returns>list of <see cref="T:IronPdf.VerifiedSignature" /></returns>
        </member>
        <member name="M:IronPdf.PdfDocument.GetVerifiedSignatures(System.Byte[])">
            <summary>
            Returns a list of <see cref="T:IronPdf.VerifiedSignature" /> from the specified PDF document by the parameter <paramref name="data" />.
            </summary>
            <param name="data">the bytes of a pdf document</param>
            <returns>list of <see cref="T:IronPdf.VerifiedSignature" /></returns>
        </member>
        <member name="M:IronPdf.PdfDocument.VerifyPdfSignatures">
            <summary>
            Verifies all the PDF signatures for this PDF document and returns <c>true</c> if there are no invalid
            signatures.
            </summary>
            <returns>
                <c>true</c> if all digital signatures for this PDF document are currently valid. Editing a PDF document in
            any way will invalidate signatures.
            </returns>
        </member>
        <member name="M:IronPdf.PdfDocument.VerifyPdfSignaturesInFile(System.String)">
            <summary>
            Verifies all the PDF signatures for a PDF file (by file path) and returns <c>true</c> if there are no
            invalid signatures.
            </summary>
            <param name="PdfFilePath">The full or relative PDF file path.</param>
            <returns>
                <c>true</c> if all digital signatures for the PDF document are currently valid. Editing a PDF document in
            any way will invalidate signatures.
            </returns>
        </member>
        <member name="M:IronPdf.PdfDocument.StampHTML(IronPdf.Editing.HtmlStamp,IronPdf.ChromePdfRenderOptions)">
            <summary>
            Edits the PDF by adding rendered HTML either behind or in-front of the existing contents of every page.
            </summary>
            <param name="Stamp">The <see cref="T:IronPdf.Editing.HtmlStamp" /> stamp.</param>
            <param name="RenderOptions">Rendering options.</param>
            <returns>Returns this PdfDocument object, allowing for a 'fluent' (LINQ like) chained in-line code style</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.StampHTML(IronPdf.Editing.HtmlStamp,System.Int32,IronPdf.ChromePdfRenderOptions)">
            <summary>
            Edits the PDF by adding rendered HTML either behind or in-front of the existing contents of one page.
            </summary>
            <param name="Stamp">The <see cref="T:IronPdf.HtmlStamp" /> stamp.</param>
            <param name="PageIndexToStamp">The page index (zero-based page number) to stamp.</param>
            <param name="RenderOptions">Rendering options.</param>
            <returns>Returns this PdfDocument object, allowing for a 'fluent' (LINQ like) chained in-line code style</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.StampHTML(IronPdf.Editing.HtmlStamp,System.Collections.Generic.IEnumerable{System.Int32},IronPdf.ChromePdfRenderOptions)">
            <summary>
            Edits the PDF by adding rendered HTML either behind or in-front of the existing contents of specified pages.
            </summary>
            <param name="Stamp">The <see cref="T:IronPdf.HtmlStamp" /> stamp.</param>
            <param name="PageIndexesToStamp">The list page indexes (zero-based page number) to stamp.</param>
            <param name="RenderOptions">Rendering options.</param>
            <returns>Returns this PdfDocument object, allowing for a 'fluent' (LINQ like) chained in-line code style</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.StampHTMLAsync(IronPdf.Editing.HtmlStamp,IronPdf.ChromePdfRenderOptions)">
            <summary>
            Asynchronously edits the PDF by adding rendered HTML either behind or in-front of the existing contents of every page.
            </summary>
            <remarks>Please wait for the task to be completed before saving to file!</remarks>
            <param name="Stamp">The <see cref="T:IronPdf.Editing.HtmlStamp" /> stamp.</param>
            <param name="RenderOptions">Rendering options.</param>
            <returns>Returns this PdfDocument object, allowing for a 'fluent' (LINQ like) chained in-line code style</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.StampHTMLAsync(IronPdf.Editing.HtmlStamp,System.Int32,IronPdf.ChromePdfRenderOptions)">
            <summary>
            Asynchronously edits the PDF by adding rendered HTML either behind or in-front of the existing contents of one page.
            </summary>
            <remarks>Please wait for the task to be completed before saving to file!</remarks>
            <param name="Stamp">The <see cref="T:IronPdf.HtmlStamp" /> stamp.</param>
            <param name="PageIndexToStamp">The page index (zero-based page number) to stamp.</param>
            <param name="RenderOptions">Rendering options.</param>
            <returns>Returns this PdfDocument object, allowing for a 'fluent' (LINQ like) chained in-line code style</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.StampHTMLAsync(IronPdf.Editing.HtmlStamp,System.Collections.Generic.IEnumerable{System.Int32},IronPdf.ChromePdfRenderOptions)">
            <summary>
            Asynchronously edits the PDF by adding rendered HTML either behind or in-front of the existing contents of specified pages.
            </summary>
            <remarks>Please wait for the task to be completed before saving to file!</remarks>
            <param name="Stamp">The <see cref="T:IronPdf.HtmlStamp" /> stamp.</param>
            <param name="PageIndexesToStamp">The list page indexes (zero-based page number) to stamp.</param>
            <param name="RenderOptions">Rendering options.</param>
            <returns>Returns this PdfDocument object, allowing for a 'fluent' (LINQ like) chained in-line code style</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.StampHTMLRange(System.Collections.Generic.IEnumerable{IronPdf.Editing.HtmlStamp},IronPdf.ChromePdfRenderOptions)">
            <summary>
            Edits the PDF by adding rendered HTML(s) either behind or in-front of the existing contents of specified pages.
            </summary>
            <param name="Stamps">The list of <see cref="T:IronPdf.HtmlStamp" /> stamp.</param>
            <param name="RenderOptions">Rendering options.</param>
            <returns>Returns this PdfDocument object, allowing for a 'fluent' (LINQ like) chained in-line code style</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.StampHTMLRange(System.Collections.Generic.IEnumerable{IronPdf.Editing.HtmlStamp},System.Int32,IronPdf.ChromePdfRenderOptions)">
            <summary>
            Edits the PDF by adding rendered HTML(s) either behind or in-front of the existing contents of specified pages.
            </summary>
            <param name="Stamps">The list of <see cref="T:IronPdf.HtmlStamp" /> stamp.</param>
            <param name="PageIndexToStamp">The page index (zero-based page number) to stamp.</param>
            <param name="RenderOptions">Rendering options.</param>
            <returns>Returns this PdfDocument object, allowing for a 'fluent' (LINQ like) chained in-line code style</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.StampHTMLRange(System.Collections.Generic.IEnumerable{IronPdf.Editing.HtmlStamp},System.Collections.Generic.IEnumerable{System.Int32},IronPdf.ChromePdfRenderOptions)">
            <summary>
            Edits the PDF by adding rendered HTML(s) either behind or in-front of the existing contents of specified pages.
            </summary>
            <param name="Stamps">The list of <see cref="T:IronPdf.HtmlStamp" /> stamp.</param>
            <param name="PageIndexesToStamp">The list page indexes (zero-based page number) to stamp.</param>
            <param name="RenderOptions">Rendering options.</param>
            <returns>Returns this PdfDocument object, allowing for a 'fluent' (LINQ like) chained in-line code style</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.StampHTMLRangeAsync(System.Collections.Generic.IEnumerable{IronPdf.Editing.HtmlStamp},IronPdf.ChromePdfRenderOptions)">
            <summary>
            Asynchronously edit the PDF by adding rendered HTML(s) either behind or in-front of the existing contents of specified pages.
            This method will grouping up stamps before process, This should be faster but the result may diffrent from normal <see cref="M:IronPdf.PdfDocument.StampHTML(IronPdf.Editing.HtmlStamp,IronPdf.ChromePdfRenderOptions)" /></summary>
            <param name="Stamps">The list of <see cref="T:IronPdf.HtmlStamp" /> stamp.</param>
            <param name="RenderOptions">Rendering options.</param>
            <returns>Returns this PdfDocument object, allowing for a 'fluent' (LINQ like) chained in-line code style</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.StampHTMLRangeAsync(System.Collections.Generic.IEnumerable{IronPdf.Editing.HtmlStamp},System.Int32,IronPdf.ChromePdfRenderOptions)">
            <summary>
            Asynchronously edit the PDF by adding rendered HTML(s) either behind or in-front of the existing contents of specified pages.
            This method will grouping up stamps before process, This should be faster but the result may diffrent from normal <see cref="M:IronPdf.PdfDocument.StampHTML(IronPdf.Editing.HtmlStamp,IronPdf.ChromePdfRenderOptions)" /></summary>
            <param name="Stamps">The list of <see cref="T:IronPdf.HtmlStamp" /> stamp.</param>
            <param name="PageIndexToStamp">The page index (zero-based page number) to stamp.</param>
            <param name="RenderOptions">Rendering options.</param>
            <returns>Returns this PdfDocument object, allowing for a 'fluent' (LINQ like) chained in-line code style</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.StampHTMLRangeAsync(System.Collections.Generic.IEnumerable{IronPdf.Editing.HtmlStamp},System.Collections.Generic.IEnumerable{System.Int32},IronPdf.ChromePdfRenderOptions)">
            <summary>
            Asynchronously edits the PDF by adding rendered HTML(s) either behind or in-front of the existing contents of specified pages.
            This method will grouping up stamps before process, This should be faster but the result may diffrent from normal <see cref="M:IronPdf.PdfDocument.StampHTML(IronPdf.Editing.HtmlStamp,IronPdf.ChromePdfRenderOptions)" /></summary>
            <param name="Stamps">The list of <see cref="T:IronPdf.HtmlStamp" /> stamp.</param>
            <param name="PageIndexesToStamp">The list page indexes (zero-based page number) to stamp.</param>
            <param name="RenderOptions">Rendering options.</param>
            <returns>Returns this PdfDocument object, allowing for a 'fluent' (LINQ like) chained in-line code style</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.ExtractAllText">
            <summary>
            Extracts the written text content from the PDF and returns it as a string. <para>Pages are be separated by 4
            consecutive Environment.NewLines</para></summary>
            <returns>
            All text in the PDF as a string.
            </returns>
        </member>
        <member name="M:IronPdf.PdfDocument.ExtractTextFromPage(System.Int32)">
            <summary>
            Extracts the text content from one page of the PDF and returns it as a string.
            </summary>
            <param name="pageIndex">Index of the page.  Note: Page 1 has index 0...</param>
            <returns>The text extracted from the PDF page as a string.</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.ExtractTextFromPages(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Extracts the written text content from specified pages in the PDF PDF and returns it as a string.   Pages
            will be separated by 4 consecutive Environment.NewLines
            </summary>
            <param name="pageIndexes">An IEnumerable list of page indexes.</param>
            <returns>The text extracted from the PDF pages as a string.</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.ExtractTextFromPages(System.Int32,System.Int32)">
            <summary>
            Extracts the written text content from a range of pages within the PDF and returns it as a string.    Pages
            will be separated by 4 consecutive Environment.NewLines
            </summary>
            <param name="startIndex">The start page index. Note: Page 1 has index 0</param>
            <param name="endIndex">The end page index. Note: The last page has index <c>PageCount -1</c></param>
            <returns>The text extracted from the PDF pages as a string.</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.ReplaceTextOnPage(System.Int32,System.String,System.String)">
            <summary>
            Replace the specified old text with new text on a given page
            </summary>
            <param name="pageIndex">Page index to search for old text to repalce</param>
            <param name="oldText">Old text to remove</param>
            <param name="newText">New text to add</param>
        </member>
        <member name="M:IronPdf.PdfDocument.ToBitmap(System.Int32)">
            <summary>
            Rasterizes (renders) the PDF into System.Drawing.Bitmap objects.  1 Bitmap for each page. <para>Please add
            an assembly reference to System.Drawing to use this "PDF To Image" method.</para><para>Please Dispose() each
            Bitmap object after use.</para></summary>
            <param name="DPI">
            The resolution of the output Bitmap in 'Dots Per Inch'.  Higher DPI creates larger bitmap files of higher
            image quality.
            </param>
            <returns>
            An array of System.Drawing.Bitmap image objects which can be saved, manipulated, displayed or edited
            programmatically.
            </returns>
            <remarks>The <paramref name="DPI" /> may be ignored on some Linux distros.</remarks>
        </member>
        <member name="M:IronPdf.PdfDocument.ToBitmap(System.Collections.Generic.IEnumerable{System.Int32},System.Int32)">
            <summary>
            Rasterizes (renders) the PDF into System.Drawing.Bitmap objects. <para>Specific pages may be selected using
            the PageIndexes parameter.</para><para>Please add an assembly reference to System.Drawing to use this "PDF
            To Image" method</para><para>Please Dispose() each Bitmap object after use.</para></summary>
            <param name="pageIndexes">Specific zero based page index may be given to only convert part of the PDF document to images</param>
            <param name="DPI">The desired resolution of the output Images.</param>
            <returns>
            An array of System.Drawing.Bitmap image objects which can be saved, manipulated, displayed or edited
            programmatically.
            </returns>
            <remarks>The <paramref name="DPI" /> will be ignored under Linux and macOS.</remarks>
        </member>
        <member name="M:IronPdf.PdfDocument.ToBitmap(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32},System.Int32)">
            <summary>
            Rasterizes (renders) the PDF into System.Drawing.Bitmap objects. <para>Specific pages may be selected using
            the PageIndexes parameter.  The Widths and Height of the output images may be specified.</para><para>Please
            add an assembly reference to System.Drawing to use this "PDF To Image" method</para><para>Please Dispose()
            each Bitmap object after use.</para></summary>
            <param name="imageMaxWidth">The target maximum width(in pixel) of the output images.</param>
            <param name="imageMaxHeight">The target maximum height(in pixel) of the output images.</param>
            <param name="pageIndexes">Specific zero based page index may be given to only convert part of the PDF document to images</param>
            <param name="DPI">The desired resolution of the output Images.</param>
            <returns>
            An array of System.Drawing.Bitmap image objects which can be saved, manipulated, displayed or edited
            programmatically.
            </returns>
            <remarks>The <paramref name="DPI" /> will be ignored under Linux and macOS.</remarks>
        </member>
        <member name="M:IronPdf.PdfDocument.PageToBitmap(System.Int32,System.Int32)">
            <summary>
            Renders a single page of the PDF to a System.Drawing.Bitmap object. <para>Please add an assembly reference
            to System.Drawing to use this "PDF To Image" method</para><para>Please Dispose() each Bitmap object after
            use.</para></summary>
            <param name="pageIndex">The zero based page number to be converted to an image. E.g. Page 1 has a pageIndex of 0</param>
            <param name="DPI">The desired resolution of the output Images.</param>
            <returns>A System.Drawing.Bitmap of the rendered PDF page.</returns>
            <remarks>The <paramref name="DPI" /> will be ignored under Linux and macOS.</remarks>
        </member>
        <member name="M:IronPdf.PdfDocument.PageToBitmap(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Int32)">
            <summary>
            Renders a single page of the PDF to a System.Drawing.Bitmap object. <para>Please add an assembly reference
            to System.Drawing to use this "PDF To Image" method</para><para>Please Dispose() each Bitmap object after
            use.</para></summary>
            <param name="pageIndex">The zero based page number to be converted to an image. E.g. Page 1 has a pageIndex of 0</param>
            <param name="imageMaxWidth">The target maximum width of the output images.</param>
            <param name="imageMaxHeight">The target maximum height of the output images.</param>
            <param name="DPI">The desired resolution of the output Images.</param>
            <returns>A System.Drawing.Bitmap of the rendered PDF page.</returns>
            <remarks>The <paramref name="DPI" /> will be ignored under Linux and macOS.</remarks>
        </member>
        <member name="M:IronPdf.PdfDocument.RasterizeToImageFiles(System.String,IronPdf.Imaging.ImageType,System.Int32)">
            <summary>
            Renders the PDF and exports image Files in convenient formats.  1 image file is created for each
            page.<para>FileNamePattern should normally contain an asterisk (*) character which will be substituted for
            the page numbers</para></summary>
            <param name="FileNamePattern">A full or partial file path for the output files containing an asterisk.  E.g.  C:\images\pdf_page_*.png</param>
            <param name="ImageFileType">
            Type of the image file.  If not specified, a best guess will be taken from the FileNamePattern file
            extension
            </param>
            <param name="DPI">The desired resolution of the output Images.</param>
            <returns>An array of the file paths of the image files created.</returns>
            <remarks>The <paramref name="DPI" /> will be ignored under Linux and macOS.</remarks>
        </member>
        <member name="M:IronPdf.PdfDocument.RasterizeToImageFiles(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},IronPdf.Imaging.ImageType,System.Int32)">
            <summary>
            Renders the PDF and exports image Files in convenient formats.  Image dimensions may be specified.  1 image
            file is created for each page.<para>FileNamePattern should normally contain an asterisk (*) character which
            will be substituted for the page numbers</para></summary>
            <param name="FileNamePattern">A full or partial file path for the output files containing an asterisk.  E.g.  C:\images\pdf_page_*.png</param>
            <param name="ImageFileType">
            Type of the image file.  If not specified, a best guess will be taken from the FileNamePattern file
            extension
            </param>
            <param name="ImageMaxWidth">The target maximum width(in pixel) of the output images.</param>
            <param name="ImageMaxHeight">The target maximum height(in pixel) of the output images.</param>
            <param name="DPI">The desired resolution of the output Images.</param>
            <returns>
            An array of the file paths of the image files created.
            </returns>
            <remarks>The <paramref name="DPI" /> will be ignored under Linux and macOS.</remarks>
        </member>
        <member name="M:IronPdf.PdfDocument.RasterizeToImageFiles(System.String,System.Collections.Generic.IEnumerable{System.Int32},IronPdf.Imaging.ImageType,System.Int32)">
            <summary>
            Renders the PDF and exports image Files in convenient formats.  Page Numbers may be specified.  1 image file
            is created for each page. <para>FileNamePattern should normally contain an asterisk (*) character which will
            be substituted for the page numbers</para></summary>
            <param name="FileNamePattern">A full or partial file path for the output files containing an asterisk.  E.g.  C:\images\pdf_page_*.png</param>
            <param name="ImageFileType">
            Type of the image file.  If not specified, a best guess will be taken from the FileNamePattern file
            extension
            </param>
            <param name="PageIndexes">A list of the specific zero based page numbe to render as images.</param>
            <param name="DPI">The desired resolution of the output Images.</param>
            <returns>
            An array of the file paths of the image files created.
            </returns>
            <remarks>The <paramref name="DPI" /> will be ignored under Linux and macOS.</remarks>
        </member>
        <member name="M:IronPdf.PdfDocument.RasterizeToImageFiles(System.String,System.Collections.Generic.IEnumerable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},IronPdf.Imaging.ImageType,System.Int32)">
            <summary>
            Renders the PDF and exports image Files in convenient formats.  Page Numbers may be specified.  1 image file
            is created for each page. <para>FileNamePattern should normally contain an asterisk (*) character which will
            be substituted for the page numbers</para></summary>
            <param name="FileNamePattern">A full or partial file path for the output files containing an asterisk.  E.g.  C:\images\pdf_page_*.png</param>
            <param name="ImageFileType">
            Type of the image file.  If not specified, a best guess will be taken from the FileNamePattern file
            extension
            </param>
            <param name="PageIndexes">A list of the specific zero based page numbe to render as images.</param>
            <param name="ImageMaxWidth">The target maximum width(in pixel) of the output images.</param>
            <param name="ImageMaxHeight">The target maximum height(in pixel) of the output images.</param>
            <param name="DPI">The desired resolution of the output Images.</param>
            <returns>
            An array of the file paths of the image files created.
            </returns>
            <remarks>The <paramref name="DPI" /> will be ignored under Linux and macOS.</remarks>
        </member>
        <member name="M:IronPdf.PdfDocument.ToJpegImages(System.String,System.Int32)">
            <summary>
            Renders the pages of the PDF as JPEG files and saves them to disk. <para>Specific image dimensions and page
            numbers may be given as optional parameters</para><para>FileNamePattern should normally contain an asterisk
            (*) character which will be substituted for the page numbers</para></summary>
            <param name="FileNamePattern">A full or partial file path for the output files containing an asterisk.  E.g.  C:\images\pdf_page_*.jpg</param>
            <param name="DPI">The desired resolution of the output Images.</param>
            <returns>
            An array of the file paths of the image files created.
            </returns>
            <remarks>The <paramref name="DPI" /> will be ignored under Linux and macOS.</remarks>
        </member>
        <member name="M:IronPdf.PdfDocument.ToJpegImages(System.String,System.Collections.Generic.IEnumerable{System.Int32},System.Int32)">
            <summary>
            Renders the pages of the PDF as JPEG files and saves them to disk. <para>Specific image dimensions and page
            numbers may be given as optional parameters</para><para>FileNamePattern should normally contain an asterisk
            (*) character which will be substituted for the page numbers</para></summary>
            <param name="FileNamePattern">A full or partial file path for the output files containing an asterisk.  E.g.  C:\images\pdf_page_*.jpg</param>
            <param name="PageIndexes">A list of the specific zero based page numbe to render as images.</param>
            <param name="DPI">The desired resolution of the output Images.</param>
            <returns>
            An array of the file paths of the image files created.
            </returns>
            <remarks>The <paramref name="DPI" /> will be ignored under Linux and macOS.</remarks>
        </member>
        <member name="M:IronPdf.PdfDocument.ToJpegImages(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Int32)">
            <summary>
            Renders the pages of the PDF as JPEG files and saves them to disk. <para>Specific image dimensions and page
            numbers may be given as optional parameters</para><para>FileNamePattern should normally contain an asterisk
            (*) character which will be substituted for the page numbers</para></summary>
            <param name="FileNamePattern">A full or partial file path for the output files containing an asterisk.  E.g.  C:\images\pdf_page_*.jpg</param>
            <param name="ImageMaxWidth">The target maximum width(in pixel) of the output images.</param>
            <param name="ImageMaxHeight">The target maximum height(in pixel) of the output images.</param>
            <param name="DPI">The desired resolution of the output Images.</param>
            <returns>
            An array of the file paths of the image files created.
            </returns>
            <remarks>The <paramref name="DPI" /> will be ignored under Linux and macOS.</remarks>
        </member>
        <member name="M:IronPdf.PdfDocument.ToJpegImages(System.String,System.Collections.Generic.IEnumerable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Int32)">
            <summary>
            Renders the pages of the PDF as JPEG files and saves them to disk. <para>Specific image dimensions and page
            numbers may be given as optional parameters</para><para>FileNamePattern should normally contain an asterisk
            (*) character which will be substituted for the page numbers</para></summary>
            <param name="FileNamePattern">A full or partial file path for the output files containing an asterisk.  E.g.  C:\images\pdf_page_*.jpg</param>
            <param name="PageIndexes">A list of the specific zero based page numbe to render as images.</param>
            <param name="ImageMaxWidth">The target maximum width(in pixel) of the output images.</param>
            <param name="ImageMaxHeight">The target maximum height(in pixel) of the output images.</param>
            <param name="DPI">The desired resolution of the output Images.</param>
            <returns>
            An array of the file paths of the image files created.
            </returns>
            <remarks>The <paramref name="DPI" /> will be ignored under Linux and macOS.</remarks>
        </member>
        <member name="M:IronPdf.PdfDocument.ToPngImages(System.String,System.Int32)">
            <summary>
            Renders the pages of the PDF as PNG (Portable Network Graphic) files and saves them to disk. <para>Specific
            image dimensions and page numbers may be given as optional parameters</para><para>FileNamePattern should
            normally contain an asterisk (*) character which will be substituted for the page numbers</para></summary>
            <param name="FileNamePattern">A full or partial file path for the output files containing an asterisk.  E.g.  C:\images\pdf_pages_*.png</param>
            <param name="DPI">The desired resolution of the output Images.</param>
            <returns>
            An array of the file paths of the image files created.
            </returns>
            <remarks>The <paramref name="DPI" /> will be ignored under Linux and macOS.</remarks>
        </member>
        <member name="M:IronPdf.PdfDocument.ToPngImages(System.String,System.Collections.Generic.IEnumerable{System.Int32},System.Int32)">
            <summary>
            Renders the pages of the PDF as PNG (Portable Network Graphic) files and saves them to disk. <para>Specific
            image dimensions and page numbers may be given as optional parameters</para><para>FileNamePattern should
            normally contain an asterisk (*) character which will be substituted for the page numbers</para></summary>
            <param name="FileNamePattern">A full or partial file path for the output files containing an asterisk.  E.g.  C:\images\pdf_pages_*.png</param>
            <param name="PageIndexes">A list of the specific zero based page numbe to render as images.</param>
            <param name="DPI">The desired resolution of the output Images.</param>
            <returns>
            An array of the file paths of the image files created.
            </returns>
            <remarks>The <paramref name="DPI" /> will be ignored under Linux and macOS.</remarks>
        </member>
        <member name="M:IronPdf.PdfDocument.ToPngImages(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Int32)">
            <summary>
            Renders the pages of the PDF as PNG (Portable Network Graphic) files and saves them to disk. <para>Specific
            image dimensions and page numbers may be given as optional parameters</para><para>FileNamePattern should
            normally contain an asterisk (*) character which will be substituted for the page numbers</para></summary>
            <param name="FileNamePattern">A full or partial file path for the output files containing an asterisk.  E.g.  C:\images\pdf_pages_*.png</param>
            <param name="ImageMaxWidth">The target maximum width(in pixel) of the output images.</param>
            <param name="ImageMaxHeight">The target maximum height(in pixel) of the output images.</param>
            <param name="DPI">The desired resolution of the output Images.</param>
            <returns>
            An array of the file paths of the image files created.
            </returns>
            <remarks>The <paramref name="DPI" /> will be ignored under Linux and macOS.</remarks>
        </member>
        <member name="M:IronPdf.PdfDocument.ToPngImages(System.String,System.Collections.Generic.IEnumerable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Int32)">
            <summary>
            Renders the pages of the PDF as PNG (Portable Network Graphic) files and saves them to disk. <para>Specific
            image dimensions and page numbers may be given as optional parameters</para><para>FileNamePattern should
            normally contain an asterisk (*) character which will be substituted for the page numbers</para></summary>
            <param name="FileNamePattern">A full or partial file path for the output files containing an asterisk.  E.g.  C:\images\pdf_pages_*.png</param>
            <param name="PageIndexes">A list of the specific zero based page numbe to render</param>
            <param name="ImageMaxWidth">The target maximum width(in pixel) of the output images.</param>
            <param name="ImageMaxHeight">The target maximum height(in pixel) of the output images.</param>
            <param name="DPI">The desired resolution of the output Images.</param>
            <returns>
            An array of the file paths of the image files created.
            </returns>
            <remarks>The <paramref name="DPI" /> will be ignored under Linux and macOS.</remarks>
        </member>
        <member name="M:IronPdf.PdfDocument.ToTiffImages(System.String,System.Int32)">
            <summary>
            Renders the pages of the PDF as TIFF (Tagged Image File Format / Tif) files and saves them to disk.
            <para>Specific image dimensions and page numbers may be given as optional parameters</para><para>FileNamePattern should normally contain an asterisk (*) character which will be substituted for the
            page numbers</para></summary>
            <param name="FileNamePattern">A full or partial file path for the output files containing an asterisk.  E.g.  C:\images\pdf_pages_*.tiff</param>
            <param name="DPI">The desired resolution of the output Images.</param>
            <returns>
            An array of the file paths of the image files created.
            </returns>
            <remarks>The <paramref name="DPI" /> will be ignored under Linux and macOS.</remarks>
        </member>
        <member name="M:IronPdf.PdfDocument.ToTiffImages(System.String,System.Collections.Generic.IEnumerable{System.Int32},System.Int32)">
            <summary>
            Renders the pages of the PDF as TIFF (Tagged Image File Format / Tif) files and saves them to disk.
            <para>Specific image dimensions and page numbers may be given as optional parameters</para><para>FileNamePattern should normally contain an asterisk (*) character which will be substituted for the
            page numbers</para></summary>
            <param name="FileNamePattern">A full or partial file path for the output files containing an asterisk.  E.g.  C:\images\pdf_pages_*.tiff</param>
            <param name="PageIndexes">A list of the specific zero based page number to render</param>
            <param name="DPI">The desired resolution of the output Images.</param>
            <returns>
            An array of the file paths of the image files created.
            </returns>
            <remarks>The <paramref name="DPI" /> will be ignored under Linux and macOS.</remarks>
        </member>
        <member name="M:IronPdf.PdfDocument.ToTiffImages(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Int32)">
            <summary>
            Renders the pages of the PDF as TIFF (Tagged Image File Format / Tif) files and saves them to disk.
            <para>Specific image dimensions and page numbers may be given as optional parameters</para><para>FileNamePattern should normally contain an asterisk (*) character which will be substituted for the
            page numbers</para></summary>
            <param name="FileNamePattern">A full or partial file path for the output files containing an asterisk.  E.g.  C:\images\pdf_pages_*.tiff</param>
            <param name="ImageMaxWidth">The target maximum width(in pixel) of the output images.</param>
            <param name="ImageMaxHeight">The target maximum height(in pixel) of the output images.</param>
            <param name="DPI">The desired resolution of the output Images.</param>
            <returns>
            An array of the file paths of the image files created.
            </returns>
            <remarks>The <paramref name="DPI" /> will be ignored under Linux and macOS.</remarks>
        </member>
        <member name="M:IronPdf.PdfDocument.ToTiffImages(System.String,System.Collections.Generic.IEnumerable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Int32)">
            <summary>
            Renders the pages of the PDF as TIFF (Tagged Image File Format / Tif) files and saves them to disk.
            <para>Specific image dimensions and page numbers may be given as optional parameters</para><para>FileNamePattern should normally contain an asterisk (*) character which will be substituted for the
            page numbers</para></summary>
            <param name="FileNamePattern">A full or partial file path for the output files containing an asterisk.  E.g.  C:\images\pdf_pages_*.tiff</param>
            <param name="PageIndexes">A list of the specific zero based page number to render</param>
            <param name="ImageMaxWidth">The target maximum width(in pixel) of the output images.</param>
            <param name="ImageMaxHeight">The target maximum height(in pixel) of the output images.</param>
            <param name="DPI">The desired resolution of the output Images.</param>
            <returns>
            An array of the file paths of the image files created.
            </returns>
            <remarks>The <paramref name="DPI" /> will be ignored under Linux and macOS.</remarks>
        </member>
        <member name="M:IronPdf.PdfDocument.ToMultiPageTiffImage(System.String,System.Int32)">
            <summary>
            Renders the pages of the PDF as TIFF (Tagged Image File Format / Tif) file and saves it to disk.
            <para>Specific image dimensions and page numbers may be given as optional parameters</para><para>FileNamePattern should normally contain an asterisk (*) character which will be substituted for the
            page numbers</para></summary>
            <param name="FileName">A full file path for the output file.  E.g.  C:\images\pdf_pages.tiff</param>
            <param name="DPI">The desired resolution of the output Images.</param>
            <returns>
            An array of the file paths of the image files created.
            </returns>
            <remarks>The <paramref name="DPI" /> will be ignored under Linux and macOS.</remarks>
        </member>
        <member name="M:IronPdf.PdfDocument.ToMultiPageTiffImage(System.String,System.Collections.Generic.IEnumerable{System.Int32},System.Int32)">
            <summary>
            Renders the pages of the PDF as TIFF (Tagged Image File Format / Tif) file and saves it to disk.
            <para>Specific image dimensions and page numbers may be given as optional parameters</para><para>FileNamePattern should normally contain an asterisk (*) character which will be substituted for the
            page numbers</para></summary>
            <param name="FileName">A full file path for the output file.  E.g.  C:\images\pdf_pages.tiff</param>
            <param name="PageIndexes">A list of the specific zero based page number to render</param>
            <param name="DPI">The desired resolution of the output Images.</param>
            <returns>
            An array of the file paths of the image files created.
            </returns>
            <remarks>The <paramref name="DPI" /> will be ignored under Linux and macOS.</remarks>
        </member>
        <member name="M:IronPdf.PdfDocument.ToMultiPageTiffImage(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Int32)">
            <summary>
            Renders the pages of the PDF as TIFF (Tagged Image File Format / Tif) file and saves it to disk.
            <para>Specific image dimensions and page numbers may be given as optional parameters</para><para>FileNamePattern should normally contain an asterisk (*) character which will be substituted for the
            page numbers</para></summary>
            <param name="FileName">A full file path for the output file.  E.g.  C:\images\pdf_pages.tiff</param>
            <param name="ImageMaxWidth">The target maximum width(in pixel) of the output images.</param>
            <param name="ImageMaxHeight">The target maximum height(in pixel) of the output images.</param>
            <param name="DPI">The desired resolution of the output Images.</param>
            <returns>
            An array of the file paths of the image files created.
            </returns>
            <remarks>The <paramref name="DPI" /> will be ignored under Linux and macOS.</remarks>
        </member>
        <member name="M:IronPdf.PdfDocument.ToMultiPageTiffImage(System.String,System.Collections.Generic.IEnumerable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Int32)">
            <summary>
            Renders the pages of the PDF as TIFF (Tagged Image File Format / Tif) file and saves it to disk.
            <para>Specific image dimensions and page numbers may be given as optional parameters</para><para>FileNamePattern should normally contain an asterisk (*) character which will be substituted for the
            page numbers</para></summary>
            <param name="FileName">A full file path for the output file.  E.g.  C:\images\pdf_pages.tiff</param>
            <param name="PageIndexes">A list of the specific zero based page numbe to number to render</param>
            <param name="ImageMaxWidth">The target maximum width(in pixel) of the output images.</param>
            <param name="ImageMaxHeight">The target maximum height(in pixel) of the output images.</param>
            <param name="DPI">The desired resolution of the output Images.</param>
            <returns>
            An array of the file paths of the image files created.
            </returns>
            <remarks>The <paramref name="DPI" /> will be ignored under Linux and macOS.</remarks>
        </member>
        <member name="M:IronPdf.PdfDocument.WatermarkAllPages(System.String,IronPdf.Editing.WaterMarkLocation,System.Int32,System.Int32,System.String)">
            <summary>
            Watermarks all pages of this PDF with HTML content. <para>Watermarks are restricted to basic positioning and
            a 100mm by 100mm maximum size.</para></summary>
            <param name="Html">The HTML fragment</param>
            <param name="Location">The location of the watermark. <see cref="T:IronPdf.PdfDocument.WaterMarkLocation" /></param>
            <param name="Opacity">The opacity of the watermark from 0-100%. 100 is opaque, 0 is invisible.</param>
            <param name="Rotation">The rotation of the watermark content in clockwise degrees.</param>
            <param name="Hyperlink">An optional hyperlink which the watermark will link to.</param>
            <returns>Returns this PdfDocument object, allowing for a 'fluent' (LINQ like) chained in-line code style</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.WatermarkPage(System.String,System.Int32,IronPdf.Editing.WaterMarkLocation,System.Int32,System.Int32,System.String)">
            <summary>
            Watermarks a single page of this PDF with HTML content. <para>Watermarks are restricted to basic positioning
            and a 100mm by 100mm maximum size.</para></summary>
            <param name="Html">The HTML fragment</param>
            <param name="PageIndexToWaterMark">The page index (zero-based page number) of this PDF to watermark.</param>
            <param name="Location">The location of the watermark. <see cref="T:IronPdf.PdfDocument.WaterMarkLocation" /></param>
            <param name="Opacity">The opacity of the watermark from 0-100%. 100 is opaque, 0 is invisible.</param>
            <param name="Rotation">The rotation of the watermark content in clockwise degrees.</param>
            <param name="Hyperlink">An optional hyperlink which the watermark will link to.</param>
            <returns>Returns this PdfDocument object, allowing for a 'fluent' (LINQ like) chained in-line code style</returns>
        </member>
        <member name="M:IronPdf.PdfDocument.WatermarkPages(System.String,System.Collections.Generic.IEnumerable{System.Int32},IronPdf.Editing.WaterMarkLocation,System.Int32,System.Int32,System.String,IronPdf.Editing.WaterMarkPositioning)">
            <summary>
            Watermarks all pages of this PDF with HTML content. <para>Watermarks are restricted to basic positioning and
            a 100mm by 100mm maximum size.</para></summary>
            <param name="Html">The HTML fragment</param>
            <param name="PageIndexesToWaterMark">A list of page index (zero-based page number) of this PDF to watermark.</param>
            <param name="Location">The location of the watermark. <see cref="T:IronPdf.Editing.WaterMarkLocation" /></param>
            <param name="Opacity">The opacity of the watermark from 0-100%. 100 is opaque, 0 is invisible.</param>
            <param name="Rotation">The rotation of the watermark content in clockwise degrees.</param>
            <param name="Hyperlink">An optional hyperlink which the watermark will link to.</param>
            <param name="positionOptions">Additional options for positioning the watermark on the page</param>
            <returns>Returns this PdfDocument object, allowing for a 'fluent' (LINQ like) chained in-line code style</returns>
        </member>
        <member name="T:IronPdf.PDFHeaderFooter">
            <exclude />
        </member>
        <member name="T:IronPdf.PdfPage">
            <exclude />
        </member>
        <member name="T:IronPdf.PdfPrintOptions">
            <exclude />
        </member>
        <member name="T:IronPdf.PdfPrintOptions.PdfCssMediaType">
            <summary>
            Legacy support. Has been replaced by <see cref="T:IronPdf.Rendering.PdfCssMediaType" />.
            </summary>
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfCssMediaType.Screen">
            <summary>
            Screen
            </summary>
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfCssMediaType.Print">
            <summary>
            Print
            </summary>
        </member>
        <member name="T:IronPdf.PdfPrintOptions.PdfPaperSize">
            <summary>
             Legacy support. Has been replaced by <see cref="T:IronPdf.Rendering.PdfCssMediaType" />.
             </summary>
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.Letter">
            8.5in x 11in
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.Legal">
            8.5in x 14in
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.A4">
            210mm x 297mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.CSheet">
            17in x 22in
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.DSheet">
            22in x 34in
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.ESheet">
            34in x 44in
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.LetterSmall">
            8.5in x 11in
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.Tabloid">
            11in x 17in
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.Ledger">
            17in x 11in
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.Statement">
            5.5in x 8.5in
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.Executive">
            7.25in x 10.5in
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.A3">
            297mm x 420mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.A4Small">
            210mm x 297mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.A5">
            148mm x 210mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.B4">
            250mm x 353mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.B5">
            176mm x 250mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.Folio">
            8.5in x 13in
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.Quarto">
            215mm x 275mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.Standard10x14">
            10in x 14in
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.Standard11x17">
            11in x 17in
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.Note">
            8.5in x 11in
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.Number9Envelope">
            3.875in x 8.875in
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.Number10Envelope">
            4.125in x 9.5in
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.Number11Envelope">
            4.5in x 10.375in
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.Number12Envelope">
            4.75in x 11in
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.Number14Envelope">
            5in x 11.5in
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.DLEnvelope">
            110mm x 220mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.C5Envelope">
            162mm x 229mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.C3Envelope">
            324mm x 458mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.C4Envelope">
            229mm x 324mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.C6Envelope">
            114mm x 162mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.C65Envelope">
            114mm x 229mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.B4Envelope">
            250mm x 353mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.B5Envelope">
            176mm x 250mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.B6Envelope">
            176mm x 125mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.ItalyEnvelope">
            110mm x 230mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.MonarchEnvelope">
            3.875in x 7.5in
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.PersonalEnvelope">
            3.625in x 6.5in
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.USStandardFanfold">
            14.875in x 11in
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.GermanStandardFanfold">
            8.5in x 12in
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.GermanLegalFanfold">
            8.5in x 13in
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.IsoB4">
            250mm x 353mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.JapanesePostcard">
            100mm x 148mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.Standard9x11">
            9in x 11in
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.Standard10x11">
            10in x 11in
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.Standard15x11">
            15in x 11in
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.InviteEnvelope">
            220mm x 220mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.LetterExtra">
            9.275in x 12in
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.LegalExtra">
            9.275in x 15in
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.TabloidExtra">
            11.69in x 18in
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.A4Extra">
            236mm x 322mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.LetterTransverse">
            8.275in x 11in
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.A4Transverse">
            210mm x 297mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.LetterExtraTransverse">
            9.275in x 12in
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.APlus">
            227mm x 356mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.BPlus">
            305mm x 487mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.LetterPlus">
            8.5in x 12.69in
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.A4Plus">
            210mm x 330mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.A5Transverse">
            148mm x 210mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.B5Transverse">
            182mm x 257mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.A3Extra">
            322mm x 445mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.A5Extra">
            174mm x 235mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.B5Extra">
            201mm x 276mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.A2">
            420mm x 594mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.A3Transverse">
            297mm x 420mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.A3ExtraTransverse">
            322mm x 445mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.JapaneseDoublePostcard">
            200mm x 148mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.A6">
            105mm x 148mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.LetterRotated">
            11in x 8.5in
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.A3Rotated">
            420mm x 297mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.A4Rotated">
            297mm x 210mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.A5Rotated">
            210mm x 148mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.B4JisRotated">
            364mm x 257mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.B5JisRotated">
            257mm x 182mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.JapanesePostcardRotated">
            148mm x 100mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.JapaneseDoublePostcardRotated">
            148mm x 200mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.A6Rotated">
            148mm x 105mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.B6Jis">
            128mm x 182mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.B6JisRotated">
            182mm x 128mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.Standard12x11">
            12in x 11in
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.Prc16K">
            146mm x 215mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.Prc32K">
            97mm x 151mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.Prc32KBig">
            97mm x 151mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.PrcEnvelopeNumber1">
            102mm x 165mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.PrcEnvelopeNumber2">
            102mm x 176mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.PrcEnvelopeNumber3">
            125mm x 176mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.PrcEnvelopeNumber4">
            110mm x 208mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.PrcEnvelopeNumber5">
            110mm x 220mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.PrcEnvelopeNumber6">
            120mm x 230mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.PrcEnvelopeNumber7">
            160mm x 230mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.PrcEnvelopeNumber8">
            120mm x 309mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.PrcEnvelopeNumber9">
            229mm x 324mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.PrcEnvelopeNumber10">
            324mm x 458mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.Prc16KRotated">
            146mm x 215mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.Prc32KRotated">
            97mm x 151mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.Prc32KBigRotated">
            97mm x 151mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.PrcEnvelopeNumber1Rotated">
            165mm x 102mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.PrcEnvelopeNumber2Rotated">
            176mm x 102mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.PrcEnvelopeNumber3Rotated">
            176mm x 125mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.PrcEnvelopeNumber4Rotated">
            208mm x 110mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.PrcEnvelopeNumber5Rotated">
            220mm x 110mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.PrcEnvelopeNumber6Rotated">
            230mm x 120mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.PrcEnvelopeNumber7Rotated">
            230mm x 160mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.PrcEnvelopeNumber8Rotated">
            309mm x 120mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.PrcEnvelopeNumber9Rotated">
            324mm x 229mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.PrcEnvelopeNumber10Rotated">
            458mm x 324mm
        </member>
        <member name="F:IronPdf.PdfPrintOptions.PdfPaperSize.Custom">
            Set using SetCustomPaperSizeInInches or SetCustomPaperSizeInMillimeters
        </member>
        <member name="T:IronPdf.TempFolder">
            <exclude />
        </member>
        <member name="M:IronPdf.TempFolder.CleanupTempImages(System.Nullable{System.TimeSpan})">
            <exclude />
        </member>
        <member name="T:IronPdf.Util">
            <exclude />
        </member>
        <member name="M:IronPdf.Util.ImageToDataUri(System.Drawing.Image,System.Boolean)">
            <exclude />
        </member>
        <member name="T:IronPdf.PdfSignature">
            <exclude />
        </member>
        <member name="M:IronPdf.PdfSignature.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Initializes a new instance of the <see cref="T:IronPdf.PdfSignature" /> class.
            </summary>
            <param name="ExportableNativeCertificate">The exportable native certificate as a System.Security.Cryptography.X509Certificates.X509Certificate2.</param>
        </member>
        <member name="M:IronPdf.PdfSignature.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IronPdf.PdfSignature" /> class using a .pfx or .p12 digital signature
            file.
            </summary>
            <param name="FilePathToCertificate">The file path to certificate.</param>
            <param name="Password">The certificate's password.</param>
        </member>
        <member name="M:IronPdf.PdfSignature.#ctor(System.Byte[],System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IronPdf.PdfSignature" /> class.
            </summary>
            <param name="CertificateRawData">The certificate as a binary data (byte array).</param>
            <param name="Password">The certificate's password.</param>
        </member>
        <member name="T:IronPdf.License">
            <summary>
             Allows IronPdf license keys to be applied globally across an application.
             </summary>
        </member>
        <member name="F:IronPdf.License.LicenseKey">
            <summary>
             Removes watermarks. Get Licensed at https://ironpdf.com/licensing <para>For .Net framework applications, a
             license key can alternatively be added to Web.Config or App.Config XML file using  &lt;add
             key="IronPdf.LicenseKey" value="IRONPDF-LICENSE-KEY"/&gt; within the appSettings tag. See
             https://ironpdf.com/docs/license/license-keys/</para><para>For .Net Core applications, a license key  may
             be added to appsettings.json where the key name is "IronPdf.LicenseKey" and the value is a valid IronPDF
             trial or full license key.</para><para>See https://ironpdf.com/licensing/ for licensing options.</para></summary>
        </member>
        <member name="F:IronPdf.License.SimulateNoLicenseKey">
            Internal testing use only
            <exclude /></member>
        <member name="M:IronPdf.License.ResetLicenseCache">
            Internal testing use only
            <exclude /></member>
        <member name="M:IronPdf.License.IsValidLicense(System.String)">
            <summary>
            Determines whether a string license key is valid. <para>See https://ironpdf.com/licensing/ for trial,
            development and commercial deployment licensing options.</para></summary>
            <param name="LicenseKey">IronPDF license key as a string</param>
            <returns>True if the license key given is valid.</returns>
        </member>
        <member name="P:IronPdf.License.IsLicensed">
            <summary>
            Determines whether this instance of IronPDF is Licensed. <para>Will return false unless a <see cref="F:IronPdf.License.LicenseKey" /> is set to a valid trial or full license key in IronPdf.License.LicenseKey,
            Web.Config , App.Config or appsettings.json in .Net Core.</para><para>See https://ironpdf.com/licensing/ and https://ironpdf.com/docs/license/license-keys/</para></summary>
            <returns>True if the license key given is valid.</returns>
        </member>
        <member name="T:IronPdf.MetaData.PdfCustomMetadataProperties">
            <summary>
            Class that represents set of custom metadata properties
            </summary>
        </member>
        <member name="P:IronPdf.MetaData.PdfCustomMetadataProperties.Item(System.String)">
            <summary>
            Gets or sets element value with the specified key.
            </summary>
            <param name="key">The key of the element.</param>
            <returns />
        </member>
        <member name="M:IronPdf.MetaData.PdfCustomMetadataProperties.Add(System.String,System.String)">
            <summary>
            Method for adding property with the specified name and value. <para>You can convert value of any type to
            the string and store it in custom properties.</para></summary>
            <param name="name">The name of the custom PDF MetaData Property.</param>
            <param name="value">The value of the custom PDF MetaData Property as a String.</param>
        </member>
        <member name="M:IronPdf.MetaData.PdfCustomMetadataProperties.Remove(System.String)">
            <summary>
            Method for removing property by its name.
            </summary>
            <param name="name">The name of the property.</param>
            <returns>
                <c>true</c> if property was removed, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:IronPdf.MetaData.PdfDateFormatter.Convert(System.DateTime)">
            <summary>
            Convert the specified date into a PDF-compatible local date string with UTC offset information
            </summary>
            <param name="date">Date to convert</param>
            <returns>PDF-compatible local date string</returns>
        </member>
        <member name="M:IronPdf.MetaData.PdfDateFormatter.Convert(System.String)">
            <summary>
            Convert the specified PDF-compatible local date string with UTC offset information into a universal DateTime object
            </summary>
            <param name="text">Text to convert</param>
            <returns>Universal DateTime object</returns>
        </member>
        <member name="T:IronPdf.MetaData.PdfMetaData">
            <summary>
            A class defining PDF file meta-data. <para>Allows File meta-data to be read and set including: Authors, File
            Dates, Keywords, Title and Subject</para><para>Implemented in <see cref="P:IronPdf.PdfDocument.MetaData" />.</para></summary>
        </member>
        <member name="P:IronPdf.MetaData.PdfMetaData.Author">
            <summary>
            Gets or sets the Author of the document.
            </summary>
            <value>
            The author name as a string.
            </value>
        </member>
        <member name="P:IronPdf.MetaData.PdfMetaData.CreationDate">
            <summary>
            Gets or sets the PDF file creation DateTime.
            </summary>
            <value>
            DateTime of PDF file creation as a Local Time.  Use CreationDate.ToUniversalTime() to return a UTC DateTime
            </value>
        </member>
        <member name="P:IronPdf.MetaData.PdfMetaData.ModifiedDate">
            <summary>
            Gets or sets the PDF file last-modified DateTime.
            </summary>
            <value>
            DateTime of PDF file modification as a Local Time.  Use ModifiedDate.ToUniversalTime() to return a UTC DateTime.
            </value>
        </member>
        <member name="P:IronPdf.MetaData.PdfMetaData.Creator">
            <summary>
            Gets or sets the Creator of the document.
            </summary>
            <value>
            The creator name as a string.
            </value>
        </member>
        <member name="P:IronPdf.MetaData.PdfMetaData.CustomProperties">
            <summary>
            Property defining custom metadata properties of the document.
            </summary>
        </member>
        <member name="P:IronPdf.MetaData.PdfMetaData.Keywords">
            <summary>
            Gets or sets the Keywords of the document.  This helps search indexes and operating systems correctly
            index the PDF.
            </summary>
            <value>
            The Keywords of the document as a string.  It is customary to use comma separation between keywords.
            </value>
        </member>
        <member name="P:IronPdf.MetaData.PdfMetaData.Producer">
            <summary>
            Gets or sets the Producer of the document.
            </summary>
            <value>
            The producer name as a string.
            </value>
        </member>
        <member name="P:IronPdf.MetaData.PdfMetaData.Subject">
            <summary>
            Gets or sets the Subject of the document.  This helps search indexes and operating systems correctly
            index the PDF, and may appear in PDF viewer software.
            </summary>
            <value>
            The Subject of the document as a string.
            </value>
        </member>
        <member name="P:IronPdf.MetaData.PdfMetaData.Title">
            <summary>
            Gets or sets the Title of the document.  This helps search indexes and operating systems correctly index
            the PDF, and may appear in PDF viewer software.
            </summary>
            <value>
            The Title of the document as a string.
            </value>
        </member>
        <member name="T:IronPdf.Pages.PdfPage">
            <summary>
            A class which represents one page of a PDF Document.
            </summary>
        </member>
        <member name="P:IronPdf.Pages.PdfPage.Height">
            <summary>
            Gets the height of the pdf page in mm.
            </summary>
        </member>
        <member name="P:IronPdf.Pages.PdfPage.PageOrientation">
            <summary>
            Gets the page orientation.
            </summary>
        </member>
        <member name="P:IronPdf.Pages.PdfPage.PrintHeight">
            <summary>
            Gets the height of the pdf page  in printer points.
            </summary>
        </member>
        <member name="P:IronPdf.Pages.PdfPage.PrintWidth">
            <summary>
            Gets the width of the pdf page in printer points.
            </summary>
        </member>
        <member name="P:IronPdf.Pages.PdfPage.Width">
            <summary>
            Gets the width of the pdf page in mm.
            </summary>
        </member>
        <member name="T:IronPdf.Pages.PdfPagesCollection">
            <summary>
            Class for managing the collection of <see cref="T:IronPdf.Pages.PdfPage" /> elements.
            </summary>
        </member>
        <member name="P:IronPdf.Pages.PdfPagesCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:IronPdf.Pages.PdfPage" /> at the specified index.
            </summary>
            <value>
            The <see cref="T:IronPdf.Pages.PdfPage" />.
            </value>
            <param name="index">The index.</param>
            <returns />
        </member>
        <member name="M:IronPdf.Pages.PdfPagesCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            An enumerator that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:IronPdf.Pages.PdfPagesCollection.Count">
            <summary>
            Gets the number of elements contained in the collection.
            </summary>
            <value>
            The count of pages.
            </value>
        </member>
        <member name="T:IronPdf.PdfAttachment">
            <summary>
            Pdf document file attachment
            </summary>
        </member>
        <member name="P:IronPdf.PdfAttachment.Data">
            <summary>
            Raw attachment data
            </summary>
        </member>
        <member name="P:IronPdf.PdfAttachment.Index">
            <summary>
            Attachment index within the pdf document
            </summary>
        </member>
        <member name="P:IronPdf.PdfAttachment.Name">
            <summary>
            Attachment name as specified within the pdf document
            </summary>
        </member>
        <member name="T:IronPdf.PdfAttachmentCollection">
            <summary>
            Collection of attachments contained within a pdf document
            </summary>
        </member>
        <member name="P:IronPdf.PdfAttachmentCollection.Item(System.Int32)">
            <summary>
            Retrieve the attachment located at the specified index within this collection
            </summary>
            <param name="index">Index</param>
            <returns>Pdf attachment</returns>
        </member>
        <member name="M:IronPdf.PdfAttachmentCollection.GetEnumerator">
            <summary>
            Retrieve enumerator
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:IronPdf.PdfAttachmentCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Retrieve enumerator
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:IronPdf.PdfAttachmentCollection.AddAttachment(System.String,System.Byte[])">
            <summary>
            Add an attachment to the pdf document using the specified name and data
            </summary>
            <param name="name">Attachment name</param>
            <param name="data">Attachment data</param>
            <returns>Pdf attachment</returns>
        </member>
        <member name="M:IronPdf.PdfAttachmentCollection.RemoveAttachment(IronPdf.PdfAttachment)">
            <summary>
            Remove the specified attachment from the pdf document
            </summary>
            <param name="attachment">Attachment to remove</param>
        </member>
        <member name="T:IronPdf.PrintDoc.PdfPrintMultiplePages">
            <summary>
            Configuration for printing multiple PDF pages on a single page.
            </summary>
        </member>
        <member name="M:IronPdf.PrintDoc.PdfPrintMultiplePages.#ctor(System.Int32,System.Int32,IronPdf.Rendering.PdfPaperOrientation,System.Single)">
            <summary>
            Creates a new instance of the PdfPrintMultiplePages class.
            </summary>
            <param name="column">The number of pages to print horizontally.</param>
            <param name="row">The number of pages to print vertically.</param>
            <param name="orientation">
            The orientation in which PDF pages are layed out on the physical page.
            </param>
            <param name="margin">The margin between PDF pages in device units.</param>
        </member>
        <member name="P:IronPdf.PrintDoc.PdfPrintMultiplePages.Column">
            <summary>
            Gets the number of pages to print horizontally.
            </summary>
        </member>
        <member name="P:IronPdf.PrintDoc.PdfPrintMultiplePages.Margin">
            <summary>
            Gets the margin between PDF pages in device units.
            </summary>
        </member>
        <member name="P:IronPdf.PrintDoc.PdfPrintMultiplePages.Orientation">
            <summary>
            Gets the orientation in which PDF pages are layed out on the physical page.
            </summary>
        </member>
        <member name="P:IronPdf.PrintDoc.PdfPrintMultiplePages.Row">
            <summary>
            Gets the number of pages to print vertically.
            </summary>
        </member>
        <member name="T:IronPdf.PrintDoc.PdfPrintSettings">
            <summary>
            Configures the print document.
            </summary>
        </member>
        <member name="M:IronPdf.PrintDoc.PdfPrintSettings.#ctor(IronPdf.PrintDoc.PdfPrintMultiplePages)">
            <summary>
            Creates a new instance of the PdfPrintSettings class.
            </summary>
            <param name="multiplePages">
            Configuration for printing multiple PDF pages on a single page.
            </param>
        </member>
        <member name="P:IronPdf.PrintDoc.PdfPrintSettings.MultiplePages">
            <summary>
            Gets configuration for printing multiple PDF pages on a single page.
            </summary>
        </member>
        <member name="T:IronPdf.Security.PdfEditSecurity">
            <summary>
            Enumeration defining levels of PDF user access rights to edit a PDF.  Edit rights may also be limited by
            the User's PDF document client software. <para>See <see cref="P:IronPdf.Security.PdfSecuritySettings.AllowUserEdits" /></para></summary>
        </member>
        <member name="F:IronPdf.Security.PdfEditSecurity.NoEdit">
            <summary>
            The user may not edit the PDF unless they have the Owner password.
            </summary>
        </member>
        <member name="F:IronPdf.Security.PdfEditSecurity.EditPages">
            <summary>
            The user may re-arrange pages, rotate pages and manage PDF thumbnails, but may not otherwise edit
            the PDF unless they have the Owner password.
            </summary>
        </member>
        <member name="F:IronPdf.Security.PdfEditSecurity.EditAll">
            <summary>
            The user may edit the PDF as allowed by their PDF client software.
            </summary>
        </member>
        <member name="T:IronPdf.Security.PdfPrintSecurity">
            <summary>
            Enumeration defining levels of PDF user access rights to print a PDF. <para>See <see cref="P:IronPdf.Security.PdfSecuritySettings.AllowUserPrinting" /></para></summary>
        </member>
        <member name="F:IronPdf.Security.PdfPrintSecurity.NoPrint">
            <summary>
            The user may not print the PDF unless they have the Owner password.
            </summary>
        </member>
        <member name="F:IronPdf.Security.PdfPrintSecurity.PrintLowQuality">
            <summary>
            The user may only print the PDF at low resolution unless they have the Owner password.
            </summary>
        </member>
        <member name="F:IronPdf.Security.PdfPrintSecurity.FullPrintRights">
            <summary>
            Users may print the PDF without restriction.
            </summary>
        </member>
        <member name="T:IronPdf.Security.PdfSecuritySettings">
            <summary>
            A class defining user security settings for a PDF document. <para>Allows the developer to control user
            access passwords, encryption, and also who may edit, print and copy content from the PDF document</para><para>Implemented in <see cref="P:IronPdf.PdfDocument.SecuritySettings" />.</para></summary>
        </member>
        <member name="M:IronPdf.Security.PdfSecuritySettings.MakePdfDocumentReadOnly(System.String)">
            <summary>
            Makes this PDF document read only such that: <para>Content is encrypted at 128 bit. Copy and paste of
            content is disallowed. Annotations and form editing are disabled.</para></summary>
            <param name="OwnerPassword">
            The owner password for the PDF.  A string for owner password is required to enable PDF encryption and
            all document security options.
            </param>
        </member>
        <member name="M:IronPdf.Security.PdfSecuritySettings.RemovePasswordsAndEncryption">
            <summary>
            Removes all user and owner password security for a PDF document.  Also disables content encryption.
            <para>Content is encrypted at 128 bit. Copy and paste of content is disallowed. Annotations and form
            editing are disabled.</para></summary>
        </member>
        <member name="P:IronPdf.Security.PdfSecuritySettings.AllowUserAnnotations">
            <summary>
            Gets or sets the permissions for users to annotate the PDF document with comments. <para>If
            AllowUserAnnotations is set <c>false</c>, the <see cref="P:IronPdf.Security.PdfSecuritySettings.OwnerPassword" /> must be set for the security
            measure to take effect.</para></summary>
            <value>
                <c>true</c> if users may annotate the PDF document, otherwise <c>false</c>.
            </value>
        </member>
        <member name="P:IronPdf.Security.PdfSecuritySettings.AllowUserCopyPasteContent">
            <summary>
            Gets or sets the permissions for users to extract or 'copy &amp; paste' content (text and images) from
            the PDF document. <para>If AllowUserCopyPasteContent is set <c>false</c>,  the <see cref="P:IronPdf.Security.PdfSecuritySettings.OwnerPassword" /> must also be set for the security measure to take effect.</para></summary>
            <value>
                <c>true</c> if users may 'copy and paste' content out of the PDF otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:IronPdf.Security.PdfSecuritySettings.AllowUserCopyPasteContentForAccessibility">
            <summary>
            Gets or sets the permissions for users to extract or 'copy &amp; paste' content (text and images) from the PDF document for accessibility.
            </summary>
            <value>
                <c>true</c> if users may 'copy and paste' content out of the PDF otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:IronPdf.Security.PdfSecuritySettings.AllowUserEdits">
            <summary>
            Gets or sets the permissions for users edit the PDF document.  The features to edit the document depends
            entirely on the PDF client software used by the end user. <para>If editing rights are restricted, then
            the <see cref="P:IronPdf.Security.PdfSecuritySettings.OwnerPassword" /> must be set for the security measure to take effect.</para></summary>
            <value>
            The <see cref="T:IronPdf.Security.PdfEditSecurity" /> value for user edit security.
            </value>
        </member>
        <member name="P:IronPdf.Security.PdfSecuritySettings.AllowUserFormData">
            <summary>
            Gets or sets the permissions for users to fill-in (enter data into) forms in the PDF document. <para>If
            AllowUserFormData is set <c>false</c>, the <see cref="P:IronPdf.Security.PdfSecuritySettings.OwnerPassword" /> must be set for the security
            measure to take effect.</para><para>Note. If you want to make the form readonly in Adobe Acrobat Reader
            please call <see cref="M:IronPdf.Security.PdfSecuritySettings.MakePdfDocumentReadOnly(System.String)" /> method or set <see cref="P:IronPdf.Security.PdfSecuritySettings.AllowUserEdits" /> to <see cref="F:IronPdf.Security.PdfEditSecurity.NoEdit" /> and set <see cref="P:IronPdf.Security.PdfSecuritySettings.OwnerPassword" />.</para></summary>
            <value>
                <c>true</c> if users may annotate the PDF document, otherwise <c>false</c>.  Setting AllowUserFormData
            true will also enable annotations.
            </value>
        </member>
        <member name="P:IronPdf.Security.PdfSecuritySettings.AllowUserPrinting">
            <summary>
            Gets or sets the permissions for users to print the PDF document. <para>If print rights are restricted,
            then the <see cref="P:IronPdf.Security.PdfSecuritySettings.OwnerPassword" /> must be set for the security measure to take effect.</para></summary>
            <value>
            The <see cref="T:IronPdf.Security.PdfPrintSecurity" /> value for user printing.
            </value>
        </member>
        <member name="P:IronPdf.Security.PdfSecuritySettings.OwnerPassword">
            <summary>
            Sets the owner password and enables 128Bit encryption of PDF content. An owner password is one used to
            enable and disable all other security settings. <para>OwnerPassword must be set to a non empty string
            value for <see cref="P:IronPdf.Security.PdfSecuritySettings.AllowUserCopyPasteContent" />, <see cref="P:IronPdf.Security.PdfSecuritySettings.AllowUserAnnotations" />, <see cref="P:IronPdf.Security.PdfSecuritySettings.AllowUserFormData" />,s <see cref="P:IronPdf.Security.PdfSecuritySettings.AllowUserPrinting" /> and <see cref="P:IronPdf.Security.PdfSecuritySettings.AllowUserEdits" /> to be
            restricted.</para></summary>
        </member>
        <member name="P:IronPdf.Security.PdfSecuritySettings.UserPassword">
            <summary>
            Sets the user password and enables 128Bit encryption of PDF content . <para>A user password if a
            password that each user must enter to open or print the PDF document.</para></summary>
        </member>
        <member name="T:IronPdf.Signing.Inspection.VerifiedSignature">
            <summary>
            A class that represents a verified digital signature for a PDF document.
            </summary>
        </member>
        <member name="M:IronPdf.Signing.Inspection.VerifiedSignature.ToString">
            <summary>
            Returns a string that represents the current digital signature for a PDF document.
            </summary>
            <returns>A string that represents the current digital signature for a PDF document.</returns>
        </member>
        <member name="P:IronPdf.Signing.Inspection.VerifiedSignature.SignatureName">
            <summary>
            Gets the field name of the digital signature.
            </summary>
        </member>
        <member name="P:IronPdf.Signing.Inspection.VerifiedSignature.SigningContact">
            <summary>
            The contact person or email address for signing related inquiries (optional).
            </summary>
        </member>
        <member name="P:IronPdf.Signing.Inspection.VerifiedSignature.SigningDate">
            <summary>
            The date and time of the digital signature.
            </summary>
        </member>
        <member name="P:IronPdf.Signing.Inspection.VerifiedSignature.SigningLocation">
            <summary>
            The physical location the PDF was signed (optional).
            </summary>
        </member>
        <member name="P:IronPdf.Signing.Inspection.VerifiedSignature.SigningReason">
            <summary>
            The reason the PDF was signed (optional).
            </summary>
        </member>
        <member name="P:IronPdf.Signing.Inspection.VerifiedSignature.Valid">
            <summary>
                <c>true</c> if the signature is valid,
            </summary>
        </member>
        <member name="T:IronPdf.Signing.PdfSignature">
            <summary>
            A class that represents a PDF signing certificate (.PFX or .p12) format which can be used to digitally sign a
            PDF. This protecting it from alteration.
            </summary>
        </member>
        <member name="F:IronPdf.Signing.PdfSignature.SignatureDate">
            <summary>
            The date and time of the digital signature. If left null, the signature will be timestamped at the
            millisecond that the PdfDocument is saved to Disk or Stream.
            </summary>
        </member>
        <member name="F:IronPdf.Signing.PdfSignature.SignatureImage">
            <summary>
            A visual image for the sign, often a PNG of a human signature or company stamp (optional). <para>This
            appends a visual signature in addition to  cryptographic signing.</para><seealso cref="M:IronPdf.Signing.PdfSignature.LoadSignatureImageFromFile(System.String)" /><seealso cref="M:IronPdf.Signing.PdfSignature.LoadSignatureImageFromStream(System.IO.Stream)" /></summary>
        </member>
        <member name="F:IronPdf.Signing.PdfSignature.SigningContact">
            <summary>
            The contact person or email address for signing related inquiries (optional).
            </summary>
        </member>
        <member name="F:IronPdf.Signing.PdfSignature.SigningLocation">
            <summary>
            The physical location the PDF was signed (optional).
            </summary>
        </member>
        <member name="F:IronPdf.Signing.PdfSignature.SigningReason">
            <summary>
            The reason the PDF was signed (optional).
            </summary>
        </member>
        <member name="M:IronPdf.Signing.PdfSignature.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Initializes a new instance of the <see cref="T:IronPdf.Signing.PdfSignature" /> class.
            </summary>
            <param name="ExportableNativeCertificate">The exportable native certificate as a System.Security.Cryptography.X509Certificates.X509Certificate2.</param>
        </member>
        <member name="M:IronPdf.Signing.PdfSignature.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IronPdf.Signing.PdfSignature" /> class using a .pfx or .p12 digital signature
            file.
            </summary>
            <param name="FilePathToCertificate">The file path to certificate.</param>
            <param name="Password">The certificate's password.</param>
        </member>
        <member name="M:IronPdf.Signing.PdfSignature.#ctor(System.Byte[],System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IronPdf.Signing.PdfSignature" /> class.
            </summary>
            <param name="CertificateRawData">The certificate as a binary data (byte array).</param>
            <param name="Password">The certificate's password.</param>
        </member>
        <member name="M:IronPdf.Signing.PdfSignature.LoadSignatureImageFromFile(System.String)">
            <summary>
            Loads a signature image from an image file. This appends a visual signature in addition to  cryptographic
            signing.
            </summary>
            <param name="FilePath">The file path.</param>
        </member>
        <member name="M:IronPdf.Signing.PdfSignature.LoadSignatureImageFromStream(System.IO.Stream)">
            <summary>
            Loads a signature image from a stream. This appends visual signature in addition to  cryptographic signing.
            </summary>
            <param name="Stream">The image file as a stream.</param>
        </member>
        <member name="M:IronPdf.Signing.PdfSignature.SignPdfFile(System.String,System.Boolean,System.String,System.String)">
            <summary>
            Signs an existing PDF file.
            </summary>
            <param name="PdfFilePath">The PDF file path.</param>
            <param name="RemoveOldSignatures">if set to <c>true</c> old digital signatures are removed to ensure signing validity.</param>
            <param name="UserPassword">Optional user password if the PDF document is encrypted.</param>
            <param name="OwnerPassword">Optional owner password if the PDF document is encrypted.</param>
            <returns>
                <c>true</c> if successful.
            </returns>
        </member>
        <member name="T:IronPdf.TextHeaderFooter">
            <summary>
            Defines PDF Header and Footer display options.  
            <para><see cref="T:IronPdf.TextHeaderFooter" /> uses a logial apporach to rendering Headers and Footers for the most common use cases.</para></summary>
            <seealso cref="T:IronPdf.HtmlHeaderFooter" />
        </member>
        <member name="P:IronPdf.TextHeaderFooter.CenterText">
            <summary>
            Sets the centered header text for the PDF document. <para>Merge meta-data into your header using any of
            these placeholder strings: {page} {total-pages} {url} {date} {time} {html-title} {pdf-title}</para></summary>
        </member>
        <member name="P:IronPdf.TextHeaderFooter.DrawDividerLine">
            <summary>
            Adds a horizontal line divider between the header / footer and the page content on every page of the PDF
            document.
            </summary>
        </member>
        <member name="P:IronPdf.TextHeaderFooter.FontFamily">
            <summary>
            Font used to render the PDF header.
            </summary>
        </member>
        <member name="P:IronPdf.TextHeaderFooter.FontSize">
            <summary>
            Font size in px.
            </summary>
        </member>
        <member name="P:IronPdf.TextHeaderFooter.LeftText">
            <summary>
            Sets the left hand side header text for the PDF document. <para>Merge meta-data into your header using any
            of these placeholder strings: {page} {total-pages} {url} {date} {time} {html-title} {pdf-title}</para></summary>
        </member>
        <member name="P:IronPdf.TextHeaderFooter.RightText">
            <summary>
            Sets the right hand side header text for the PDF document. <para>Merge meta-data into your header using any
            of these placeholder strings: {page} {total-pages} {url} {date} {time} {html-title} {pdf-title}</para></summary>
        </member>
        <member name="P:IronPdf.TextHeaderFooter.Spacing">
            <summary>
            Vertical spacing between the header and page content in millimeters.
            </summary>
        </member>
        <member name="M:IronPdf.TextHeaderFooter.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>System.Object of type SimpleHeaderFooter</returns>
        </member>
    </members>
</doc>